{"version":3,"sources":["webpack:///./src/main/web/widgets/BrowseHistoryComponent.tsx"],"names":["props","context","goBack","MemoryHistory","goForward","clearRecent","forceMenuClosure","clearPersistedRecentPages","resetMemoryHistory","getMemoryEntries","dropdownToggle","newValue","setState","menuOpen","state","links","locIndex","componentDidMount","this","entries","_","uniqWith","isEqual","indexOf","location","map","entry","index","uriPath","pathname","search","resolveResourceIri","URI","onValue","mUri","entryUri","removeTagsFromUri","getOrElse","currentState","concat","link","sort","link1","link2","uri","strippedUri","exec","toString","length","render","className","Nav","bsStyle","NavDropdown","open","onToggle","val","disabled","title","id","key","ResourceLinkComponent","guessRepository","onClick","NavItem","href","React","Component","BrowseHistoryComponent"],"mappings":"6IAsBA,OACA,QACA,SACA,QACA,QACA,SAKA,SAEA,QAqBA,kBACE,gCAAYA,EAAOC,GAAnB,MACE,YAAMD,EAAOC,IAAQ,K,OA2Cf,EAAAC,OAAS,WACf,EAAAC,cAAcD,UAGR,EAAAE,UAAY,WAClB,EAAAD,cAAcC,aAGR,EAAAC,YAAc,WACpB,EAAKC,mBACL,EAAAC,4BACA,EAAAC,qBACA,EAAKC,oBAGC,EAAAC,eAAiB,SAACC,GACxB,EAAKC,SAAS,CAAEC,SAAUF,KAGpB,EAAAL,iBAAmB,WACzB,EAAKM,SAAS,CAAEC,UAAU,KA9D1B,EAAKC,MAAQ,CACXC,MAAO,GACPF,UAAU,EACVG,SAAU,G,EA2GhB,OAjH4C,sCAU1C,iCAAAC,kBAAA,WACEC,KAAKT,oBAGC,iCAAAA,iBAAR,sBACES,KAAKN,SAAS,CAAEG,MAAO,KACvB,IAAII,EAAUC,EAAEC,SAAS,EAAAlB,cAAcgB,QAASC,EAAEE,SAClDJ,KAAKN,SAAS,CAAEI,SAAUG,EAAQI,QAAQ,EAAApB,cAAcqB,YACxDL,EAAQM,KAAI,SAACC,EAAOC,GAClB,IACMC,EAAUF,EAAMG,UAAYH,EAAMI,OAASJ,EAAMI,OAAS,IAChE,EAAAC,mBAAmBC,EAAIJ,IAAUK,SAAQ,SAACC,GACxC,IAAMC,EAAW,EAAKC,kBAAkBF,EAAKG,UAAU,OACnDF,GACF,EAAKvB,UAAS,SAAC0B,GACb,MAAO,CACLvB,MAAOuB,EAAavB,MACjBwB,OAAO,CAAEZ,MAAOA,EAAOa,KAAML,IAC7BM,MAAK,SAACC,EAAOC,GAAU,OAAAA,EAAMhB,MAAQe,EAAMf,oBAWlD,iCAAAS,kBAAR,SAA0BQ,GACxB,IACMC,EADQ,YACYC,KAAKF,EAAIG,YACnC,OAAOF,EAAYG,OAAS,EAAIH,EAAY,GAAKD,EAAIG,YA0BvD,iCAAAE,OAAA,sBACE,OACE,uBAAKC,UAAU,kBACb,gBAAC,EAAAC,IAAG,CAACC,QAAS,SACZ,gBAAC,EAAAC,YAAW,CACVC,KAAMpC,KAAKJ,MAAMD,SACjB0C,SAAU,SAACC,GAAQ,SAAK9C,eAAe8C,IACvCC,SAAUvC,KAAKJ,MAAMC,MAAMiC,OAAS,EACpCU,MAAM,SACNC,GAAG,sBAEFzC,KAAKJ,MAAMC,MAAMU,KAAI,SAACe,EAAMb,GAC3B,OACE,sBAAIiC,IAAKpB,EAAKA,KAAOb,GACnB,gBAAC,EAAAkC,sBAAqB,CAACjB,IAAKJ,EAAKA,KAAMsB,iBAAiB,QAI7D5C,KAAKJ,MAAMC,MAAMiC,OAAS,GAAK,sBAAIE,UAAW,YAC9ChC,KAAKJ,MAAMC,MAAMiC,OAAS,GACzB,0BACE,qBAAGe,QAAS7C,KAAKb,aAAW,kBAIlC,gBAAC,EAAA2D,QAAO,CACNP,SAAUvC,KAAKJ,MAAMC,MAAMiC,OAAS,GAAK9B,KAAKJ,MAAME,SAAW,EAC/D0C,MAAM,OACNK,QAAS7C,KAAKhB,OACd+D,KAAK,KAEL,qBAAGf,UAAU,sBAEf,gBAAC,EAAAc,QAAO,CACNP,SAAUvC,KAAKJ,MAAME,WAAaE,KAAKJ,MAAMC,MAAMiC,OAAS,EAC5DU,MAAM,UACNK,QAAS7C,KAAKd,UACd6D,KAAK,KAEL,qBAAGf,UAAU,0BAMzB,uBAjHA,CAA4CgB,EAAMC,WAArC,EAAAC,yBAmHb,UAAeA","file":"rs-browse-history-7d6b57c49eeedbbb6e7f.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Mike Kelly <mkelly@britishmuseum.org>\n */\n\nimport * as React from 'react';\nimport { Navbar, Nav, NavItem, MenuItem, NavDropdown } from 'react-bootstrap';\nimport * as URI from 'urijs';\nimport * as _ from 'lodash';\nimport { resolveResourceIri } from 'platform/api/navigation';\nimport {\n  clearPersistedRecentPages,\n  MemoryHistory,\n  resetMemoryHistory,\n} from 'platform/api/navigation/PersistentHistory';\nimport { ResourceLinkComponent } from 'platform/api/navigation/components/ResourceLinkComponent';\n\nimport './BrowseHistoryComponent.scss';\n\ninterface Props {}\n\ninterface Link {\n  index: number;\n  link: string;\n}\n\ninterface State {\n  links: Array<Link>;\n  menuOpen: boolean;\n  locIndex: number;\n}\n\n/**\n * BrowseHistoryComponent - component to display links to recent pages in a dropdown list,\n * together with browse forwards and backwards buttons\n * It is designed to appear in the breadcrumb bar\n */\n\nexport class BrowseHistoryComponent extends React.Component<Props, State> {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      links: [],\n      menuOpen: false,\n      locIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.getMemoryEntries();\n  }\n\n  private getMemoryEntries() {\n    this.setState({ links: [] });\n    let entries = _.uniqWith(MemoryHistory.entries, _.isEqual);\n    this.setState({ locIndex: entries.indexOf(MemoryHistory.location) });\n    entries.map((entry, index) => {\n      let nextUri;\n      const uriPath = entry.pathname + (entry.search ? entry.search : '');\n      resolveResourceIri(URI(uriPath)).onValue((mUri) => {\n        const entryUri = this.removeTagsFromUri(mUri.getOrElse(null));\n        if (entryUri) {\n          this.setState((currentState) => {\n            return {\n              links: currentState.links\n                .concat({ index: index, link: entryUri })\n                .sort((link1, link2) => link2.index - link1.index),\n            };\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * If the uri is surrounded by tags, remove them\n   */\n  private removeTagsFromUri(uri) {\n    const regex = /^<(.*)>$/g;\n    const strippedUri = regex.exec(uri.toString());\n    return strippedUri.length > 1 ? strippedUri[1] : uri.toString();\n  }\n\n  private goBack = () => {\n    MemoryHistory.goBack();\n  };\n\n  private goForward = () => {\n    MemoryHistory.goForward();\n  };\n\n  private clearRecent = () => {\n    this.forceMenuClosure();\n    clearPersistedRecentPages();\n    resetMemoryHistory();\n    this.getMemoryEntries();\n  };\n\n  private dropdownToggle = (newValue) => {\n    this.setState({ menuOpen: newValue });\n  };\n\n  private forceMenuClosure = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    return (\n      <div className=\"browse-history\">\n        <Nav bsStyle={'pills'}>\n          <NavDropdown\n            open={this.state.menuOpen}\n            onToggle={(val) => this.dropdownToggle(val)}\n            disabled={this.state.links.length < 1}\n            title=\"Recent\"\n            id=\"basic-nav-dropdown\"\n          >\n            {this.state.links.map((link, index) => {\n              return (\n                <li key={link.link + index}>\n                  <ResourceLinkComponent uri={link.link} guessRepository={true}></ResourceLinkComponent>\n                </li>\n              );\n            })}\n            {this.state.links.length > 1 && <li className={'divider'}></li>}\n            {this.state.links.length > 1 && (\n              <li>\n                <a onClick={this.clearRecent}>Clear recent</a>\n              </li>\n            )}\n          </NavDropdown>\n          <NavItem\n            disabled={this.state.links.length < 2 || this.state.locIndex < 1}\n            title=\"Back\"\n            onClick={this.goBack}\n            href=\"#\"\n          >\n            <i className=\"fa fa-caret-left\"></i>\n          </NavItem>\n          <NavItem\n            disabled={this.state.locIndex === this.state.links.length - 1}\n            title=\"Forward\"\n            onClick={this.goForward}\n            href=\"#\"\n          >\n            <i className=\"fa fa-caret-right\"></i>\n          </NavItem>\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default BrowseHistoryComponent;\n"],"sourceRoot":""}