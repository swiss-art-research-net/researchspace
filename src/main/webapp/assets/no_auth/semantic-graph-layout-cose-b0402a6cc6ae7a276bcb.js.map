{"version":3,"sources":["webpack:///./src/main/web/components/semantic/graph/layouts/CoseLayout.ts"],"names":["CoseLayout","registerCytoscapeLayout","identity","mapOptions","api","options","has"],"mappings":"iIAmBA,YACA,UAEA,UA6Ia,EAAAA,WAAa,EAAAC,wBAAwB,OAAQ,EAAAC,UAG1D,SAASC,WAAWC,EAAmBC,GACrC,GAAI,EAAAC,IAAID,EAAS,mBAAoB,CACnC,IAAM,EAAkBA,EAAyB,gBACjDA,EAAyB,gBAAI,WAAM,UAErC,GAAI,EAAAC,IAAID,EAAS,iBAAkB,CACjC,IAAM,EAAgBA,EAAuB,cAC7CA,EAAuB,cAAI,WAAM,UAEnC,GAAI,EAAAC,IAAID,EAAS,kBAAmB,CAClC,IAAM,EAAiBA,EAAwB,eAC/CA,EAAwB,eAAI,WAAM,UAEpC,OAAOA,KAfT,UAAe,EAAAL","file":"semantic-graph-layout-cose-b0402a6cc6ae7a276bcb.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { has } from 'lodash';\nimport { identity } from 'core.lambda';\n\nimport { registerCytoscapeLayout, CytoscapeApi } from '../api/Api';\n\n/**\n * The cose (Compound Spring Embedder) layout uses a physics simulation to lay out graphs. It works well with noncompound graphs and it has additional logic to support compound graphs well\n */\nexport interface SemanticGraphCoseLayoutConfig {\n  /**\n   * Whether to fit the viewport to the graph\n   *\n   * @default true\n   */\n  fit?: boolean;\n\n  /**\n   * The padding on fit in pixels\n   *\n   * @default 30\n   */\n  padding?: number;\n\n  /**\n   * Whether to transition the node positions\n   *\n   * @default false\n   */\n  animate?: boolean;\n\n  /**\n   * The layout animates only after this many milliseconds (prevents flashing on fast runs)\n   *\n   * @default 250\n   */\n  animationThreshold?: number;\n\n  /**\n   * Number of iterations between consecutive screen positions update (0 -> only updated on the end)\n   *\n   * @default 20\n   */\n  refresh?: number;\n\n  /**\n   * Randomize the initial positions of the nodes (true) or use existing positions (false)\n   *\n   * @default false\n   */\n  randomize?: boolean;\n\n  /**\n   * Extra spacing between components in non-compound graphs\n   *\n   * @default 100\n   */\n  componentSpacing?: number;\n\n  /**\n   * Node repulsion (non overlapping) multiplier\n   *\n   * @default 400000\n   */\n  nodeRepulsion?: number;\n\n  /**\n   * Node repulsion (overlapping) multiplier\n   *\n   * @default 10\n   */\n  nodeOverlap?: number;\n\n  /**\n   * Ideal edge (non nested) length\n   *\n   * @default 10\n   */\n  idealEdgeLength?: number;\n\n  /**\n   * Divisor to compute edge forces\n   *\n   * @default 100\n   */\n  edgeElasticity?: number;\n\n  /**\n   * Nesting factor (multiplier) to compute ideal edge length for nested edges\n   *\n   * @default 5\n   */\n  nestingFactor?: number;\n\n  /**\n   * Gravity force (constant)\n   *\n   * @default 80\n   */\n  gravity?: number;\n\n  /**\n   * Maximum number of iterations to perform\n   *\n   * @default 1000\n   */\n  numIter?: number;\n\n  /**\n   * Initial temperature (maximum node displacement)\n   *\n   * @default 200\n   */\n  initialTemp?: number;\n\n  /**\n   * Cooling factor (how the temperature is reduced between consecutive iterations\n   *\n   * @default 0.95\n   */\n  coolingFactor?: number;\n\n  /**\n   * Lower temperature threshold (below this point the layout will end)\n   *\n   * @default 1.0\n   */\n  minTemp?: number;\n\n  /**\n   * Whether to use threading to speed up the layout\n   *\n   * @default true\n   */\n  useMultitasking?: boolean;\n}\n\n/**\n * Register built-in cytoscape cose layout.\n *\n * @example\n *   <graph-layout-cose></graph-layout-cose>\n *\n * @see http://js.cytoscape.org/#layouts/cose\n */\nexport const CoseLayout = registerCytoscapeLayout('cose', identity, mapOptions);\nexport default CoseLayout;\n\nfunction mapOptions(api: CytoscapeApi, options: Cy.LayoutOptions): Cy.LayoutOptions {\n  if (has(options, 'idealEdgeLength')) {\n    const idealEdgeLength = options['idealEdgeLength'] as Cy.IdealEdgeLengthCoseBilkent;\n    options['idealEdgeLength'] = () => idealEdgeLength;\n  }\n  if (has(options, 'nodeRepulsion')) {\n    const nodeRepulsion = options['nodeRepulsion'];\n    options['nodeRepulsion'] = () => nodeRepulsion;\n  }\n  if (has(options, 'edgeElasticity')) {\n    const edgeElasticity = options['edgeElasticity'];\n    options['edgeElasticity'] = () => edgeElasticity;\n  }\n  return options;\n}\n"],"sourceRoot":""}