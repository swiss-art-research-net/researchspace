{"version":3,"sources":["webpack:///./src/main/web/app/external/PageRenderer.ts"],"names":["initModuleRegistry","props","context","componentDidMount","registerNotificationSystem","this","registerOverlaySystem","render","D","div","renderNotificationSystem","renderOverlaySystem","Component","SubsystemContainer","platform","window","init","baseUrl","initPlatform","Kefir","combine","url","prefixes","getRegisteredPrefixes","rawConfig","ConfigHolder","fetchConfig","repositories","DefaultRepositoryInfo","subsystem","element","document","createElement","stream","emitter","ReactDOM","ref","instance","emit","end","body","appendChild","toProperty","flatMap","SparqlUtil","initializeConfig","e","constantError","constant","onValue","console","log","pageIri","params","htmlElement","resource","Rdf","iri","__unsafe__setCurrentResource","noBackdrop"],"mappings":"6IAmBA,OACAA,qBAEA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,SACA,SACA,QAEA,QACA,QACA,SACA,SA+BA,cACE,4BAAYC,EAAWC,G,OACrB,YAAMD,EAAOC,IAAQ,KAWzB,OAbwC,kCAKtC,6BAAAC,kBAAA,WACE,EAAAC,2BAA2BC,MAC3B,EAAAC,sBAAsBD,OAGxB,6BAAAE,OAAA,WACE,OAAOC,EAAEC,IAAI,GAAI,EAAAC,2BAA4B,EAAAC,wBAEjD,mBAbA,CAAwC,EAAAC,WAA3B,EAAAC,qBAmDb,IAAIC,EAAW,KAGfC,OAAsB,cAAI,CACxBC,KAAM,SAAUC,GACVA,IACF,IAA0BA,EAAU,YAEtCH,EA5CJ,SAASI,aAAaD,GAEpB,OADA,EAAAD,KAAYC,GACLE,EAAMC,QAAQ,CACnBC,IAAK,EAAAL,OACLM,SAAU,EAAAC,wBACVC,UAAW,EAAAC,aAAaC,cACxBC,aAAc,EAAAC,sBAAsBZ,OACpCa,WAiBIC,EAAUC,SAASC,cAAc,OAChCb,EAAMc,QAA2B,SAACC,GAOvCC,EAAS5B,OAAO,EAAAyB,cAAcnB,EAAoB,CAAEuB,IANxC,SAACC,GACPA,IACFH,EAAQI,KAAKD,GACbH,EAAQK,UAGgDR,SAASS,KAAKC,YAAYX,OACrFY,gBAxBAC,SAAQ,SAAC,G,IAAEtB,EAAA,EAAAA,IAAKC,EAAA,EAAAA,SAAUE,EAAA,EAAAA,UACzB,IACE,EAAAoB,WAAW5B,KAAKM,GAChB,EAAAG,aAAaoB,iBAAiBrB,GAC9B,MAAOsB,GACP,OAAO3B,EAAM4B,cAAmBD,GAElC,OAAO3B,EAAM6B,SAAS3B,MAEvB4B,SAAQ,WACPC,QAAQC,IAAI,gEAIlB,IACQrB,EAoBOZ,CAAaD,IAE1BV,OAAQ,SAAU6C,EAAiBC,EAAYC,GAC7CxC,EAASmC,SAAQ,WACf,IAAMM,EAAW,EAAAC,IAAIC,IAAIL,GACzB,EAAAM,6BAA6BH,GAC7B,EAAAhD,OACE,UAAW,CACTkD,IAAKF,EACLrD,QAASqD,EACTF,OAAQA,EACRM,YAAY,IAEdL","file":"default~page-renderer-97a1f708751c76fb9c4c.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { initModuleRegistry } from '../bootstrap';\ninitModuleRegistry();\n\nimport * as Kefir from 'kefir';\nimport * as ReactDOM from 'react-dom';\nimport { render } from 'react-dom';\nimport { Component, createElement } from 'react';\nimport { Rdf } from 'platform/api/rdf';\nimport { SparqlUtil } from 'platform/api/sparql';\nimport { DefaultRepositoryInfo } from 'platform/api/services/repository';\nimport { ConfigHolder } from 'platform/api/services/config-holder';\nimport { getRegisteredPrefixes } from 'platform/api/services/namespace';\nimport PageViewer from '../page/PageViewer';\nimport * as D from 'react-dom-factories';\n\nimport { init as initNavigation, __unsafe__setCurrentResource } from 'platform/api/navigation';\nimport { init as initBaseUrl } from 'platform/api/http';\nimport { renderNotificationSystem, registerNotificationSystem } from 'platform/components/ui/notification';\nimport { renderOverlaySystem, registerOverlaySystem } from 'platform/components/ui/overlay';\n\n/*\n * Example for using\n *\n * @example\n * <html lang=\"en\">\n *  <head>\n *    <meta name=\"version\" content=\"{{version}}\" />\n *    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n *    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n *    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge,chrome=1\" />\n *    {{{html-head}}}\n *    <script defer type='text/javascript' src='{{assetsMap.vendor}}'></script>\n *    <script defer type='text/javascript'\n *      src='http://localhost:3000/assets/page-renderer-bundle.js'>\n *    </script>\n *  </head>\n *  <body>\n *    <div id=\"application\"></div>\n *    <script>\n *      addEventListener('DOMContentLoaded', () => {\n *        researchspace.init();\n *        var app = document.getElementById('application');\n *        researchspace.render('http://www.researchspace.org/resource/assets/OntodiaView', {}, app);\n *      });\n *    </script>\n *  </body>\n *  </html>\n */\n\nexport class SubsystemContainer extends Component<{}, {}> {\n  constructor(props: {}, context: any) {\n    super(props, context);\n  }\n\n  componentDidMount() {\n    registerNotificationSystem(this);\n    registerOverlaySystem(this);\n  }\n\n  render() {\n    return D.div({}, renderNotificationSystem(), renderOverlaySystem());\n  }\n}\n\nfunction initPlatform(baseUrl?: string) {\n  initBaseUrl(baseUrl);\n  return Kefir.combine({\n    url: initNavigation(),\n    prefixes: getRegisteredPrefixes(),\n    rawConfig: ConfigHolder.fetchConfig(),\n    repositories: DefaultRepositoryInfo.init(),\n    subsystem: initSubsystems(),\n  })\n    .flatMap(({ url, prefixes, rawConfig }) => {\n      try {\n        SparqlUtil.init(prefixes);\n        ConfigHolder.initializeConfig(rawConfig);\n      } catch (e) {\n        return Kefir.constantError<any>(e);\n      }\n      return Kefir.constant(url);\n    })\n    .onValue(() => {\n      console.log('ResearchSpace platform has been initialized successfully!');\n    });\n}\n\nfunction initSubsystems() {\n  const element = document.createElement('div');\n  return Kefir.stream<SubsystemContainer>((emitter) => {\n    const ref = (instance) => {\n      if (instance) {\n        emitter.emit(instance);\n        emitter.end();\n      }\n    };\n    ReactDOM.render(createElement(SubsystemContainer, { ref }), document.body.appendChild(element));\n  }).toProperty();\n}\n\nlet platform = null;\ndeclare var __webpack_public_path__;\n\nwindow['researchspace'] = {\n  init: function (baseUrl?: string) {\n    if (baseUrl) {\n      __webpack_public_path__ = baseUrl + '/assets/';\n    }\n    platform = initPlatform(baseUrl);\n  },\n  render: function (pageIri: string, params: {}, htmlElement: HTMLElement) {\n    platform.onValue(() => {\n      const resource = Rdf.iri(pageIri);\n      __unsafe__setCurrentResource(resource);\n      render(\n        PageViewer({\n          iri: resource,\n          context: resource,\n          params: params,\n          noBackdrop: true,\n        }),\n        htmlElement\n      );\n    });\n  },\n};\n"],"sourceRoot":""}