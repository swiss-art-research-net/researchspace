{"version":3,"sources":["webpack:///./src/main/web/components/sets/actions/ManageSetAction.ts"],"names":["onClick","setIri","context","getCurrentSet","repository","Maybe","fromNullable","semanticContext","map","c","getOrElse","undefined","navigateToResource","onEnd","closeAllOpenBootstrapDropdowns","render","child","React","Children","only","this","props","children","cloneElement","contextTypes","SetManagementContextTypes","SetViewContextTypes","Component","document","dispatchEvent","MouseEvent","ManageSetAction"],"mappings":"6IAmBA,QACA,OAEA,QAEA,QAEA,UAeA,uF,OAQU,EAAAA,QAAU,WAChB,IAAMC,EAAS,EAAKC,QAAQ,+BAA+BC,gBACrDC,EAAaC,EAAMC,aAAa,EAAKJ,QAAQK,iBAChDC,KAAI,SAACC,GAAM,OAAAA,EAAEL,cACbM,eAAUC,GACb,EAAAC,mBAAmBX,EAAQ,GAAIG,GAAYS,OAAM,eAGjDC,kC,EAOJ,OAvBqC,+BAmB5B,0BAAAC,OAAP,WACE,IAAMC,EAAQC,EAAMC,SAASC,KAAKC,KAAKC,MAAMC,UAC7C,OAAOL,EAAMM,aAAaP,EAAO,CAAEhB,QAASoB,KAAKpB,WApBnC,gBAAAwB,aAAe,EAAH,kCACvB,EAAAC,2BACA,EAAAC,qBACA,EAAAC,UAAUH,cAmBjB,gBAvBA,CAAqC,EAAAG,WAyBrC,SAASb,iCAGPc,SAASC,cAAc,IAAIC,WAAW,UA5B3B,EAAAC,kBA+Bb,UAAeA","file":"mp-set-management-action-manage-set-b9653f5eea5a98dcaeb2.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as Maybe from 'data.maybe';\nimport * as React from 'react';\n\nimport { Component, ComponentContext } from 'platform/api/components';\n\nimport { navigateToResource } from 'platform/api/navigation';\n\nimport {\n  SetManagementContextTypes,\n  SetManagementContext,\n  SetViewContext,\n  SetViewContextTypes,\n} from '../SetManagementApi';\n\n/**\n * Navigates to currently active set's page.\n *\n * @example\n * <mp-set-management-action-manage-set>\n *   <span>Manage set</span>\n * </mp-set-management-action-manage-set>\n */\nexport class ManageSetAction extends Component<{}, void> {\n  static readonly contextTypes = {\n    ...SetManagementContextTypes,\n    ...SetViewContextTypes,\n    ...Component.contextTypes,\n  };\n  context: SetManagementContext & SetViewContext & ComponentContext;\n\n  private onClick = () => {\n    const setIri = this.context['mp-set-management--set-view'].getCurrentSet();\n    const repository = Maybe.fromNullable(this.context.semanticContext)\n      .map((c) => c.repository)\n      .getOrElse(undefined);\n    navigateToResource(setIri, {}, repository).onEnd(() => {\n      /* activate */\n    });\n    closeAllOpenBootstrapDropdowns();\n  };\n\n  public render() {\n    const child = React.Children.only(this.props.children) as React.ReactElement<any>;\n    return React.cloneElement(child, { onClick: this.onClick });\n  }\n}\n\nfunction closeAllOpenBootstrapDropdowns() {\n  // simulate click outside any dropdowns;\n  // see DropdownButton.rootCloseEvent property in React-Bootstrap docs\n  document.dispatchEvent(new MouseEvent('click'));\n}\n\nexport default ManageSetAction;\n"],"sourceRoot":""}