{"version":3,"sources":["webpack:///./src/main/web/widgets/image-upload-widget.ts"],"names":["ProgressBar","React","createFactory","ReactBootstrap","FORM_FIELDS","id","label","minOccurs","maxOccurs","xsdDatatype","autosuggestionPattern","valueSetPattern","props","state","files","componentDidMount","this","messages","Kefir","pool","onValue","v","message","alertState","setState","assign","alert","AlertType","WARNING","onDrop","submit","fieldValues","length","title","fields","get","values","size","file","contentType","_","isEmpty","config","FileUploadService","getMimeType","createResourceQuery","SparqlUtil","serializeQuery","parametrizeQueryWithFormValues","initialQuery","parseQuery","type","Error","reduce","query","fieldId","bindings","filter","FieldValue","isAtomic","map","asRdfNode","value","toArray","SparqlClient","prepareParsedQuery","uploadFile","generateIdQuery","storage","metadataExtractor","contextUri","onProgress","percent","progress","newImageIri","plug","constant","name","window","location","reload","mapErrors","error","render","maybe","fromNullable","description","D","div","className","createElement","Alert","active","min","max","now","getOrElse","Dropzone","bind","multiple","p","button","h4","key","ResourceEditorForm","persistence","persist","intialModel","model","PlainTextInput","for","placeholder","AutocompleteInput","DatePickerInput","mode","SelectInput","multiline","onClick","Component","c","ImageUploadWidget","f"],"mappings":"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","file":"rs-image-upload-a04d1efa3a4dc8afe2e5.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, createElement } from 'react';\nimport * as React from 'react';\nimport * as D from 'react-dom-factories';\nimport * as assign from 'object-assign';\nimport * as maybe from 'data.maybe';\nimport * as Kefir from 'kefir';\nimport * as _ from 'lodash';\nimport * as ReactBootstrap from 'react-bootstrap';\n\nimport { Rdf } from 'platform/api/rdf';\nimport { SparqlClient, SparqlUtil } from 'platform/api/sparql';\n\nimport {\n  FieldDefinitionProp,\n  FieldValue,\n  CompositeValue,\n  PlainTextInput,\n  PlainTextInputProps,\n  SelectInput,\n  AutocompleteInput,\n  DatePickerInput,\n  DatePickerInputProps,\n  ResourceEditorForm,\n  ResourceEditorFormProps,\n} from 'platform/components/forms';\n\nimport { Alert, AlertConfig, AlertType } from 'platform/components/ui/alert';\nimport { Dropzone } from 'platform/components/ui/dropzone';\nimport { FileUploadService } from 'platform/api/services/file-upload';\n\nconst ProgressBar = React.createFactory(ReactBootstrap.ProgressBar);\n\nimport './image-upload-widget.scss';\n\ninterface Props {\n  config: {\n    createResourceQuery: string;\n    generateIdQuery: string;\n    storage: string;\n    metadataExtractor: string;\n    contextUri: string;\n    description: string;\n    contentType: string;\n  };\n}\n\ninterface State {\n  alertState?: AlertConfig;\n  progress?: number;\n  resourceUri?: string;\n  files: File[];\n}\n\nconst FORM_FIELDS: FieldDefinitionProp[] = [\n  { id: 'title', label: 'Title', minOccurs: 1, maxOccurs: 1, xsdDatatype: 'xsd:string' },\n  {\n    id: 'person',\n    label: 'Digitized By',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix owl: <http://www.w3.org/2002/07/owl#>\n    prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n    prefix crm: <http://www.cidoc-crm.org/cidoc-crm/>\n\n    SELECT DISTINCT ?value ?label ?type WHERE {\n      ?value rso:displayLabel ?label .\n      ?value rdf:type ?type .\n      ?type rdfs:subClassOf* crm:E39_Actor .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n  { id: 'date', label: 'Date', maxOccurs: 1, xsdDatatype: 'xsd:dateTime' },\n  {\n    id: 'type',\n    label: 'Type',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    valueSetPattern: `select ?value ?label where {\n      values(?value ?label) {\n        (<http://collection.britishmuseum.org/id/thesauri/imgtype/scan> \\'Scan\\')\n        (<http://collection.britishmuseum.org/id/thesauri/imgtype/2d> \\'2D\\')\n        (<http://collection.britishmuseum.org/id/thesauri/imgtype/3d> \\'3D\\')\n       }\n     }\n      `,\n  },\n  {\n    id: 'owner',\n    label: 'Owner',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix owl: <http://www.w3.org/2002/07/owl#>\n    prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n    prefix crm: <http://www.cidoc-crm.org/cidoc-crm/>\n\n    SELECT DISTINCT ?value ?label ?type WHERE {\n      ?value rso:displayLabel ?label .\n      ?value rdf:type ?type .\n      ?type rdfs:subClassOf* crm:E39_Actor .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n  { id: 'copyright', label: 'Copyright', maxOccurs: 1, xsdDatatype: 'xsd:string' },\n  { id: 'description', label: 'Description', maxOccurs: 1, xsdDatatype: 'xsd:string' },\n  {\n    id: 'scientificType',\n    label: 'Scientific Type',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    valueSetPattern: `select ?value ?label where {\n      values(?value ?label) {\n        (<http://collection.britishmuseum.org/id/thesauri/scitype/xray> 'X-Ray')\n        (<http://collection.britishmuseum.org/id/thesauri/scitype/uv> 'Ultra Violet')\n        (<http://collection.britishmuseum.org/id/thesauri/scitype/ir> 'Infra Red')\n        (<http://collection.britishmuseum.org/id/thesauri/scitype/color> 'Visible light')\n      }\n    }`,\n  },\n  { id: 'width', label: 'Width', maxOccurs: 1, xsdDatatype: 'xsd:decimal' },\n  { id: 'height', label: 'Height', maxOccurs: 1, xsdDatatype: 'xsd:decimal' },\n  {\n    id: 'unit',\n    label: 'Unit',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    valueSetPattern: `select ?value ?label where {\n      values(?value ?label) {\n        (<http://collection.britishmuseum.org/id/thesauri/unit/mm> 'Millimeters')\n        (<http://collection.britishmuseum.org/id/thesauri/unit/px> 'Pixels')\n      }\n    }`,\n  },\n  {\n    id: 'depicts',\n    label: 'Depicts',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n\n    SELECT DISTINCT ?value ?label WHERE {\n      ?value a rso:Concept;\n        rso:displayLabel ?label .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n  {\n    id: 'subjects',\n    label: 'Carries subject',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix owl: <http://www.w3.org/2002/07/owl#>\n    prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n    prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n    prefix crm: <http://www.cidoc-crm.org/cidoc-crm/>\n\n    SELECT DISTINCT ?value ?label ?type WHERE {\n      ?value rso:displayLabel ?label .\n      ?value rdf:type ?type .\n      ?type rdfs:subClassOf* crm:E24_Physical_Man-Made_Thing .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n  {\n    id: 'refers',\n    label: 'Refers To',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n\n    SELECT DISTINCT ?value ?label WHERE {\n      ?value rso:displayLabel ?label .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n  {\n    id: 'about',\n    label: 'Is about',\n    maxOccurs: 1,\n    xsdDatatype: 'xsd:anyURI',\n    autosuggestionPattern: `prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n    prefix bds: <http://www.bigdata.com/rdf/search#>\n    prefix rso: <http://www.researchspace.org/ontology/>\n\n    SELECT DISTINCT ?value ?label WHERE {\n      ?value rso:displayLabel ?label .\n      SERVICE <http://www.bigdata.com/rdf/search#search> {\n        ?label bds:search '*?token*' ;\n          bds:relevance ?score .\n      }\n    } ORDER BY ?score`,\n  },\n];\n\nclass ImageUploadWidget extends Component<Props, State> {\n  private messages: Kefir.Pool<string>;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      files: [],\n    };\n  }\n\n  componentDidMount() {\n    this.messages = Kefir.pool<string>();\n    this.messages.onValue((v) => {\n      const message = this.state.alertState ? this.state.alertState.message : '';\n      this.setState(\n        assign({}, this.state, {\n          alertState: {\n            alert: AlertType.WARNING,\n            message: message + v,\n          },\n        })\n      );\n    });\n  }\n\n  private onDrop(files: File[]) {\n    this.setState(assign({}, this.state, { files: files }));\n  }\n\n  private submit(fieldValues: CompositeValue): Kefir.Property<void> {\n    if (this.state.files.length === 0) {\n      this.messages.plug(Kefir.constant('You have selected no images.<br>'));\n      return;\n    }\n\n    const title = fieldValues.fields.get('title');\n    if (!title || title.values.size === 0) {\n      this.messages.plug(Kefir.constant('Please fill in title to proceed with image upload.<br>'));\n      return;\n    }\n\n    const file = this.state.files[0];\n    const contentType =\n      _.isEmpty(this.props.config) || _.isEmpty(this.props.config.contentType)\n        ? FileUploadService.getMimeType(file)\n        : this.props.config.contentType;\n\n    const createResourceQuery = SparqlUtil.serializeQuery(\n      parametrizeQueryWithFormValues(this.props.config.createResourceQuery, fieldValues)\n    );\n\n    return FileUploadService.uploadFile({\n      createResourceQuery,\n      generateIdQuery: this.props.config.generateIdQuery,\n      storage: this.props.config.storage,\n      metadataExtractor: this.props.config.metadataExtractor,\n      contextUri: this.props.config.contextUri,\n      file: file,\n      contentType: contentType,\n      onProgress: (percent) =>\n        this.setState(\n          assign({}, this.state, {\n            progress: percent,\n          })\n        ),\n    })\n      .map((newImageIri) => {\n        this.messages.plug(Kefir.constant('File: ' + file.name + ' uploaded.<br/>'));\n        window.location.reload();\n      })\n      .mapErrors((error) => this.messages.plug(Kefir.constant('File: ' + file.name + ' failed (' + error + ').<br/>')));\n  }\n\n  render() {\n    const progress = maybe.fromNullable(this.state.progress);\n\n    const description =\n      _.isEmpty(this.props.config) || _.isEmpty(this.props.config.description)\n        ? 'Please drag & drop your image file here or click to browse the file system.'\n        : this.props.config.description;\n\n    return D.div(\n      { className: 'iiif-upload__holder' },\n      this.state.alertState ? createElement(Alert, this.state.alertState) : null,\n      progress.map((progress) => ProgressBar({ active: true, min: 0, max: 100, now: progress })).getOrElse(null),\n      createElement(\n        Dropzone,\n        {\n          className: 'iiif-upload__dropzone',\n          onDrop: this.onDrop.bind(this),\n          multiple: false,\n        },\n        D.div({ className: 'iiif-upload__description' }, D.p({}, description)),\n        D.button(\n          {\n            className: 'iiif-upload__dropzone-button btn btn-sm btn-default',\n          },\n          'Browse'\n        )\n      ),\n      this.state.files.map((file) => D.h4({ key: file.name }, 'Selected file: ' + file.name)),\n      createElement(\n        ResourceEditorForm,\n        {\n          fields: FORM_FIELDS,\n          persistence: {\n            persist: (intialModel, model) => {\n              if (FieldValue.isEmpty(model)) {\n                return;\n              }\n              return this.submit(model);\n            },\n          },\n        } as ResourceEditorFormProps,\n        React.createElement<PlainTextInputProps>(PlainTextInput, { for: 'title', placeholder: 'Type title here' }),\n        React.createElement(AutocompleteInput, { for: 'person' }),\n        React.createElement<DatePickerInputProps>(DatePickerInput, { for: 'date', mode: 'date' }),\n        React.createElement(SelectInput, { for: 'type' }),\n        React.createElement(AutocompleteInput, { for: 'owner' }),\n        React.createElement(PlainTextInput, { for: 'copyright' }),\n        React.createElement<PlainTextInputProps>(PlainTextInput, { for: 'description', multiline: true }),\n        React.createElement(SelectInput, { for: 'scientificType' }),\n        React.createElement(PlainTextInput, { for: 'width' }),\n        React.createElement(PlainTextInput, { for: 'height' }),\n        React.createElement(SelectInput, { for: 'unit' }),\n        React.createElement(AutocompleteInput, { for: 'depicts' }),\n        React.createElement(AutocompleteInput, { for: 'subjects' }),\n        React.createElement(AutocompleteInput, { for: 'refers' }),\n        React.createElement(AutocompleteInput, { for: 'about' }),\n        D.button(\n          { className: 'btn btn-sm btn-success iiif-upload__submit-button pull-right', name: 'submit' },\n          'Submit'\n        ),\n        D.button(\n          {\n            className: 'btn btn-sm btn-danger iiif-upload__cancel-button pull-right',\n            onClick: () => window.location.reload(),\n          },\n          'Cancel'\n        )\n      ),\n      this.state.alertState ? createElement(Alert, this.state.alertState) : null,\n      progress.map((progress) => ProgressBar({ active: true, min: 0, max: 100, now: progress })).getOrElse(null)\n    );\n  }\n}\n\nfunction parametrizeQueryWithFormValues(createResourceQuery: string, fieldValues: CompositeValue) {\n  const initialQuery = SparqlUtil.parseQuery(createResourceQuery);\n  if (initialQuery.type !== 'query') {\n    throw new Error('createResourceQuery must be a SELECT or CONSTRUCT query');\n  }\n  const resultQuery = fieldValues.fields.reduce((query, { values }, fieldId) => {\n    const bindings = values\n      .filter(FieldValue.isAtomic)\n      .map(FieldValue.asRdfNode)\n      .map((value) => ({ [fieldId]: value } as _.Dictionary<Rdf.Node>))\n      .toArray();\n    return SparqlClient.prepareParsedQuery(bindings)(query);\n  }, initialQuery);\n  return resultQuery;\n}\n\nexport type c = ImageUploadWidget;\nexport const c = ImageUploadWidget;\nexport const f = React.createFactory(c);\nexport default c;\n"],"sourceRoot":""}