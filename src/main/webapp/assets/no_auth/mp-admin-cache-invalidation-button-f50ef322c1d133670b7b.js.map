{"version":3,"sources":["webpack:///./src/main/web/components/admin/CacheInvalidationButton.ts"],"names":["Button","createFactory","ReactBootstrap","props","onClick","invalidateAllCaches","onValue","v","setState","alert","maybe","Just","message","AlertType","SUCCESS","onError","e","DANGER","state","Nothing","render","D","div","type","className","this","i","createElement","Alert","map","config","getOrElse","NONE","Component","component","InvalidateCacheButton","factory"],"mappings":"6IAmBA,OACA,QAEA,QACA,QAEA,UAEA,SAEMA,EAAS,EAAAC,cAAcC,EAAeF,QAM5C,cACE,+BAAYG,GAAZ,MACE,YAAMA,IAAM,K,OAqBN,EAAAC,QAAU,WAChB,EAAAC,sBACGC,SAAQ,SAACC,GACR,SAAKC,SAAS,CACZC,MAAOC,EAAMC,KAAK,CAChBC,QAASL,EACTE,MAAO,EAAAI,UAAUC,eAItBC,SAAQ,SAACC,GACR,SAAKR,SAAS,CACZC,MAAOC,EAAMC,KAAK,CAChBC,QAAS,8BAAgCI,EACzCP,MAAO,EAAAI,UAAUI,eAlCzB,EAAKC,MAAQ,CACXT,MAAOC,EAAMS,W,EAsCnB,OA1CoC,qCAQ3B,gCAAAC,OAAP,WACE,OAAOC,EAAEC,IAAI,GAAI,CACftB,EACE,CACEuB,KAAM,SACNC,UAAW,YACXpB,QAASqB,KAAKrB,SAEhBiB,EAAEK,EAAE,CAACF,UAAW,kBAChB,yBAEF,EAAAG,cAAc,EAAAC,MAAOH,KAAKP,MAAMT,MAAMoB,KAAI,SAACC,GAAW,OAAAA,KAAQC,UAAU,CAAEtB,MAAO,EAAAI,UAAUmB,KAAMpB,QAAS,SAuBhH,sBA1CA,CAAoC,EAAAqB,WA6CvB,EAAAC,UAAYC,EACZ,EAAAC,QAAU,EAAAnC,cAAc,EAAAiC,WACrC,UAAe,EAAAA","file":"mp-admin-cache-invalidation-button-f50ef322c1d133670b7b.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, createFactory, createElement } from 'react';\nimport * as D from 'react-dom-factories';\n\nimport * as ReactBootstrap from 'react-bootstrap';\nimport * as maybe from 'data.maybe';\n\nimport { invalidateAllCaches } from 'platform/api/services/cache';\n\nimport { Alert, AlertType, AlertConfig } from 'platform/components/ui/alert';\n\nconst Button = createFactory(ReactBootstrap.Button);\n\ninterface State {\n  alert: Data.Maybe<AlertConfig>;\n}\n\nclass InvalidateCacheButton extends Component<{}, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: maybe.Nothing<AlertConfig>(),\n    };\n  }\n\n  public render() {\n    return D.div({}, [\n      Button(\n        {\n          type: 'submit',\n          className: 'btn-cache',\n          onClick: this.onClick,\n        },\n        D.i({className: 'fa fa-history'}),\n        'Invalidate All Caches'\n      ),\n      createElement(Alert, this.state.alert.map((config) => config).getOrElse({ alert: AlertType.NONE, message: '' })),\n    ]);\n  }\n\n  private onClick = (): void => {\n    invalidateAllCaches()\n      .onValue((v) =>\n        this.setState({\n          alert: maybe.Just({\n            message: v,\n            alert: AlertType.SUCCESS,\n          }),\n        })\n      )\n      .onError((e) =>\n        this.setState({\n          alert: maybe.Just({\n            message: 'Cache invalidation failed: ' + e,\n            alert: AlertType.DANGER,\n          }),\n        })\n      );\n  };\n}\n\nexport type component = InvalidateCacheButton;\nexport const component = InvalidateCacheButton;\nexport const factory = createFactory(component);\nexport default component;"],"sourceRoot":""}