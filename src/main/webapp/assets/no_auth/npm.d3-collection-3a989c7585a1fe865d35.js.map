{"version":3,"sources":["webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/index.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js"],"names":["prefix","Map","map","object","f","each","value","key","set","Array","isArray","o","i","n","length","prototype","constructor","has","this","get","remove","property","clear","keys","push","slice","values","entries","size","empty","createObject","setObject","createMap","setMap","sortValues","rollup","nest","sortKeys","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","sortKey","v","k","a","b","d","order","Set","proto","add"],"mappings":"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","file":"npm.d3-collection-3a989c7585a1fe865d35.js","sourcesContent":["export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume itâ€™s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n"],"sourceRoot":""}