{"version":3,"sources":["webpack:///./node_modules/rdf-store-abstract/index.js"],"names":["AbstractStore","prototype","add","Error","delete","graph","match","subject","predicate","object","iri","callback","limit","this","then","merge","self","existing","addAll","remove","difference","removeMatches","module","exports"],"mappings":"8EAAA,SAASA,iBAGTA,cAAcC,UAAUC,IAAM,WAC5B,MAAM,IAAIC,MAAM,oBAGlBH,cAAcC,UAAUG,OAAS,WAC/B,MAAM,IAAID,MAAM,oBAGlBH,cAAcC,UAAUI,MAAQ,WAC9B,MAAM,IAAIF,MAAM,oBAGlBH,cAAcC,UAAUK,MAAQ,SAAUC,EAASC,EAAWC,EAAQC,EAAKC,EAAUC,GAKnF,OAFAD,EAAWA,GAAY,aAFZE,KAICR,MAAMK,GAAKI,MAAK,SAAUT,GAOpC,OANIA,IACFA,EAAQA,EAAMC,MAAMC,EAASC,EAAWC,EAAQG,IAGlDD,EAAS,KAAMN,GAERA,MAIXL,cAAcC,UAAUc,MAAQ,SAAUL,EAAKL,EAAOM,GACpD,IAAIK,EAAOH,KAIX,OAFAF,EAAWA,GAAY,aAEhBK,EAAKX,MAAMK,GAAKI,MAAK,SAAUG,GAOpC,OANIA,EACFA,EAASC,OAAOb,GAEhBY,EAAWZ,EAGNW,EAAKd,IAAIQ,EAAKO,EAAUN,MAC9BG,MAAK,WACN,OAAOT,MAIXL,cAAcC,UAAUkB,OAAS,SAAUT,EAAKL,EAAOM,GACrD,IAAIK,EAAOH,KAIX,OAFAF,EAAWA,GAAY,aAEhBK,EAAKX,MAAMK,GAAKI,MAAK,SAAUG,GACpC,GAAIA,EACF,OAAOD,EAAKd,IAAIQ,EAAKO,EAASG,WAAWf,OAE1CS,KAAKH,IAGVX,cAAcC,UAAUoB,cAAgB,SAAUd,EAASC,EAAWC,EAAQC,EAAKC,GACjF,IAAIK,EAAOH,KAIX,OAFAF,EAAWA,GAAY,aAEhBK,EAAKX,MAAMK,GAAKI,MAAK,SAAUG,GACpC,GAAIA,EACF,OAAOD,EAAKd,IAAIQ,EAAKO,EAASI,cAAcd,EAASC,EAAWC,OAEjEK,KAAKH,IAGVW,EAAOC,QAAUvB","file":"npm.rdf-store-abstract-863a9aa7063086bb5071.js","sourcesContent":["function AbstractStore () {\n}\n\nAbstractStore.prototype.add = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.delete = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.graph = function () {\n  throw new Error('not implemented')\n}\n\nAbstractStore.prototype.match = function (subject, predicate, object, iri, callback, limit) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (graph) {\n    if (graph) {\n      graph = graph.match(subject, predicate, object, limit)\n    }\n\n    callback(null, graph)\n\n    return graph\n  })\n}\n\nAbstractStore.prototype.merge = function (iri, graph, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      existing.addAll(graph)\n    } else {\n      existing = graph\n    }\n\n    return self.add(iri, existing, callback)\n  }).then(function () {\n    return graph\n  })\n}\n\nAbstractStore.prototype.remove = function (iri, graph, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      return self.add(iri, existing.difference(graph))\n    }\n  }).then(callback)\n}\n\nAbstractStore.prototype.removeMatches = function (subject, predicate, object, iri, callback) {\n  var self = this\n\n  callback = callback || function () {}\n\n  return self.graph(iri).then(function (existing) {\n    if (existing) {\n      return self.add(iri, existing.removeMatches(subject, predicate, object))\n    }\n  }).then(callback)\n}\n\nmodule.exports = AbstractStore\n"],"sourceRoot":""}