{"version":3,"sources":["webpack:///./node_modules/stream-http/index.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/stream-http/node_modules/safe-buffer/index.js","webpack:///./node_modules/stream-http/lib/capability.js","webpack:///./node_modules/stream-http/lib/response.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/stream-http/lib/request.js","webpack:///./node_modules/stream-http/node_modules/isarray/index.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/stream-http/node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/stream-http/node_modules/xtend/immutable.js"],"names":["response","extend","statusCodes","url","http","exports","request","opts","cb","parse","defaultProtocol","global","location","protocol","search","host","hostname","port","path","indexOf","method","toUpperCase","headers","req","ClientRequest","on","get","end","IncomingMessage","Agent","defaultMaxSockets","globalAgent","STATUS_CODES","METHODS","pna","objectKeys","Object","keys","obj","key","push","module","Duplex","util","create","inherits","Readable","Writable","prototype","v","length","options","this","call","readable","writable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","defineProperty","enumerable","highWaterMark","undefined","_readableState","destroyed","set","value","_destroy","err","buffer","Buffer","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","TypeError","size","fill","encoding","buf","SlowBuffer","writableStream","isFunction","WritableStream","abortController","AbortController","blobConstructor","Blob","ArrayBuffer","e","xhr","getXHR","XMLHttpRequest","open","XDomainRequest","checkTypeSupport","type","responseType","haveArrayBuffer","haveSlice","slice","arraybuffer","fetch","msstream","mozchunkedarraybuffer","overrideMimeType","vbArray","VBArray","stream","rStates","readyStates","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","mode","fetchTimer","_mode","rawHeaders","trailers","rawTrailers","process","emit","_fetchResponse","statusCode","status","statusMessage","statusText","forEach","header","toLowerCase","capability","write","chunk","Promise","resolve","reject","_destroyed","_resumeFetch","close","clearTimeout","abort","body","pipeTo","catch","reader","getReader","read","then","result","done","_xhr","_pos","responseURL","getAllResponseHeaders","split","matches","match","_charset","mimeType","charsetMatch","_read","_onXHRProgress","readyState","responseBody","toArray","responseText","newData","substr","i","charCodeAt","Uint8Array","MSStreamReader","onprogress","byteLength","onload","readAsArrayBuffer","Stream","Transform","PassThrough","isArray","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","OurUint8Array","debugUtil","debug","debuglog","StringDecoder","BufferList","destroyImpl","kProxyEvents","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","Math","floor","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","destroy","readableAddChunk","addToFront","skipChunkCheck","er","state","onEofChunk","emitReadable","chunkInvalid","_isUint8Array","isBuffer","getPrototypeOf","_uint8ArrayToBuffer","Error","addChunk","maybeReadMore","needMoreData","unshift","_undestroy","undestroy","isPaused","setEncoding","enc","howMuchToRead","n","head","data","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","len","nReadingNextTick","resume_","fromList","ret","shift","join","concat","clear","fromListPartial","list","hasStrings","copyFromBufferString","p","c","next","str","nb","tail","copyFromBuffer","copy","endReadable","endReadableNT","xs","x","l","parseInt","nOrig","doRead","pipe","dest","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","removeListener","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","pipeOnDrain","increasedAwaitDrain","pause","prependListener","event","fn","_events","resume","dests","index","splice","ev","res","addListener","wrap","_this","paused","apply","arguments","bind","_fromList","emitErrorNT","readableDestroyed","writableDestroyed","errorEmitted","ending","finished","CorkedRequest","entry","finish","onCorkedFinish","corkReq","callback","pendingcb","corkedRequestsFree","asyncWrite","browser","version","setImmediate","WritableState","internalUtil","deprecate","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","onwriteStateUpdate","writelen","onwriteError","finishMaybe","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","final","_final","doWrite","onwriteDrain","Array","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","current","out","_","Symbol","hasInstance","Function","object","writeAfterEnd","validChunk","valid","writeOrBuffer","newChunk","decodeChunk","last","cork","uncork","setDefaultEncoding","endWritable","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","_this2","err2","toArrayBuffer","preferBinary","_opts","_body","_headers","auth","setHeader","toString","name","useFetch","decideMode","_fetchTimer","_onFinish","lowerName","unsafeHeaders","getHeader","removeHeader","headersObj","map","headersList","keyName","signal","controller","_fetchAbortController","requestTimeout","setTimeout","credentials","withCredentials","_connect","reason","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","send","statusValid","flushHeaders","setNoDelay","setSocketKeepAlive","arr","_classCallCheck","instance","Constructor","s","target","offset","inspect","custom","constructor","source","hasOwnProperty"],"mappings":"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","file":"npm.stream-http-1ae844ef418a31b9ee42.js","sourcesContent":["var ClientRequest = require('./lib/request')\nvar response = require('./lib/response')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\t// Normally, the page is loaded from http or https, so not specifying a protocol\n\t// will result in a (valid) protocol-relative url. However, this won't work if\n\t// the protocol is something else, like 'file:'\n\tvar defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n\tvar protocol = opts.protocol || defaultProtocol\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.ClientRequest = ClientRequest\nhttp.IncomingMessage = response.IncomingMessage\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.globalAgent = new http.Agent()\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nexports.writableStream = isFunction(global.WritableStream)\n\nexports.abortController = isFunction(global.AbortController)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\n// The xhr request to example.com may violate some restrictive CSP configurations,\n// so if we're running in a browser that supports `fetch`, avoid calling getXHR()\n// and assume support for certain features below.\nvar xhr\nfunction getXHR () {\n\t// Cache the xhr value\n\tif (xhr !== undefined) return xhr\n\n\tif (global.XMLHttpRequest) {\n\t\txhr = new global.XMLHttpRequest()\n\t\t// If XDomainRequest is available (ie only, where xhr might not work\n\t\t// cross domain), use the page location. Otherwise use example.com\n\t\t// Note: this doesn't actually make an http request.\n\t\ttry {\n\t\t\txhr.open('GET', global.XDomainRequest ? '/' : 'https://example.com')\n\t\t} catch(e) {\n\t\t\txhr = null\n\t\t}\n\t} else {\n\t\t// Service workers don't have XHR\n\t\txhr = null\n\t}\n\treturn xhr\n}\n\nfunction checkTypeSupport (type) {\n\tvar xhr = getXHR()\n\tif (!xhr) return false\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\n// If fetch is supported, then arraybuffer will be supported too. Skip calling\n// checkTypeSupport(), since that calls getXHR().\nexports.arraybuffer = exports.fetch || (haveArrayBuffer && checkTypeSupport('arraybuffer'))\n\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\n\n// If fetch is supported, then overrideMimeType will be supported too. Skip calling\n// getXHR().\nexports.overrideMimeType = exports.fetch || (getXHR() ? isFunction(getXHR().overrideMimeType) : false)\n\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n\treturn typeof value === 'function'\n}\n\nxhr = null // Help gc\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode, fetchTimer) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.url = response.url\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t\n\t\tresponse.headers.forEach(function (header, key){\n\t\t\tself.headers[key.toLowerCase()] = header\n\t\t\tself.rawHeaders.push(key, header)\n\t\t})\n\n\t\tif (capability.writableStream) {\n\t\t\tvar writable = new WritableStream({\n\t\t\t\twrite: function (chunk) {\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tif (self._destroyed) {\n\t\t\t\t\t\t\treject()\n\t\t\t\t\t\t} else if(self.push(new Buffer(chunk))) {\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself._resumeFetch = resolve\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tclose: function () {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.push(null)\n\t\t\t\t},\n\t\t\t\tabort: function (err) {\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\ttry {\n\t\t\t\tresponse.body.pipeTo(writable).catch(function (err) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tif (!self._destroyed)\n\t\t\t\t\t\tself.emit('error', err)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t} catch (e) {} // pipeTo method isn't defined. Can't find a better way to feature test this\n\t\t}\n\t\t// fallback for when writableStream or pipeTo aren't available\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t}).catch(function (err) {\n\t\t\t\tglobal.clearTimeout(fetchTimer)\n\t\t\t\tif (!self._destroyed)\n\t\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t}\n\t\tread()\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.url = xhr.responseURL\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (key === 'set-cookie') {\n\t\t\t\t\tif (self.headers[key] === undefined) {\n\t\t\t\t\t\tself.headers[key] = []\n\t\t\t\t\t}\n\t\t\t\t\tself.headers[key].push(matches[2])\n\t\t\t\t} else if (self.headers[key] !== undefined) {\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\t} else {\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\t}\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {\n\tvar self = this\n\n\tvar resolve = self._resumeFetch\n\tif (resolve) {\n\t\tself._resumeFetch = null\n\t\tresolve()\n\t}\n}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE || !xhr.response)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","var capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('readable-stream')\nvar toArrayBuffer = require('to-arraybuffer')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary, useFetch) {\n\tif (capability.fetch && useFetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tvar useFetch = true\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\n\t\t// If the use of XHR should be preferred. Not typically needed.\n\t\tuseFetch = false\n\t\tpreferBinary = true\n\t} else if (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary, useFetch)\n\tself._fetchTimer = null\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar header = this._headers[name.toLowerCase()]\n\tif (header)\n\t\treturn header.value\n\treturn null\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body = null\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\n\t\tif (capability.arraybuffer) {\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\n\t\t} else if (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn toArrayBuffer(buffer)\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\t// create flattened list of headers\n\tvar headersList = []\n\tObject.keys(headersObj).forEach(function (keyName) {\n\t\tvar name = headersObj[keyName].name\n\t\tvar value = headersObj[keyName].value\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue.forEach(function (v) {\n\t\t\t\theadersList.push([name, v])\n\t\t\t})\n\t\t} else {\n\t\t\theadersList.push([name, value])\n\t\t}\n\t})\n\n\tif (self._mode === 'fetch') {\n\t\tvar signal = null\n\t\tvar fetchTimer = null\n\t\tif (capability.abortController) {\n\t\t\tvar controller = new AbortController()\n\t\t\tsignal = controller.signal\n\t\t\tself._fetchAbortController = controller\n\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\n\t\t\t\t\tself.emit('requestTimeout')\n\t\t\t\t\tif (self._fetchAbortController)\n\t\t\t\t\t\tself._fetchAbortController.abort()\n\t\t\t\t}, opts.requestTimeout)\n\t\t\t}\n\t\t}\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headersList,\n\t\t\tbody: body || undefined,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\n\t\t\tsignal: signal\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tglobal.clearTimeout(self._fetchTimer)\n\t\t\tif (!self._destroyed)\n\t\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tif ('requestTimeout' in opts) {\n\t\t\txhr.timeout = opts.requestTimeout\n\t\t\txhr.ontimeout = function () {\n\t\t\t\tself.emit('requestTimeout')\n\t\t\t}\n\t\t}\n\n\t\theadersList.forEach(function (header) {\n\t\t\txhr.setRequestHeader(header[0], header[1])\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\n\tself._response.on('error', function(err) {\n\t\tself.emit('error', err)\n\t})\n\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tglobal.clearTimeout(self._fetchTimer)\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\telse if (self._fetchAbortController)\n\t\tself._fetchAbortController.abort()\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'via'\n]\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"sourceRoot":""}