{"version":3,"sources":["webpack:///./src/main/web/components/ui/dropzone.tsx"],"names":["DEFAULT_STYLE","width","height","borderWidth","borderStyle","borderRadius","display","alignItems","justifyContent","cursor","outline","fontSize","letterSpacing","render","className","children","style","Object","assign","this","props","otherProps","state","getRootProps","isFunction","getInputProps","React","Component","Dropzone"],"mappings":"6IAkBA,OACA,QAEA,UASMA,EAAqC,CACzCC,MAAO,OACPC,OAAQ,IACRC,YAAa,EACbC,YAAa,SACbC,aAAc,EACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,UACRC,QAAS,OACTC,SAAU,GACVC,cAAe,IAGjB,kC,+CAeA,OAf8B,wBAC5B,mBAAAC,OAAA,WACE,IAAM,aAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAAU,uCACvBC,EAAQC,OAAOC,OAAO,GAAIlB,EAAemB,KAAKC,MAAMJ,OAC1D,OACE,gBAAC,UAAa,cAAKK,IAChB,SAACC,GAAU,OACV,oCAASA,EAAMC,eAAc,CAAET,UAAWA,EAAWE,MAAOA,IACzD,EAAAQ,WAAWT,GAAYA,EAASO,GAASP,EAC1C,sCAAWO,EAAMG,uBAM7B,SAfA,CAA8BC,EAAMC,WAAvB,EAAAC","file":"default~mp-app-upload~mp-direct-file-uploader~mp-file-upload~mp-file-uploader~mp-rdf-upload~rs-image~e1372396-2ac4602c2df33f81fd0d.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport { isFunction } from 'lodash';\n\nimport ReactDropzone, { DropzoneOptions, DropzoneState } from 'react-dropzone';\n\ntype ChildrenFunction = (state: DropzoneState) => JSX.Element;\nexport interface DropzoneProps extends DropzoneOptions {\n  className?: string;\n  style?: React.CSSProperties;\n  children?: JSX.Element | ReadonlyArray<JSX.Element> | ChildrenFunction;\n}\n\nconst DEFAULT_STYLE: React.CSSProperties = {\n  width: '100%',\n  height: 200,\n  borderWidth: 1,\n  borderStyle: 'dashed',\n  borderRadius: 5,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  outline: 'none',\n  fontSize: 17,\n  letterSpacing: 0.2,\n};\n\nexport class Dropzone extends React.Component<DropzoneProps, {}> {\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    const style = Object.assign({}, DEFAULT_STYLE, this.props.style);\n    return (\n      <ReactDropzone {...otherProps}>\n        {(state) => (\n          <div {...state.getRootProps()} className={className} style={style}>\n            {isFunction(children) ? children(state) : children}\n            <input {...state.getInputProps()} />\n          </div>\n        )}\n      </ReactDropzone>\n    );\n  }\n}\n"],"sourceRoot":""}