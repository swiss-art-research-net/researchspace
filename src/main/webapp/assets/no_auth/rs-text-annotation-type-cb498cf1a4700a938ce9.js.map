{"version":3,"sources":["webpack:///./src/main/web/components/text-annotation/components/TextAnnotationType.tsx"],"names":["render","Component","TextAnnotationType","extractAnnotationType","child","COMPONENT_TAG","componentHasType","Error","props","rdfType","label","template","markupTemplateScope","partial","getPartial","source","children","Forms","CompositeInput","iri","Rdf","color","iconUrl","templateScope","input"],"mappings":"6IAoBA,QACA,QACA,UACA,SAyCA,4C,+CAIA,OAJwC,kCACtC,6BAAAA,OAAA,WACE,OAAO,MAEX,mBAJA,CAAwC,EAAAC,WAA3B,EAAAC,qBAMb,UAAeA,EAEf,iCAAgBC,sBAAsBC,GACpC,IAAMC,EAAgB,4BACtB,IAAK,EAAAC,iBAAiBF,EAAOF,GAC3B,MAAM,IAAIK,MAAM,sDAAsDF,EAAa,aAErF,IAAMG,EAAQJ,EAAMI,MACpB,IAAKA,EAAMC,QACT,MAAM,IAAIF,MAAM,sDAAsDF,EAAa,aAGrF,IAAKG,EAAME,MACT,MAAM,IAAIH,MAASF,EAAa,+BAGlC,IAAIM,EAAWH,EAAMG,SACrB,IAAKA,GAAYH,EAAMI,oBAAqB,CAC1C,IAAMC,EAAUL,EAAMI,oBAAoBE,WAAW,cACjDD,IACFF,EAAWE,EAAQE,QAGvB,IAAKJ,EACH,MAAM,IAAIJ,MAASF,EAAa,uEAGlC,GAAgC,iBAAnBG,EAAMQ,WAAyB,EAAAV,iBAAiBE,EAAMQ,SAAUC,EAAMC,gBACjF,MAAM,IAAIX,MAASF,EAAa,gEAGlC,MAAO,CACLc,IAAK,EAAAC,IAAID,IAAIX,EAAMC,SACnBC,MAAOF,EAAME,MACbW,MAAOb,EAAMa,MACbC,QAASd,EAAMc,QACfX,SAAQ,EACRY,cAAef,EAAMI,oBACrBY,MAAOhB,EAAMQ","file":"rs-text-annotation-type-cb498cf1a4700a938ce9.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\n\nimport { Component, ComponentProps } from 'platform/api/components';\nimport { Rdf } from 'platform/api/rdf';\nimport * as Forms from 'platform/components/forms';\nimport { componentHasType } from 'platform/components/utils';\n\nimport { AnnotationBodyType } from '../model/ComponentModel';\n\nexport interface TextAnnotationTypeOptions {\n  /**\n   * RDF type of the described annotation body.\n   * (Must be an IRI string value.)\n   */\n  rdfType: string;\n\n  /**\n   * Annotation type label to show to user.\n   */\n  label: string;\n\n  /**\n   * Annotation accent color to highlight annotations in the text editor and the sidebar.\n   */\n  color?: string;\n\n  /**\n   * Annotatio type icon URL to display in tab headers, etc.\n   */\n  iconUrl?: string;\n\n  /**\n   * Template to visualize annotation body.\n   *\n   * See `AnnotationTemplateBindings` for template bindings.\n   */\n  template: string;\n}\n\nexport interface TextAnnotationTypeProps extends TextAnnotationTypeOptions, ComponentProps {\n  /**\n   * CompositeInput to edit described annotation body.\n   */\n  children: React.ReactElement<Forms.CompositeInputProps>;\n}\n\nexport class TextAnnotationType extends Component<TextAnnotationTypeProps, {}> {\n  render() {\n    return null;\n  }\n}\n\nexport default TextAnnotationType;\n\nexport function extractAnnotationType(child: React.ReactNode): AnnotationBodyType {\n  const COMPONENT_TAG = '<rs-text-annotation-type>';\n  if (!componentHasType(child, TextAnnotationType)) {\n    throw new Error(`<rs-text-annotation-workspace> should contain only ${COMPONENT_TAG} children`);\n  }\n  const props = child.props as TextAnnotationTypeProps;\n  if (!props.rdfType) {\n    throw new Error(`<rs-text-annotation-workspace> should contain only ${COMPONENT_TAG} children`);\n  }\n\n  if (!props.label) {\n    throw new Error(`${COMPONENT_TAG} must set \"label\" attribute`);\n  }\n\n  let template = props.template;\n  if (!template && props.markupTemplateScope) {\n    const partial = props.markupTemplateScope.getPartial('annotation');\n    if (partial) {\n      template = partial.source;\n    }\n  }\n  if (!template) {\n    throw new Error(`${COMPONENT_TAG} must set \"template\" attribute or define <template id=\"annotation\">`);\n  }\n\n  if (!(typeof props.children === 'object' && componentHasType(props.children, Forms.CompositeInput))) {\n    throw new Error(`${COMPONENT_TAG} must have a single <semantic-form-composite-input> as child`);\n  }\n\n  return {\n    iri: Rdf.iri(props.rdfType),\n    label: props.label,\n    color: props.color,\n    iconUrl: props.iconUrl,\n    template,\n    templateScope: props.markupTemplateScope,\n    input: props.children,\n  };\n}\n"],"sourceRoot":""}