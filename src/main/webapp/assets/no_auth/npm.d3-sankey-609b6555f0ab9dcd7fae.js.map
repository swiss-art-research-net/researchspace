{"version":3,"sources":["webpack:///./node_modules/d3-sankey/src/align.js","webpack:///./node_modules/d3-sankey/src/sankey.js","webpack:///./node_modules/d3-sankey/src/sankeyLinkHorizontal.js","webpack:///./node_modules/d3-sankey/index.js","webpack:///./node_modules/d3-sankey/src/constant.js"],"names":["targetDepth","d","target","depth","left","node","right","n","height","justify","sourceLinks","length","center","targetLinks","ascendingSourceBreadth","a","b","ascendingBreadth","source","index","ascendingTargetBreadth","y0","value","nodeCenter","y1","weightedSource","link","weightedTarget","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","id","get","Error","x0","x1","dx","py","align","iterations","sankey","apply","arguments","computeNodeLinks","computeNodeValues","computeNodeDepths","computeNodeBreadths","computeLinkBreadths","forEach","i","push","Math","max","next","x","indexOf","kx","min","floor","call","columns","key","sortKeys","entries","map","values","initializeNodeBreadth","ky","width","resolveCollisions","alpha","relaxRightToLeft","relaxLeftToRight","dy","slice","reverse","y","sort","update","nodeId","_","nodeAlign","nodeWidth","nodePadding","size","extent","horizontalSource","horizontalTarget","constant"],"mappings":"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","file":"npm.d3-sankey-609b6555f0ab9dcd7fae.js","sourcesContent":["import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","import {ascending, min, sum} from \"d3-array\";\nimport {map, nest} from \"d3-collection\";\nimport {justify} from \"./align\";\nimport constant from \"./constant\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction nodeCenter(node) {\n  return (node.y0 + node.y1) / 2;\n}\n\nfunction weightedSource(link) {\n  return nodeCenter(link.source) * link.value;\n}\n\nfunction weightedTarget(link) {\n  return nodeCenter(link.target) * link.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  var node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nexport default function() {\n  var x0 = 0, y0 = 0, x1 = 1, y1 = 1, // extent\n      dx = 24, // nodeWidth\n      py = 8, // nodePadding\n      id = defaultId,\n      align = justify,\n      nodes = defaultNodes,\n      links = defaultLinks,\n      iterations = 32;\n\n  function sankey() {\n    var graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeBreadths(graph, iterations);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (py = +_, sankey) : py;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks(graph) {\n    graph.nodes.forEach(function(node, i) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    var nodeById = map(graph.nodes, id);\n    graph.links.forEach(function(link, i) {\n      link.index = i;\n      var source = link.source, target = link.target;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n\n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues(graph) {\n    graph.nodes.forEach(function(node) {\n      node.value = Math.max(\n        sum(node.sourceLinks, value),\n        sum(node.targetLinks, value)\n      );\n    });\n  }\n\n  // Iteratively assign the depth (x-position) for each node.\n  // Nodes are assigned the maximum depth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned depth zero, while\n  // nodes with no outgoing links are assigned the maximum depth.\n  function computeNodeDepths(graph) {\n    var nodes, next, x;\n\n    for (nodes = graph.nodes, next = [], x = 0; nodes.length; ++x, nodes = next, next = []) {\n      nodes.forEach(function(node) {\n        node.depth = x;\n        node.sourceLinks.forEach(function(link) {\n          if (next.indexOf(link.target) < 0) {\n            next.push(link.target);\n          }\n        });\n      });\n    }\n\n    for (nodes = graph.nodes, next = [], x = 0; nodes.length; ++x, nodes = next, next = []) {\n      nodes.forEach(function(node) {\n        node.height = x;\n        node.targetLinks.forEach(function(link) {\n          if (next.indexOf(link.source) < 0) {\n            next.push(link.source);\n          }\n        });\n      });\n    }\n\n    var kx = (x1 - x0 - dx) / (x - 1);\n    graph.nodes.forEach(function(node) {\n      node.x1 = (node.x0 = x0 + Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x)))) * kx) + dx;\n    });\n  }\n\n  function computeNodeBreadths(graph) {\n    var columns = nest()\n        .key(function(d) { return d.x0; })\n        .sortKeys(ascending)\n        .entries(graph.nodes)\n        .map(function(d) { return d.values; });\n\n    //\n    initializeNodeBreadth();\n    resolveCollisions();\n    for (var alpha = 1, n = iterations; n > 0; --n) {\n      relaxRightToLeft(alpha *= 0.99);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n\n    function initializeNodeBreadth() {\n      var ky = min(columns, function(nodes) {\n        return (y1 - y0 - (nodes.length - 1) * py) / sum(nodes, value);\n      });\n\n      columns.forEach(function(nodes) {\n        nodes.forEach(function(node, i) {\n          node.y1 = (node.y0 = i) + node.value * ky;\n        });\n      });\n\n      graph.links.forEach(function(link) {\n        link.width = link.value * ky;\n      });\n    }\n\n    function relaxLeftToRight(alpha) {\n      columns.forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.targetLinks.length) {\n            var dy = (sum(node.targetLinks, weightedSource) / sum(node.targetLinks, value) - nodeCenter(node)) * alpha;\n            node.y0 += dy, node.y1 += dy;\n          }\n        });\n      });\n    }\n\n    function relaxRightToLeft(alpha) {\n      columns.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          if (node.sourceLinks.length) {\n            var dy = (sum(node.sourceLinks, weightedTarget) / sum(node.sourceLinks, value) - nodeCenter(node)) * alpha;\n            node.y0 += dy, node.y1 += dy;\n          }\n        });\n      });\n    }\n\n    function resolveCollisions() {\n      columns.forEach(function(nodes) {\n        var node,\n            dy,\n            y = y0,\n            n = nodes.length,\n            i;\n\n        // Push any overlapping nodes down.\n        nodes.sort(ascendingBreadth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y - node.y0;\n          if (dy > 0) node.y0 += dy, node.y1 += dy;\n          y = node.y1 + py;\n        }\n\n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y - py - y1;\n        if (dy > 0) {\n          y = (node.y0 -= dy), node.y1 -= dy;\n\n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y1 + py - y;\n            if (dy > 0) node.y0 -= dy, node.y1 -= dy;\n            y = node.y0;\n          }\n        }\n      });\n    }\n  }\n\n  function computeLinkBreadths(graph) {\n    graph.nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetBreadth);\n      node.targetLinks.sort(ascendingSourceBreadth);\n    });\n    graph.nodes.forEach(function(node) {\n      var y0 = node.y0, y1 = y0;\n      node.sourceLinks.forEach(function(link) {\n        link.y0 = y0 + link.width / 2, y0 += link.width;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.y1 = y1 + link.width / 2, y1 += link.width;\n      });\n    });\n  }\n\n  return sankey;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","export {default as sankey} from \"./src/sankey\";\nexport {center as sankeyCenter, left as sankeyLeft, right as sankeyRight, justify as sankeyJustify} from \"./src/align\";\nexport {default as sankeyLinkHorizontal} from \"./src/sankeyLinkHorizontal\";\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n"],"sourceRoot":""}