{"version":3,"sources":["webpack:///./src/main/web/components/sets/actions/RenameSetAction.ts"],"names":["onClick","context","startRenamingSet","getCurrentSet","render","child","Children","only","this","props","children","cloneElement","contextTypes","SetManagementContextTypes","SetViewContextTypes","Component","RenameSetAction"],"mappings":"6IAmBA,OAEA,UAcA,uF,OAIU,EAAAA,QAAU,WAChB,EAAKC,QAAQ,qBAAqBC,iBAAiB,EAAKD,QAAQ,+BAA+BE,kB,EAOnG,OAZqC,+BAQ5B,0BAAAC,OAAP,WACE,IAAMC,EAAQ,EAAAC,SAASC,KAAKC,KAAKC,MAAMC,UACvC,OAAO,EAAAC,aAAaN,EAAO,CAAEL,QAASQ,KAAKR,WAT7B,gBAAAY,aAAe,EAAH,uBAAQ,EAAAC,2BAA8B,EAAAC,qBAWpE,gBAZA,CAAqC,EAAAC,WAAxB,EAAAC,kBAab,UAAeA","file":"mp-set-management-action-rename-set-f2a4fb82e1d84d0c3cf2.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Children, ReactElement, cloneElement } from 'react';\n\nimport {\n  SetManagementContextTypes,\n  SetManagementContext,\n  SetViewContext,\n  SetViewContextTypes,\n} from '../SetManagementApi';\n\n/**\n * Puts active set into renaming mode.\n *\n * This action can be used only inside <mp-set-management> component templates.\n *\n * @example <mp-set-management-action-rename-set></mp-set-management-action-rename-set>\n */\nexport class RenameSetAction extends Component<{}, void> {\n  static readonly contextTypes = { ...SetManagementContextTypes, ...SetViewContextTypes };\n  context: SetManagementContext & SetViewContext;\n\n  private onClick = () => {\n    this.context['mp-set-management'].startRenamingSet(this.context['mp-set-management--set-view'].getCurrentSet());\n  };\n\n  public render() {\n    const child = Children.only(this.props.children) as ReactElement<any>;\n    return cloneElement(child, { onClick: this.onClick });\n  }\n}\nexport default RenameSetAction;\n"],"sourceRoot":""}