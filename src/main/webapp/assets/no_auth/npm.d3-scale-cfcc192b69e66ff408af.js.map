{"version":3,"sources":["webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/colors.js","webpack:///./node_modules/d3-scale/src/viridis.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/rainbow.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/category10.js","webpack:///./node_modules/d3-scale/src/category20b.js","webpack:///./node_modules/d3-scale/src/category20c.js","webpack:///./node_modules/d3-scale/src/category20.js","webpack:///./node_modules/d3-scale/src/cubehelix.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/index.js","webpack:///./node_modules/d3-scale/src/tickFormat.js"],"names":["array","Array","prototype","map","slice","linearish","scale","domain","ticks","count","d","length","tickFormat","specifier","nice","step","i0","i1","start","stop","Math","floor","ceil","linear","copy","s","match","x","ramp","range","n","t","max","min","magma","inferno","plasma","implicit","name","ordinal","index","unknown","key","i","get","set","push","call","_","arguments","has","unit","deinterpolateLinear","a","b","bimap","deinterpolate","reinterpolate","d0","d1","r0","r1","polymap","j","r","reverse","source","target","interpolate","clamp","continuous","piecewise","output","input","rescale","deinterpolateClamp","invert","y","reinterpolateClamp","rangeRound","warm","cool","rainbow","ts","abs","h","l","band","bandwidth","undefined","ordinalRange","round","paddingInner","paddingOuter","align","values","padding","point","pointish","raise","exponent","pow","sqrt","date","Date","number","calendar","year","month","week","day","hour","minute","second","millisecond","format","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","durationSecond","durationMinute","durationHour","durationDay","tickInterval","interval","right","every","t0","t1","identity","log","pow10","isFinite","powp","base","E","exp","logp","log10","log2","reflect","f","logs","pows","u","v","p","k","z","Infinity","x0","x1","quantile","thresholds","isNaN","invertExtent","indexOf","NaN","sort","quantiles","quantize","threshold","UTC","sequential","interpolator","precision","type","value"],"mappings":"6FAAA,qFAAIA,EAAQC,MAAMC,UAEPC,EAAMH,EAAMG,IACZC,EAAQJ,EAAMI,O,kCCHzB,kJAKO,SAASC,UAAUC,GACxB,IAAIC,EAASD,EAAMC,OAmDnB,OAjDAD,EAAME,MAAQ,SAASC,GACrB,IAAIC,EAAIH,IACR,OAAO,gBAAMG,EAAE,GAAIA,EAAEA,EAAEC,OAAS,GAAa,MAATF,EAAgB,GAAKA,IAG3DH,EAAMM,WAAa,SAASH,EAAOI,GACjC,OAAO,kBAAWN,IAAUE,EAAOI,IAGrCP,EAAMQ,KAAO,SAASL,GACP,MAATA,IAAeA,EAAQ,IAE3B,IAKIM,EALAL,EAAIH,IACJS,EAAK,EACLC,EAAKP,EAAEC,OAAS,EAChBO,EAAQR,EAAEM,GACVG,EAAOT,EAAEO,GA8Bb,OA3BIE,EAAOD,IACTH,EAAOG,EAAOA,EAAQC,EAAMA,EAAOJ,EACnCA,EAAOC,EAAIA,EAAKC,EAAIA,EAAKF,IAG3BA,EAAO,wBAAcG,EAAOC,EAAMV,IAEvB,GACTS,EAAQE,KAAKC,MAAMH,EAAQH,GAAQA,EACnCI,EAAOC,KAAKE,KAAKH,EAAOJ,GAAQA,EAChCA,EAAO,wBAAcG,EAAOC,EAAMV,IACzBM,EAAO,IAChBG,EAAQE,KAAKE,KAAKJ,EAAQH,GAAQA,EAClCI,EAAOC,KAAKC,MAAMF,EAAOJ,GAAQA,EACjCA,EAAO,wBAAcG,EAAOC,EAAMV,IAGhCM,EAAO,GACTL,EAAEM,GAAMI,KAAKC,MAAMH,EAAQH,GAAQA,EACnCL,EAAEO,GAAMG,KAAKE,KAAKH,EAAOJ,GAAQA,EACjCR,EAAOG,IACEK,EAAO,IAChBL,EAAEM,GAAMI,KAAKE,KAAKJ,EAAQH,GAAQA,EAClCL,EAAEO,GAAMG,KAAKC,MAAMF,EAAOJ,GAAQA,EAClCR,EAAOG,IAGFJ,GAGFA,EAGM,SAASiB,SACtB,IAAIjB,EAAQ,kBAAW,sBAAe,WAMtC,OAJAA,EAAMkB,KAAO,WACX,OAAO,eAAKlB,EAAOiB,WAGdlB,UAAUC,K,kCCnEnB,OAAe,sBACb,OAAOmB,EAAEC,MAAM,SAASvB,KAAI,SAASwB,GACnC,MAAO,IAAMA,O,kCCFjB,0IAEA,SAASC,KAAKC,GACZ,IAAIC,EAAID,EAAMlB,OACd,OAAO,SAASoB,GACd,OAAOF,EAAMT,KAAKY,IAAI,EAAGZ,KAAKa,IAAIH,EAAI,EAAGV,KAAKC,MAAMU,EAAID,OAI7C,UAAAF,KAAK,kBAAO,qgDAEpB,IAAIM,EAAQN,KAAK,kBAAO,qgDAEpBO,EAAUP,KAAK,kBAAO,qgDAEtBQ,EAASR,KAAK,kBAAO,sgD,kCCfhC,sHAGWS,EAAW,CAACC,KAAM,YAEd,SAASC,QAAQV,GAC9B,IAAIW,EAAQ,gBACRjC,EAAS,GACTkC,EAAUJ,EAId,SAAS/B,MAAMI,GACb,IAAIgC,EAAMhC,EAAI,GAAIiC,EAAIH,EAAMI,IAAIF,GAChC,IAAKC,EAAG,CACN,GAAIF,IAAYJ,EAAU,OAAOI,EACjCD,EAAMK,IAAIH,EAAKC,EAAIpC,EAAOuC,KAAKpC,IAEjC,OAAOmB,GAAOc,EAAI,GAAKd,EAAMlB,QA0B/B,OAlCAkB,EAAiB,MAATA,EAAgB,GAAK,QAAMkB,KAAKlB,GAWxCvB,MAAMC,OAAS,SAASyC,GACtB,IAAKC,UAAUtC,OAAQ,OAAOJ,EAAOH,QACrCG,EAAS,GAAIiC,EAAQ,gBAErB,IADA,IAA0B9B,EAAGgC,EAAzBC,GAAK,EAAGb,EAAIkB,EAAErC,SACTgC,EAAIb,GAAQU,EAAMU,IAAIR,GAAOhC,EAAIsC,EAAEL,IAAM,KAAKH,EAAMK,IAAIH,EAAKnC,EAAOuC,KAAKpC,IAClF,OAAOJ,OAGTA,MAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUkB,EAAQ,QAAMkB,KAAKC,GAAI1C,OAASuB,EAAMzB,SAGnEE,MAAMmC,QAAU,SAASO,GACvB,OAAOC,UAAUtC,QAAU8B,EAAUO,EAAG1C,OAASmC,GAGnDnC,MAAMkB,KAAO,WACX,OAAOe,UACFhC,OAAOA,GACPsB,MAAMA,GACNY,QAAQA,IAGRnC,Q,kCC5CT,sOAMI6C,EAAO,CAAC,EAAG,GAER,SAASC,oBAAoBC,EAAGC,GACrC,OAAQA,GAAMD,GAAKA,GACb,SAAS1B,GAAK,OAAQA,EAAI0B,GAAKC,GAC/B,kBAASA,GAiBjB,SAASC,MAAMhD,EAAQsB,EAAO2B,EAAeC,GAC3C,IAAIC,EAAKnD,EAAO,GAAIoD,EAAKpD,EAAO,GAAIqD,EAAK/B,EAAM,GAAIgC,EAAKhC,EAAM,GAG9D,OAFI8B,EAAKD,GAAIA,EAAKF,EAAcG,EAAID,GAAKE,EAAKH,EAAcI,EAAID,KAC3DF,EAAKF,EAAcE,EAAIC,GAAKC,EAAKH,EAAcG,EAAIC,IACjD,SAASlC,GAAK,OAAOiC,EAAGF,EAAG/B,KAGpC,SAASmC,QAAQvD,EAAQsB,EAAO2B,EAAeC,GAC7C,IAAIM,EAAI3C,KAAKa,IAAI1B,EAAOI,OAAQkB,EAAMlB,QAAU,EAC5CD,EAAI,IAAIT,MAAM8D,GACdC,EAAI,IAAI/D,MAAM8D,GACdpB,GAAK,EAQT,IALIpC,EAAOwD,GAAKxD,EAAO,KACrBA,EAASA,EAAOH,QAAQ6D,UACxBpC,EAAQA,EAAMzB,QAAQ6D,aAGftB,EAAIoB,GACXrD,EAAEiC,GAAKa,EAAcjD,EAAOoC,GAAIpC,EAAOoC,EAAI,IAC3CqB,EAAErB,GAAKc,EAAc5B,EAAMc,GAAId,EAAMc,EAAI,IAG3C,OAAO,SAAShB,GACd,IAAIgB,EAAI,iBAAOpC,EAAQoB,EAAG,EAAGoC,GAAK,EAClC,OAAOC,EAAErB,GAAGjC,EAAEiC,GAAGhB,KAId,SAASH,KAAK0C,EAAQC,GAC3B,OAAOA,EACF5D,OAAO2D,EAAO3D,UACdsB,MAAMqC,EAAOrC,SACbuC,YAAYF,EAAOE,eACnBC,MAAMH,EAAOG,SAKL,SAASC,WAAWd,EAAeC,GAChD,IAIIc,EACAC,EACAC,EANAlE,EAAS4C,EACTtB,EAAQsB,EACRiB,EAAc,UACdC,GAAQ,EAKZ,SAASK,UAGP,OAFAH,EAAYnD,KAAKa,IAAI1B,EAAOI,OAAQkB,EAAMlB,QAAU,EAAImD,QAAUP,MAClEiB,EAASC,EAAQ,KACVnE,MAGT,SAASA,MAAMqB,GACb,OAAQ6C,IAAWA,EAASD,EAAUhE,EAAQsB,EAAOwC,EAtEzD,SAASM,mBAAmBnB,GAC1B,OAAO,SAASH,EAAGC,GACjB,IAAI5C,EAAI8C,EAAcH,GAAKA,EAAGC,GAAKA,GACnC,OAAO,SAAS3B,GAAK,OAAOA,GAAK0B,EAAI,EAAI1B,GAAK2B,EAAI,EAAI5C,EAAEiB,KAmEKgD,CAAmBnB,GAAiBA,EAAeY,MAAgBzC,GA2BlI,OAxBArB,MAAMsE,OAAS,SAASC,GACtB,OAAQJ,IAAUA,EAAQF,EAAU1C,EAAOtB,EAAQ6C,oBAAqBiB,EAnE5E,SAASS,mBAAmBrB,GAC1B,OAAO,SAASJ,EAAGC,GACjB,IAAIU,EAAIP,EAAcJ,GAAKA,EAAGC,GAAKA,GACnC,OAAO,SAASvB,GAAK,OAAOA,GAAK,EAAIsB,EAAItB,GAAK,EAAIuB,EAAIU,EAAEjC,KAgEwB+C,CAAmBrB,GAAiBA,MAAkBoB,IAGxIvE,MAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUJ,EAAS,MAAIwC,KAAKC,EAAG,WAAS0B,WAAanE,EAAOH,SAG/EE,MAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUkB,EAAQ,QAAMkB,KAAKC,GAAI0B,WAAa7C,EAAMzB,SAGvEE,MAAMyE,WAAa,SAAS/B,GAC1B,OAAOnB,EAAQ,QAAMkB,KAAKC,GAAIoB,EAAc,UAAkBM,WAGhEpE,MAAM+D,MAAQ,SAASrB,GACrB,OAAOC,UAAUtC,QAAU0D,IAAUrB,EAAG0B,WAAaL,GAGvD/D,MAAM8D,YAAc,SAASpB,GAC3B,OAAOC,UAAUtC,QAAUyD,EAAcpB,EAAG0B,WAAaN,GAGpDM,Y,kCC/GT,yGAGWM,EAAO,wBAAyB,qBAAW,IAAK,IAAM,KAAO,oBAAU,GAAI,IAAM,KAEjFC,EAAO,wBAAyB,oBAAU,IAAK,IAAM,KAAO,oBAAU,GAAI,IAAM,KAEvFC,EAAU,sBAEC,uBACTnD,EAAI,GAAKA,EAAI,KAAGA,GAAKX,KAAKC,MAAMU,IACpC,IAAIoD,EAAK/D,KAAKgE,IAAIrD,EAAI,IAItB,OAHAmD,EAAQG,EAAI,IAAMtD,EAAI,IACtBmD,EAAQzD,EAAI,IAAM,IAAM0D,EACxBD,EAAQI,EAAI,GAAM,GAAMH,EACjBD,EAAU,K,kCCfnB,oHAGe,SAASK,OACtB,IAIIxE,EACAyE,EALAlF,EAAQ,oBAAUmC,aAAQgD,GAC1BlF,EAASD,EAAMC,OACfmF,EAAepF,EAAMuB,MACrBA,EAAQ,CAAC,EAAG,GAGZ8D,GAAQ,EACRC,EAAe,EACfC,EAAe,EACfC,EAAQ,GAIZ,SAASpB,UACP,IAAI5C,EAAIvB,IAASI,OACbsD,EAAUpC,EAAM,GAAKA,EAAM,GAC3BX,EAAQW,EAAMoC,EAAU,GACxB9C,EAAOU,EAAM,EAAIoC,GACrBlD,GAAQI,EAAOD,GAASE,KAAKY,IAAI,EAAGF,EAAI8D,EAA8B,EAAfC,GACnDF,IAAO5E,EAAOK,KAAKC,MAAMN,IAC7BG,IAAUC,EAAOD,EAAQH,GAAQe,EAAI8D,IAAiBE,EACtDN,EAAYzE,GAAQ,EAAI6E,GACpBD,IAAOzE,EAAQE,KAAKuE,MAAMzE,GAAQsE,EAAYpE,KAAKuE,MAAMH,IAC7D,IAAIO,EAAS,gBAASjE,GAAG3B,KAAI,SAASwC,GAAK,OAAOzB,EAAQH,EAAO4B,KACjE,OAAO+C,EAAazB,EAAU8B,EAAO9B,UAAY8B,GAqDnD,cAlEOzF,EAAMmC,QAgBbnC,EAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUJ,EAAOyC,GAAI0B,WAAanE,KAGrDD,EAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUkB,EAAQ,EAAEmB,EAAE,IAAKA,EAAE,IAAK0B,WAAa7C,EAAMzB,SAGxEE,EAAMyE,WAAa,SAAS/B,GAC1B,OAAOnB,EAAQ,EAAEmB,EAAE,IAAKA,EAAE,IAAK2C,GAAQ,EAAMjB,WAG/CpE,EAAMkF,UAAY,WAChB,OAAOA,GAGTlF,EAAMS,KAAO,WACX,OAAOA,GAGTT,EAAMqF,MAAQ,SAAS3C,GACrB,OAAOC,UAAUtC,QAAUgF,IAAU3C,EAAG0B,WAAaiB,GAGvDrF,EAAM0F,QAAU,SAAShD,GACvB,OAAOC,UAAUtC,QAAUiF,EAAeC,EAAezE,KAAKY,IAAI,EAAGZ,KAAKa,IAAI,EAAGe,IAAK0B,WAAakB,GAGrGtF,EAAMsF,aAAe,SAAS5C,GAC5B,OAAOC,UAAUtC,QAAUiF,EAAexE,KAAKY,IAAI,EAAGZ,KAAKa,IAAI,EAAGe,IAAK0B,WAAakB,GAGtFtF,EAAMuF,aAAe,SAAS7C,GAC5B,OAAOC,UAAUtC,QAAUkF,EAAezE,KAAKY,IAAI,EAAGZ,KAAKa,IAAI,EAAGe,IAAK0B,WAAamB,GAGtFvF,EAAMwF,MAAQ,SAAS9C,GACrB,OAAOC,UAAUtC,QAAUmF,EAAQ1E,KAAKY,IAAI,EAAGZ,KAAKa,IAAI,EAAGe,IAAK0B,WAAaoB,GAG/ExF,EAAMkB,KAAO,WACX,OAAO+D,OACFhF,OAAOA,KACPsB,MAAMA,GACN8D,MAAMA,GACNC,aAAaA,GACbC,aAAaA,GACbC,MAAMA,IAGNpB,UAiBF,SAASuB,QACd,OAfF,SAASC,SAAS5F,GAChB,IAAIkB,EAAOlB,EAAMkB,KAUjB,OARAlB,EAAM0F,QAAU1F,EAAMuF,oBACfvF,EAAMsF,oBACNtF,EAAMuF,aAEbvF,EAAMkB,KAAO,WACX,OAAO0E,SAAS1E,MAGXlB,EAIA4F,CAASX,OAAOK,aAAa,M,kCCnGtC,OAAe,sBACb,OAAO,WACL,OAAOjE,K,kCCFX,2HAIA,SAASwE,MAAMxE,EAAGyE,GAChB,OAAOzE,EAAI,GAAKP,KAAKiF,KAAK1E,EAAGyE,GAAYhF,KAAKiF,IAAI1E,EAAGyE,GAGxC,SAASC,MACtB,IAAID,EAAW,EACX9F,EAAQ,mBAGZ,SAASkD,cAAcH,EAAGC,GACxB,OAAQA,EAAI6C,MAAM7C,EAAG8C,IAAa/C,EAAI8C,MAAM9C,EAAG+C,KACzC,SAASzE,GAAK,OAAQwE,MAAMxE,EAAGyE,GAAY/C,GAAKC,GAChD,kBAASA,MAGjB,SAASG,cAAcJ,EAAGC,GAExB,OADAA,EAAI6C,MAAM7C,EAAG8C,IAAa/C,EAAI8C,MAAM9C,EAAG+C,IAChC,SAASrE,GAAK,OAAOoE,MAAM9C,EAAIC,EAAIvB,EAAG,EAAIqE,OAV/C7F,EAASD,EAAMC,OAqBnB,OARAD,EAAM8F,SAAW,SAASpD,GACxB,OAAOC,UAAUtC,QAAUyF,GAAYpD,EAAGzC,EAAOA,MAAa6F,GAGhE9F,EAAMkB,KAAO,WACX,OAAO,eAAKlB,EAAO+F,MAAMD,SAASA,KAG7B,oBAAU9F,GAGZ,SAASgG,OACd,OAAOD,MAAMD,SAAS,M,kCCpCxB,uMAgBA,SAASG,KAAKxE,GACZ,OAAO,IAAIyE,KAAKzE,GAGlB,SAAS0E,OAAO1E,GACd,OAAOA,aAAayE,MAAQzE,GAAK,IAAIyE,MAAMzE,GAGtC,SAAS2E,SAASC,EAAMC,EAAOC,EAAMC,EAAKC,EAAMC,EAAQC,EAAQC,EAAaC,GAClF,IAAI7G,EAAQ,kBAAW,sBAAe,WAClCsE,EAAStE,EAAMsE,OACfrE,EAASD,EAAMC,OAEf6G,EAAoBD,EAAO,OAC3BE,EAAeF,EAAO,OACtBG,EAAeH,EAAO,SACtBI,EAAaJ,EAAO,SACpBK,EAAYL,EAAO,SACnBM,EAAaN,EAAO,SACpBO,EAAcP,EAAO,MACrBQ,EAAaR,EAAO,MAEpBS,EAAgB,CAClB,CAACX,EAAS,EA/BO,KAgCjB,CAACA,EAAS,EAAI,KACd,CAACA,EAAQ,GAAI,MACb,CAACA,EAAQ,GAAI,KACb,CAACD,EAAS,EAlCOa,KAmCjB,CAACb,EAAS,EAAI,KACd,CAACA,EAAQ,GAAI,KACb,CAACA,EAAQ,GAAI,MACb,CAAGD,EAAO,EArCKe,MAsCf,CAAGf,EAAO,EAAI,OACd,CAAGA,EAAO,EAAI,OACd,CAAGA,EAAM,GAAI,OACb,CAAID,EAAM,EAxCIiB,OAyCd,CAAIjB,EAAM,EAAI,QACd,CAAGD,EAAO,EAzCKmB,QA0Cf,CAAEpB,EAAQ,EAzCMoB,QA0ChB,CAAEpB,EAAQ,EAAI,QACd,CAAGD,EAAO,EA1CKqB,UA6CjB,SAASpH,WAAW2F,GAClB,OAAQU,EAAOV,GAAQA,EAAOa,EACxBJ,EAAOT,GAAQA,EAAOc,EACtBN,EAAKR,GAAQA,EAAOe,EACpBR,EAAIP,GAAQA,EAAOgB,EACnBX,EAAML,GAAQA,EAAQM,EAAKN,GAAQA,EAAOiB,EAAYC,EACtDd,EAAKJ,GAAQA,EAAOmB,EACpBC,GAAYpB,GAGpB,SAAS0B,aAAaC,EAAUhH,EAAOC,EAAMJ,GAM3C,GALgB,MAAZmH,IAAkBA,EAAW,IAKT,iBAAbA,EAAuB,CAChC,IAAI/D,EAAS/C,KAAKgE,IAAIjE,EAAOD,GAASgH,EAClCvF,EAAI,oBAAS,SAASA,GAAK,OAAOA,EAAE,MAAOwF,MAAMP,EAAezD,GAChExB,IAAMiF,EAAcjH,QACtBI,EAAO,mBAASG,EAjEL8G,QAiE2B7G,EAjE3B6G,QAiEgDE,GAC3DA,EAAWvB,GACFhE,GAET5B,GADA4B,EAAIiF,EAAczD,EAASyD,EAAcjF,EAAI,GAAG,GAAKiF,EAAcjF,GAAG,GAAKwB,EAASxB,EAAI,EAAIA,IACnF,GACTuF,EAAWvF,EAAE,KAEb5B,EAAOK,KAAKY,IAAI,mBAASd,EAAOC,EAAM+G,GAAW,GACjDA,EAAWhB,GAIf,OAAe,MAARnG,EAAemH,EAAWA,EAASE,MAAMrH,GAsClD,OAnCAT,EAAMsE,OAAS,SAASC,GACtB,OAAO,IAAI2B,KAAK5B,EAAOC,KAGzBvE,EAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,OAASJ,EAAO,MAAIwC,KAAKC,EAAGyD,SAAWlG,IAASJ,IAAIoG,OAGvEjG,EAAME,MAAQ,SAAS0H,EAAUnH,GAC/B,IAIIgB,EAJArB,EAAIH,IACJ8H,EAAK3H,EAAE,GACP4H,EAAK5H,EAAEA,EAAEC,OAAS,GAClBqD,EAAIsE,EAAKD,EAKb,OAHIrE,IAAGjC,EAAIsG,EAAIA,EAAKC,EAAIA,EAAKvG,GAE7BA,GADAA,EAAIkG,aAAaC,EAAUG,EAAIC,EAAIvH,IAC3BgB,EAAEF,MAAMwG,EAAIC,EAAK,GAAK,GACvBtE,EAAIjC,EAAEkC,UAAYlC,GAG3BzB,EAAMM,WAAa,SAASH,EAAOI,GACjC,OAAoB,MAAbA,EAAoBD,WAAauG,EAAOtG,IAGjDP,EAAMQ,KAAO,SAASoH,EAAUnH,GAC9B,IAAIL,EAAIH,IACR,OAAQ2H,EAAWD,aAAaC,EAAUxH,EAAE,GAAIA,EAAEA,EAAEC,OAAS,GAAII,IAC3DR,EAAO,kBAAKG,EAAGwH,IACf5H,GAGRA,EAAMkB,KAAO,WACX,OAAO,eAAKlB,EAAOoG,SAASC,EAAMC,EAAOC,EAAMC,EAAKC,EAAMC,EAAQC,EAAQC,EAAaC,KAGlF7G,EAGM,qBACb,OAAOoG,SAAS,UAAU,UAAW,SAAU,UAAS,UAAU,UAAY,UAAY,UAAiB,cAAYnG,OAAO,CAAC,IAAIiG,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,O,kCCrIzK,wFAIe,SAAS+B,WACtB,IAAIhI,EAAS,CAAC,EAAG,GAEjB,SAASD,MAAMqB,GACb,OAAQA,EAaV,OAVArB,MAAMsE,OAAStE,MAEfA,MAAMC,OAASD,MAAMuB,MAAQ,SAASmB,GACpC,OAAOC,UAAUtC,QAAUJ,EAAS,MAAIwC,KAAKC,EAAG,WAAS1C,OAASC,EAAOH,SAG3EE,MAAMkB,KAAO,WACX,OAAO+G,WAAWhI,OAAOA,IAGpB,oBAAUD,S,kCCrBnB,OAAe,sBACb,OAAQqB,I,kCCDV,uGAMA,SAAS6B,cAAcH,EAAGC,GACxB,OAAQA,EAAIlC,KAAKoH,IAAIlF,EAAID,IACnB,SAAS1B,GAAK,OAAOP,KAAKoH,IAAI7G,EAAI0B,GAAKC,GACvC,kBAASA,GAGjB,SAASG,cAAcJ,EAAGC,GACxB,OAAOD,EAAI,EACL,SAAStB,GAAK,OAAQX,KAAKiF,KAAK/C,EAAGvB,GAAKX,KAAKiF,KAAKhD,EAAG,EAAItB,IACzD,SAASA,GAAK,OAAOX,KAAKiF,IAAI/C,EAAGvB,GAAKX,KAAKiF,IAAIhD,EAAG,EAAItB,IAG9D,SAAS0G,MAAM9G,GACb,OAAO+G,SAAS/G,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAASgH,KAAKC,GACZ,OAAgB,KAATA,EAAcH,MACfG,IAASxH,KAAKyH,EAAIzH,KAAK0H,IACvB,SAASnH,GAAK,OAAOP,KAAKiF,IAAIuC,EAAMjH,IAG5C,SAASoH,KAAKH,GACZ,OAAOA,IAASxH,KAAKyH,EAAIzH,KAAKoH,IACf,KAATI,GAAexH,KAAK4H,OACV,IAATJ,GAAcxH,KAAK6H,OAClBL,EAAOxH,KAAKoH,IAAII,GAAO,SAASjH,GAAK,OAAOP,KAAKoH,IAAI7G,GAAKiH,IAGpE,SAASM,QAAQC,GACf,OAAO,SAASxH,GACd,OAAQwH,GAAGxH,IAIA,SAAS6G,MACtB,IAAIlI,EAAQ,kBAAWkD,cAAeC,eAAelD,OAAO,CAAC,EAAG,KAC5DA,EAASD,EAAMC,OACfqI,EAAO,GACPQ,EAAOL,KAAK,IACZM,EAAOV,KAAK,IAEhB,SAASjE,UAGP,OAFA0E,EAAOL,KAAKH,GAAOS,EAAOV,KAAKC,GAC3BrI,IAAS,GAAK,IAAG6I,EAAOF,QAAQE,GAAOC,EAAOH,QAAQG,IACnD/I,EA2ET,OAxEAA,EAAMsI,KAAO,SAAS5F,GACpB,OAAOC,UAAUtC,QAAUiI,GAAQ5F,EAAG0B,WAAakE,GAGrDtI,EAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUJ,EAAOyC,GAAI0B,WAAanE,KAGrDD,EAAME,MAAQ,SAASC,GACrB,IAGIuD,EAHAtD,EAAIH,IACJ+I,EAAI5I,EAAE,GACN6I,EAAI7I,EAAEA,EAAEC,OAAS,IAGjBqD,EAAIuF,EAAID,KAAG3G,EAAI2G,EAAGA,EAAIC,EAAGA,EAAI5G,GAEjC,IAEI6G,EACAC,EACA1H,EAJAY,EAAIyG,EAAKE,GACTvF,EAAIqF,EAAKG,GAITzH,EAAa,MAATrB,EAAgB,IAAMA,EAC1BiJ,EAAI,GAER,KAAMd,EAAO,IAAM7E,EAAIpB,EAAIb,GAEzB,GADAa,EAAIvB,KAAKuE,MAAMhD,GAAK,EAAGoB,EAAI3C,KAAKuE,MAAM5B,GAAK,EACvCuF,EAAI,GAAG,KAAO3G,EAAIoB,IAAKpB,EACzB,IAAK8G,EAAI,EAAGD,EAAIH,EAAK1G,GAAI8G,EAAIb,IAAQa,EAEnC,MADA1H,EAAIyH,EAAIC,GACAH,GAAR,CACA,GAAIvH,EAAIwH,EAAG,MACXG,EAAE5G,KAAKf,SAEJ,KAAOY,EAAIoB,IAAKpB,EACrB,IAAK8G,EAAIb,EAAO,EAAGY,EAAIH,EAAK1G,GAAI8G,GAAK,IAAKA,EAExC,MADA1H,EAAIyH,EAAIC,GACAH,GAAR,CACA,GAAIvH,EAAIwH,EAAG,MACXG,EAAE5G,KAAKf,SAIX2H,EAAI,gBAAM/G,EAAGoB,EAAG3C,KAAKa,IAAI8B,EAAIpB,EAAGb,IAAI3B,IAAIkJ,GAG1C,OAAOrF,EAAI0F,EAAEzF,UAAYyF,GAG3BpJ,EAAMM,WAAa,SAASH,EAAOI,GAGjC,GAFiB,MAAbA,IAAmBA,EAAqB,KAAT+H,EAAc,MAAQ,KAChC,mBAAd/H,IAA0BA,EAAY,iBAAOA,IACpDJ,IAAUkJ,IAAU,OAAO9I,EAClB,MAATJ,IAAeA,EAAQ,IAC3B,IAAIgJ,EAAIrI,KAAKY,IAAI,EAAG4G,EAAOnI,EAAQH,EAAME,QAAQG,QACjD,OAAO,SAASD,GACd,IAAIiC,EAAIjC,EAAI2I,EAAKjI,KAAKuE,MAAMyD,EAAK1I,KAEjC,OADIiC,EAAIiG,EAAOA,EAAO,KAAKjG,GAAKiG,GACzBjG,GAAK8G,EAAI5I,EAAUH,GAAK,KAInCJ,EAAMQ,KAAO,WACX,OAAOP,EAAO,kBAAKA,IAAU,CAC3Bc,MAAO,SAASM,GAAK,OAAO0H,EAAKjI,KAAKC,MAAM+H,EAAKzH,MACjDL,KAAM,SAASK,GAAK,OAAO0H,EAAKjI,KAAKE,KAAK8H,EAAKzH,UAInDrB,EAAMkB,KAAO,WACX,OAAO,eAAKlB,EAAOkI,MAAMI,KAAKA,KAGzBtI,I,kCC9HT,OAAe,wBAGb,IAIIyB,EAJAf,EAAK,EACLC,GAHJV,EAASA,EAAOH,SAGAO,OAAS,EACrBiJ,EAAKrJ,EAAOS,GACZ6I,EAAKtJ,EAAOU,GAUhB,OAPI4I,EAAKD,IACP7H,EAAIf,EAAIA,EAAKC,EAAIA,EAAKc,EACtBA,EAAI6H,EAAIA,EAAKC,EAAIA,EAAK9H,GAGxBxB,EAAOS,GAAMkH,EAAS7G,MAAMuI,GAC5BrJ,EAAOU,GAAMiH,EAAS5G,KAAKuI,GACpBtJ,I,kCChBT,8EAGe,SAASuJ,WACtB,IAAIvJ,EAAS,GACTsB,EAAQ,GACRkI,EAAa,GAEjB,SAASrF,UACP,IAAI/B,EAAI,EAAGb,EAAIV,KAAKY,IAAI,EAAGH,EAAMlB,QAEjC,IADAoJ,EAAa,IAAI9J,MAAM6B,EAAI,KAClBa,EAAIb,GAAGiI,EAAWpH,EAAI,GAAK,mBAAUpC,EAAQoC,EAAIb,GAC1D,OAAOxB,MAGT,SAASA,MAAMqB,GACb,IAAKqI,MAAMrI,GAAKA,GAAI,OAAOE,EAAM,iBAAOkI,EAAYpI,IAiCtD,OA9BArB,MAAM2J,aAAe,SAASpF,GAC5B,IAAIlC,EAAId,EAAMqI,QAAQrF,GACtB,OAAOlC,EAAI,EAAI,CAACwH,IAAKA,KAAO,CAC1BxH,EAAI,EAAIoH,EAAWpH,EAAI,GAAKpC,EAAO,GACnCoC,EAAIoH,EAAWpJ,OAASoJ,EAAWpH,GAAKpC,EAAOA,EAAOI,OAAS,KAInEL,MAAMC,OAAS,SAASyC,GACtB,IAAKC,UAAUtC,OAAQ,OAAOJ,EAAOH,QACrCG,EAAS,GACT,IAAK,IAAyBG,EAArBiC,EAAI,EAAGb,EAAIkB,EAAErC,OAAWgC,EAAIb,IAAKa,EAAsB,OAAfjC,EAAIsC,EAAEL,KAAkBqH,MAAMtJ,GAAKA,IAAIH,EAAOuC,KAAKpC,GAEpG,OADAH,EAAO6J,KAAK,aACL1F,WAGTpE,MAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUkB,EAAQ,QAAMkB,KAAKC,GAAI0B,WAAa7C,EAAMzB,SAGvEE,MAAM+J,UAAY,WAChB,OAAON,EAAW3J,SAGpBE,MAAMkB,KAAO,WACX,OAAOsI,WACFvJ,OAAOA,GACPsB,MAAMA,IAGNvB,Q,kCCjDT,wFAIe,SAASgK,WACtB,IAAIV,EAAK,EACLC,EAAK,EACL/H,EAAI,EACJvB,EAAS,CAAC,IACVsB,EAAQ,CAAC,EAAG,GAEhB,SAASvB,MAAMqB,GACb,GAAIA,GAAKA,EAAG,OAAOE,EAAM,iBAAOtB,EAAQoB,EAAG,EAAGG,IAGhD,SAAS4C,UACP,IAAI/B,GAAK,EAET,IADApC,EAAS,IAAIN,MAAM6B,KACVa,EAAIb,GAAGvB,EAAOoC,KAAOA,EAAI,GAAKkH,GAAMlH,EAAIb,GAAK8H,IAAO9H,EAAI,GACjE,OAAOxB,MAyBT,OAtBAA,MAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUiJ,GAAM5G,EAAE,GAAI6G,GAAM7G,EAAE,GAAI0B,WAAa,CAACkF,EAAIC,IAGvEvJ,MAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUmB,GAAKD,EAAQ,QAAMkB,KAAKC,IAAIrC,OAAS,EAAG+D,WAAa7C,EAAMzB,SAGxFE,MAAM2J,aAAe,SAASpF,GAC5B,IAAIlC,EAAId,EAAMqI,QAAQrF,GACtB,OAAOlC,EAAI,EAAI,CAACwH,IAAKA,KACfxH,EAAI,EAAI,CAACiH,EAAIrJ,EAAO,IACpBoC,GAAKb,EAAI,CAACvB,EAAOuB,EAAI,GAAI+H,GACzB,CAACtJ,EAAOoC,EAAI,GAAIpC,EAAOoC,KAG/BrC,MAAMkB,KAAO,WACX,OAAO8I,WACF/J,OAAO,CAACqJ,EAAIC,IACZhI,MAAMA,IAGN,oBAAUvB,S,kCC5CnB,+EAGe,SAASiK,YACtB,IAAIhK,EAAS,CAAC,IACVsB,EAAQ,CAAC,EAAG,GACZC,EAAI,EAER,SAASxB,MAAMqB,GACb,GAAIA,GAAKA,EAAG,OAAOE,EAAM,iBAAOtB,EAAQoB,EAAG,EAAGG,IAsBhD,OAnBAxB,MAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUJ,EAAS,QAAMwC,KAAKC,GAAIlB,EAAIV,KAAKa,IAAI1B,EAAOI,OAAQkB,EAAMlB,OAAS,GAAIL,OAASC,EAAOH,SAGpHE,MAAMuB,MAAQ,SAASmB,GACrB,OAAOC,UAAUtC,QAAUkB,EAAQ,QAAMkB,KAAKC,GAAIlB,EAAIV,KAAKa,IAAI1B,EAAOI,OAAQkB,EAAMlB,OAAS,GAAIL,OAASuB,EAAMzB,SAGlHE,MAAM2J,aAAe,SAASpF,GAC5B,IAAIlC,EAAId,EAAMqI,QAAQrF,GACtB,MAAO,CAACtE,EAAOoC,EAAI,GAAIpC,EAAOoC,KAGhCrC,MAAMkB,KAAO,WACX,OAAO+I,YACFhK,OAAOA,GACPsB,MAAMA,IAGNvB,Q,kCC/BT,+GAIe,qBACb,OAAO,mBAAS,UAAS,UAAU,YAAS,UAAQ,UAAS,UAAW,UAAW,UAAgB,aAAWC,OAAO,CAACiG,KAAKgE,IAAI,IAAM,EAAG,GAAIhE,KAAKgE,IAAI,IAAM,EAAG,O,kCCLhK,qBAEe,4BAAO,iE,kCCFtB,qBAEe,4BAAO,6H,kCCFtB,qBAEe,4BAAO,6H,kCCFtB,qBAEe,4BAAO,6H,kCCFtB,+BAGe,kCAAyB,oBAAU,IAAK,GAAK,GAAM,qBAAW,IAAK,GAAK,K,kCCHvF,sEAEe,SAASC,WAAWC,GACjC,IAAId,EAAK,EACLC,EAAK,EACLxF,GAAQ,EAEZ,SAAS/D,MAAMqB,GACb,IAAII,GAAKJ,EAAIiI,IAAOC,EAAKD,GACzB,OAAOc,EAAarG,EAAQjD,KAAKY,IAAI,EAAGZ,KAAKa,IAAI,EAAGF,IAAMA,GAmB5D,OAhBAzB,MAAMC,OAAS,SAASyC,GACtB,OAAOC,UAAUtC,QAAUiJ,GAAM5G,EAAE,GAAI6G,GAAM7G,EAAE,GAAI1C,OAAS,CAACsJ,EAAIC,IAGnEvJ,MAAM+D,MAAQ,SAASrB,GACrB,OAAOC,UAAUtC,QAAU0D,IAAUrB,EAAG1C,OAAS+D,GAGnD/D,MAAMoK,aAAe,SAAS1H,GAC5B,OAAOC,UAAUtC,QAAU+J,EAAe1H,EAAG1C,OAASoK,GAGxDpK,MAAMkB,KAAO,WACX,OAAOiJ,WAAWC,GAAcnK,OAAO,CAACqJ,EAAIC,IAAKxF,MAAMA,IAGlD,oBAAU/D,S,kCC5BnB,+sD,kCCAA,uEAGe,0BACb,IAGIqK,EAHAzJ,EAAQX,EAAO,GACfY,EAAOZ,EAAOA,EAAOI,OAAS,GAC9BI,EAAO,mBAASG,EAAOC,EAAe,MAATV,EAAgB,GAAKA,GAGtD,QADAI,EAAY,kBAA6B,MAAbA,EAAoB,KAAOA,IACrC+J,MAChB,IAAK,IACH,IAAIC,EAAQzJ,KAAKY,IAAIZ,KAAKgE,IAAIlE,GAAQE,KAAKgE,IAAIjE,IAE/C,OAD2B,MAAvBN,EAAU8J,WAAsBX,MAAMW,EAAY,kBAAgB5J,EAAM8J,MAAShK,EAAU8J,UAAYA,GACpG,uBAAa9J,EAAWgK,GAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvBhK,EAAU8J,WAAsBX,MAAMW,EAAY,kBAAe5J,EAAMK,KAAKY,IAAIZ,KAAKgE,IAAIlE,GAAQE,KAAKgE,IAAIjE,QAAUN,EAAU8J,UAAYA,GAAgC,MAAnB9J,EAAU+J,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvB/J,EAAU8J,WAAsBX,MAAMW,EAAY,kBAAe5J,MAAQF,EAAU8J,UAAYA,EAAuC,GAAP,MAAnB9J,EAAU+J,OAI9H,OAAO,iBAAO/J","file":"npm.d3-scale-cfcc192b69e66ff408af.js","sourcesContent":["var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(x) {\n  return +x;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./src/band\";\n\nexport {\n  default as scaleIdentity\n} from \"./src/identity\";\n\nexport {\n  default as scaleLinear\n} from \"./src/linear\";\n\nexport {\n  default as scaleLog\n} from \"./src/log\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./src/ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./src/pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./src/quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./src/quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./src/threshold\";\n\nexport {\n  default as scaleTime\n} from \"./src/time\";\n\nexport {\n  default as scaleUtc\n} from \"./src/utcTime\";\n\nexport {\n  default as schemeCategory10\n} from \"./src/category10\";\n\nexport {\n  default as schemeCategory20b\n} from \"./src/category20b\";\n\nexport {\n  default as schemeCategory20c\n} from \"./src/category20c\";\n\nexport {\n  default as schemeCategory20\n} from \"./src/category20\";\n\nexport {\n  default as interpolateCubehelixDefault\n} from \"./src/cubehelix\";\n\nexport {\n  default as interpolateRainbow,\n  warm as interpolateWarm,\n  cool as interpolateCool\n} from \"./src/rainbow\";\n\nexport {\n  default as interpolateViridis,\n  magma as interpolateMagma,\n  inferno as interpolateInferno,\n  plasma as interpolatePlasma\n} from \"./src/viridis\";\n\nexport {\n  default as scaleSequential\n} from \"./src/sequential\";\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n"],"sourceRoot":""}