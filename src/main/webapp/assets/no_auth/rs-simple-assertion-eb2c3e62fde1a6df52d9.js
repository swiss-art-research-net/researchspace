(window.webpackJsonp=window.webpackJsonp||[]).push([[465],{1482:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),i=n(1),o=n(19),l=n(16),a=n(72),s=n(33),u=n(1559),p=n(43),c=n(23),f=n(122),m=n(61),g=n(140),d=n(56),y=n(220),S=n(1836),h=n(2344),v=n(1301),T=function(e){function SimpleAssertion(){return null!==e&&e.apply(this,arguments)||this}return r.__extends(SimpleAssertion,e),SimpleAssertion.prototype.render=function(){var e=this,t=this.props,n=t.selection,o=t.closeMenu,l=t.menuTitle,a=t.title,s=t.types,u=t.repositories;return i.createElement(S.TypedSelectionActionComponent,{title:a,isDisabled:function(e){return e.length<1},selection:n,menuTitle:l,repositories:u,closeMenu:o,types:s,dialogType:"modal",dialogSize:"large",renderDialog:function(t){return i.createElement(A,r.__assign({},e.props,{selection:t}))}})},SimpleAssertion.defaultProps={menuTitle:"Quick Assertion",title:"Assert"},SimpleAssertion}(i.Component);t.SimpleAssertion=T,t.default=T;var E,A=function(e){function SimpleAssertionDialog(t,n){var d=e.call(this,t,n)||this;return d.createTargetOptions=function(e){var t=l.map(e,c.Rdf.iri);g.getLabels(t).onValue((function(t){var n=l.map(t.toArray(),(function(t,n){return{value:e[n],label:t}}));d.setState({targetOptions:n})})).onError((function(e){return d.setState({error:e})}))},d.targetSelection=function(){var e=d.state,t=e.targetOptions,n=e.targetValue;return i.createElement(a.FormGroup,null,i.createElement(a.ControlLabel,null,d.props.targetSelectionLabel),i.createElement(u.default,{placeholder:d.props.targetSelectionPlaceholder,value:n,options:t,onChange:d.onTargetSelectionChange}))},d.fieldSelection=function(){var e=d.state.targetValue;return i.createElement(a.FormGroup,null,i.createElement(a.ControlLabel,null,d.props.fieldSelectionLabel),i.createElement(h.FieldSelection,{multiSelection:!1,placeholder:"Select field for assertion",record:c.Rdf.iri(e.value),types:d.state.targetTypes,onCancel:function(){return d.onFieldSelectionChange(null)},onSave:d.onFieldSelectionChange,fieldFilter:d.fieldFilter}))},d.assertedValues=function(){return i.createElement("div",null,i.createElement("p",null,"Values that will be asserted for the given target:"),i.createElement("ul",null,l.map(d.state.values,(function(e){return i.createElement("li",{key:e.value},i.createElement(y.ResourceLinkComponent,{guessRepository:!0,uri:e.value}))}))))},d.createAssertionButton=function(){return i.createElement("div",{className:"pull-right"},i.createElement(a.Button,{onClick:d.onCreateAssertion,bsStyle:"primary"},"Continue"))},d.onCreateAssertion=function(){return d.setState({showAssertionDialog:!0})},d.onFieldSelectionChange=function(e){d.setState({field:e})},d.onTargetSelectionChange=function(e){if(e){var t=l.map(l.filter(d.props.selection,(function(t){return t!==e.value})),c.Rdf.iri),n=o.combine(l.map(t,d.getTypes)).map(l.flatten).map((function(e){return l.intersectionBy(e,(function(e){return e.value}))})).toProperty();d.getTypes(c.Rdf.iri(e.value)).flatMap((function(e){return n.map((function(t){return{targetTypes:e,valueTypes:t}}))})).onValue((function(n){var r=n.targetTypes,i=n.valueTypes;return d.setState({targetTypes:r,valueTypes:i,targetValue:e,values:t})}))}else d.setState({targetValue:e,values:[]})},d.constructInitialBeliefs=function(){var e=l.map(d.state.values,(function(e){return[e,{iri:s.Nothing(),belief:{type:"simple",value:"Agree"},target:c.Rdf.iri(d.state.targetValue.value),originRepository:"default",field:d.state.field,beliefType:"AssertedBelief",targetValue:e,isCanonical:!1}]}));return p.Map(e)},d.fieldFilter=function(e){return o.constant(l.some(d.state.valueTypes,(function(t){return t.value===e.range})))},d.repositories=f.getRepositoryStatus().map((function(e){return e.keySeq().toArray()})),d.getTypes=function(e){return d.repositories.flatMap((function(t){return o.combine(t.map((function(t){return d.getTypesFromRepository(t,e)})))})).map(l.flatten).map((function(e){return l.uniqWith(e,(function(e,t){return e.equals(t)}))})).toProperty()},d.TYPES_QUERY=m.SparqlUtil.Sparql(E||(E=r.__makeTemplateObject(["SELECT DISTINCT ?type WHERE { ?__resource__ a ?type }"],["SELECT DISTINCT ?type WHERE { ?__resource__ a ?type }"]))),d.getTypesFromRepository=function(e,t){return m.SparqlClient.select(m.SparqlClient.setBindings(d.TYPES_QUERY,{__resource__:t}),{context:{repository:e}}).map((function(e){return e.results.bindings.map((function(e){return e.type}))}))},d.state={showAssertionDialog:!1,targetOptions:[],targetValue:void 0,error:void 0,targetTypes:[],valueTypes:[],values:[]},d}return r.__extends(SimpleAssertionDialog,e),SimpleAssertionDialog.prototype.componentDidMount=function(){this.createTargetOptions(this.props.selection)},SimpleAssertionDialog.prototype.render=function(){return this.state.showAssertionDialog?i.createElement(v.QuickAssertionComponent,{fieldIri:this.state.field.iri,target:this.state.targetValue.value,valueTemplate:this.props.valueTemplate,formTemplate:this.props.formTemplate,editMode:!1,initialBeliefs:this.constructInitialBeliefs(),postAction:"redirect"}):i.createElement("div",{style:{height:400}},this.targetSelection(),l.isEmpty(this.state.values)?null:this.assertedValues(),this.state.targetValue&&!l.isEmpty(this.state.targetTypes)?this.fieldSelection():null,l.isEmpty(this.state.values)?null:this.createAssertionButton())},SimpleAssertionDialog.defaultProps={targetSelectionPlaceholder:"Please select the target record for the assertion",targetSelectionLabel:"Assertion Target Record",fieldSelectionLabel:"Assertion Field"},SimpleAssertionDialog}(d.Component)}}]);
//# sourceMappingURL=rs-simple-assertion-eb2c3e62fde1a6df52d9.js.map