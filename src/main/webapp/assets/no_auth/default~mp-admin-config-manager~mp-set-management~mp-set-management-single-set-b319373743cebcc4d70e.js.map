{"version":3,"sources":["webpack:///./src/main/web/components/ui/reorderable-list/index.ts","webpack:///./src/main/web/components/ui/reorderable-list/Ordering.ts","webpack:///./src/main/web/components/ui/reorderable-list/ReorderableList.tsx"],"names":["Ordering","ReorderableList","positions","this","length","setSize","size","invert","filter","p","result","slice","i","push","getPosition","index","getPositionToIndex","apply","items","map","moveItemFromTo","fromPosition","toPosition","positionToIndex","splice","empty","transpositions","Array","props","isDragging","state","ordering","React","Children","count","children","render","className","style","dragByHandle","toArray","classes","styles","component","dragging","draggingIndex","dragWhole","classnames","onDragOver","e","preventDefault","position","renderItem","item","itemClass","itemBodyClass","key","getChildKey","undefined","draggable","onDragStart","dataTransfer","setData","onDrag","onDragEnd","onDragEnter","onDragEnterTarget","onDragLeave","onDragLeaveTarget","onDrop","onDropAtTarget","itemHandle","itemBody","componentWillReceiveProps","nextProps","setState","itemIndex","stopPropagation","onOrderChanged","targetIndex","lastHoverIndex","dropEffect","newOrdering","Component","child","isValidChild","Error"],"mappings":"iIAmBA,cAAS,EAAAA,SAAA,EAAAA,SACT,cAAS,EAAAC,gBAAA,EAAAA,iB,oECDT,iBAGE,kBAAqCC,GAAA,KAAAA,YA2CvC,OAzCE,sBAAI,0BAAI,C,IAAR,WACE,OAAOC,KAAKD,UAAUE,Q,gCAGxB,mBAAAC,QAAA,SAAQC,GACN,GAAIH,KAAKD,UAAUE,SAAWE,EAC5B,OAAOH,KACF,GAAIG,EAAOH,KAAKD,UAAUE,OAC/B,OAAO,IAAIJ,SAASO,OAAOA,OAAOJ,KAAKD,WAAWM,QAAO,SAACC,GAAM,OAAAA,EAAIH,OAGpE,IADA,IAAMI,EAASP,KAAKD,UAAUS,QACrBC,EAAIF,EAAON,OAAQQ,EAAIN,EAAMM,IACpCF,EAAOG,KAAKD,GAEd,OAAO,IAAIZ,SAASU,IAIxB,mBAAAI,YAAA,SAAYC,GACV,OAAOZ,KAAKD,UAAUa,IAGxB,mBAAAC,mBAAA,WACE,OAAOT,OAAOJ,KAAKD,YAGrB,mBAAAe,MAAA,SAASC,GACP,OAAOf,KAAKE,QAAQa,EAAMd,QACvBY,qBACAG,KAAI,SAACJ,GAAU,OAAAG,EAAMH,OAG1B,mBAAAK,eAAA,SAAeC,EAAsBC,GACnC,GAAID,IAAiBC,EACnB,OAAOnB,KAET,IAAMoB,EAAkBpB,KAAKa,qBACtBD,EAAA,iBAEP,OADAQ,EAAgBC,OAAOF,EAAY,EAAGP,GAC/B,IAAIf,SAASO,OAAOgB,KA3Cb,SAAAE,MAAQ,IAAIzB,SAAS,IA6CvC,SA9CA,GAgDA,SAASO,OAAOmB,GAEd,IADA,IAAMhB,EAAS,IAAIiB,MAAMD,EAAetB,QAC/BQ,EAAI,EAAGA,EAAIc,EAAetB,OAAQQ,IACzCF,EAAOgB,EAAed,IAAMA,EAE9B,OAAOF,EArDI,EAAAV,Y,kFCDb,OACA,OACA,OAEA,SAEA,UAEA,UAqBA,cAIE,yBAAY4B,GAAZ,MACE,YAAMA,IAAM,K,OAJN,EAAAC,YAAa,EAKnB,EAAKC,MAAQ,CACXC,UAAW,EAAKH,MAAMG,UAAY,EAAA/B,SAASyB,OAAOpB,QAAQ2B,EAAMC,SAASC,MAAM,EAAKN,MAAMO,Y,EAgHhG,OAvHqC,+BAWnC,0BAAAC,OAAA,W,MAAA,OACQ,aAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,MAAOH,EAAA,EAAAA,SAAUI,EAAA,EAAAA,aAC9BhB,EAAkBpB,KAAK2B,MAAMC,SAASf,qBACtCE,EAAQc,EAAMC,SAASO,QAAQL,GAC/BM,IAAO,MACVC,EAAOC,YAAY,EACpB,EAACD,EAAOE,UAA+C,iBAA7BzC,KAAK2B,MAAMe,cACrC,EAACH,EAAOH,cAAeA,EACvB,EAACG,EAAOI,YAAaP,E,GAEvB,OACE,uBAAKF,UAAWU,EAAWV,EAAWI,GACpCH,MAAOA,EACPU,WAEE,SAACC,GAAM,OAAAA,EAAEC,mBAGV3B,EAAgBJ,KAAI,SAACJ,EAAOoC,GAAa,SAAKC,WAAWlC,EAAMH,GAAQA,QAK9E,0BAAAqC,WAAA,SAAWC,EAAuBtC,GAAlC,WACQ,aAAEwB,EAAA,EAAAA,aAAce,EAAA,EAAAA,UAAWC,EAAA,EAAAA,cACzBV,EAAA,WAAAA,cACR,OACE,uBACEW,IAAKC,YAAYJ,GACjBhB,UAAWU,EAAWL,EAAOW,KAAMC,GAAU,eAC/BvC,IAAU8B,QAAuBa,EAC/CC,WAAYpB,EACZqB,YAAa,SAACX,GAEZA,EAAEY,aAAaC,QAAQ,2BAA4B,KAErDC,OAAQ,SAACd,GAAM,SAAKc,OAAOhD,EAAOkC,IAClCe,UAAW,SAACf,GAAM,SAAKe,aACvBhB,WAAY,SAACC,GAAM,OAAAA,EAAEC,kBACrBe,YAAa,SAAChB,GAAM,SAAKiB,kBAAkBnD,EAAOkC,IAClDkB,YAAa,SAAClB,GAAM,SAAKmB,kBAAkBrD,IAC3CsD,OAAQ,SAACpB,GAAM,SAAKqB,eAAevD,EAAOkC,KAE1C,uBAAKZ,UAAWK,EAAO6B,WAAYZ,UAAWpB,IAC9C,uBAAKF,UAAWU,EAAWL,EAAO8B,SAAUjB,IAAiBF,KAKnE,0BAAAoB,0BAAA,SAA0BC,GACxB,IAAM3C,GAAY2C,EAAU3C,UAAY5B,KAAK2B,MAAMC,UAAU1B,QAAQ2B,EAAMC,SAASC,MAAMwC,EAAUvC,WACpGhC,KAAKwE,SAAS,CAAE5C,SAAQ,KAGlB,0BAAAgC,OAAR,SAAea,EAAmB3B,GAC5B9C,KAAK0B,aAGToB,EAAE4B,kBACF1E,KAAK0B,YAAa,EAClB1B,KAAKwE,SAAS,CAAE9B,cAAe+B,MAGzB,0BAAAZ,UAAR,WACO7D,KAAK0B,aAGV1B,KAAK0B,YAAa,EAEd1B,KAAKyB,MAAMkD,gBAAkB3E,KAAK2B,MAAMC,WAAa5B,KAAKyB,MAAMG,UAClE5B,KAAKyB,MAAMkD,eAAe3E,KAAK2B,MAAMC,UAGvC5B,KAAKwE,SAAS,CAAE9B,mBAAea,MAGzB,0BAAAY,eAAR,SAAuBS,EAAqB9B,GACrC9C,KAAK0B,aAGVoB,EAAEC,iBACF/C,KAAK6E,oBAAiBtB,EACtBvD,KAAKwE,SAAS,CAAE9B,mBAAea,MAGzB,0BAAAQ,kBAAR,SAA0BU,EAAmB3B,GAC3C,GAAK9C,KAAK0B,WAAV,CAGAoB,EAAEC,iBACFD,EAAE4B,kBACF5B,EAAEY,aAAaoB,WAAa,OAEpB,IAAApC,EAAA,WAAAA,cACR,GAAI+B,IAAczE,KAAK6E,gBAAkBJ,IAAc/B,EAAe,CACpE1C,KAAK6E,eAAiBJ,EACd,IAAA7C,EAAA,WAAAA,SACFmD,EAAcnD,EAASX,eAAeW,EAASjB,YAAY+B,GAAgBd,EAASjB,YAAY8D,IACtGzE,KAAKwE,SAAS,CAAE5C,SAAUmD,OAItB,0BAAAd,kBAAR,SAA0BQ,GACnBzE,KAAK0B,aAGV1B,KAAK6E,oBAAiBtB,IAE1B,gBAvHA,CAAqC,EAAAyB,WAyHrC,SAAS1B,YAAY2B,GACnB,GAAqB,iBAAVA,GAAuC,iBAAVA,EACtC,OAAOA,EACF,GAAI,EAAAC,aAAaD,GACtB,OAAOA,EAAM5B,IAEb,MAAM,IAAI8B,MAAM,6CA/HP,EAAArF,kBAmIb,UAAeA","file":"default~mp-admin-config-manager~mp-set-management~mp-set-management-single-set-b319373743cebcc4d70e.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport { Ordering } from './Ordering';\nexport { ReorderableList } from './ReorderableList';\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport class Ordering {\n  static readonly empty = new Ordering([]);\n\n  private constructor(private readonly positions: ReadonlyArray<number>) {}\n\n  get size() {\n    return this.positions.length;\n  }\n\n  setSize(size: number): Ordering {\n    if (this.positions.length === size) {\n      return this;\n    } else if (size < this.positions.length) {\n      return new Ordering(invert(invert(this.positions).filter((p) => p < size)));\n    } else {\n      const result = this.positions.slice();\n      for (let i = result.length; i < size; i++) {\n        result.push(i);\n      }\n      return new Ordering(result);\n    }\n  }\n\n  getPosition(index: number): number {\n    return this.positions[index];\n  }\n\n  getPositionToIndex(): number[] {\n    return invert(this.positions);\n  }\n\n  apply<T>(items: ReadonlyArray<T>): T[] {\n    return this.setSize(items.length)\n      .getPositionToIndex()\n      .map((index) => items[index]);\n  }\n\n  moveItemFromTo(fromPosition: number, toPosition: number): Ordering {\n    if (fromPosition === toPosition) {\n      return this;\n    }\n    const positionToIndex = this.getPositionToIndex();\n    const [index] = positionToIndex.splice(fromPosition, 1);\n    positionToIndex.splice(toPosition, 0, index);\n    return new Ordering(invert(positionToIndex));\n  }\n}\n\nfunction invert(transpositions: ReadonlyArray<number>): number[] {\n  const result = new Array(transpositions.length);\n  for (let i = 0; i < transpositions.length; i++) {\n    result[transpositions[i]] = i;\n  }\n  return result;\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport { Component, CSSProperties } from 'react';\nimport * as classnames from 'classnames';\n\nimport { isValidChild } from 'platform/components/utils';\n\nimport { Ordering } from './Ordering';\n\nimport * as styles from './ReorderableList.scss';\n\ninterface Props {\n  ordering?: Ordering;\n  onOrderChanged?: (ordering: Ordering) => void;\n  /**\n   * Reorder items only by dragging by handle, which allows mouse events\n   * to pass through.\n   */\n  dragByHandle?: boolean;\n  className?: string;\n  itemClass?: string;\n  itemBodyClass?: string;\n  style?: CSSProperties;\n}\n\ninterface State {\n  readonly ordering?: Ordering;\n  readonly draggingIndex?: number;\n}\n\nexport class ReorderableList extends Component<Props, State> {\n  private isDragging = false;\n  private lastHoverIndex: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ordering: (this.props.ordering || Ordering.empty).setSize(React.Children.count(this.props.children)),\n    };\n  }\n\n  render() {\n    const { className, style, children, dragByHandle } = this.props;\n    const positionToIndex = this.state.ordering.getPositionToIndex();\n    const items = React.Children.toArray(children);\n    const classes = {\n      [styles.component]: true,\n      [styles.dragging]: typeof this.state.draggingIndex === 'number',\n      [styles.dragByHandle]: dragByHandle,\n      [styles.dragWhole]: !dragByHandle,\n    };\n    return (\n      <div className={classnames(className, classes)}\n        style={style}\n        onDragOver={\n          // we need this to prevent ugly default animation on drop in FF\n          (e) => e.preventDefault()\n        }\n      >\n        {positionToIndex.map((index, position) => this.renderItem(items[index], index))}\n      </div>\n    );\n  }\n\n  renderItem(item: React.ReactNode, index: number) {\n    const { dragByHandle, itemClass, itemBodyClass } = this.props;\n    const { draggingIndex } = this.state;\n    return (\n      <div\n        key={getChildKey(item)}\n        className={classnames(styles.item, itemClass)}\n        data-dragged={index === draggingIndex ? true : undefined}\n        draggable={!dragByHandle}\n        onDragStart={(e) => {\n          // required to perform d'n'd operation in Firefox\n          e.dataTransfer.setData('mp-reorderable-list-item', '');\n        }}\n        onDrag={(e) => this.onDrag(index, e)}\n        onDragEnd={(e) => this.onDragEnd()}\n        onDragOver={(e) => e.preventDefault()}\n        onDragEnter={(e) => this.onDragEnterTarget(index, e)}\n        onDragLeave={(e) => this.onDragLeaveTarget(index)}\n        onDrop={(e) => this.onDropAtTarget(index, e)}\n      >\n        <div className={styles.itemHandle} draggable={dragByHandle}></div>\n        <div className={classnames(styles.itemBody, itemBodyClass)}>{item}</div>\n      </div>\n    );\n  }\n\n  componentWillReceiveProps(nextProps: Props & React.Props<any>) {\n    const ordering = (nextProps.ordering || this.state.ordering).setSize(React.Children.count(nextProps.children));\n    this.setState({ ordering });\n  }\n\n  private onDrag(itemIndex: number, e: React.DragEvent<HTMLDivElement>) {\n    if (this.isDragging) {\n      return;\n    }\n    e.stopPropagation();\n    this.isDragging = true;\n    this.setState({ draggingIndex: itemIndex });\n  }\n\n  private onDragEnd() {\n    if (!this.isDragging) {\n      return;\n    }\n    this.isDragging = false;\n\n    if (this.props.onOrderChanged && this.state.ordering !== this.props.ordering) {\n      this.props.onOrderChanged(this.state.ordering);\n    }\n\n    this.setState({ draggingIndex: undefined });\n  }\n\n  private onDropAtTarget(targetIndex: number, e: React.DragEvent<HTMLDivElement>) {\n    if (!this.isDragging) {\n      return;\n    }\n    e.preventDefault();\n    this.lastHoverIndex = undefined;\n    this.setState({ draggingIndex: undefined });\n  }\n\n  private onDragEnterTarget(itemIndex: number, e: React.DragEvent<HTMLDivElement>) {\n    if (!this.isDragging) {\n      return;\n    }\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'move';\n\n    const { draggingIndex } = this.state;\n    if (itemIndex !== this.lastHoverIndex && itemIndex !== draggingIndex) {\n      this.lastHoverIndex = itemIndex;\n      const { ordering } = this.state;\n      const newOrdering = ordering.moveItemFromTo(ordering.getPosition(draggingIndex), ordering.getPosition(itemIndex));\n      this.setState({ ordering: newOrdering });\n    }\n  }\n\n  private onDragLeaveTarget(itemIndex: number) {\n    if (!this.isDragging) {\n      return;\n    }\n    this.lastHoverIndex = undefined;\n  }\n}\n\nfunction getChildKey(child: React.ReactNode): string | number {\n  if (typeof child === 'string' || typeof child === 'number') {\n    return child;\n  } else if (isValidChild(child)) {\n    return child.key;\n  } else {\n    throw new Error('Unexpected child type for ReorderableList');\n  }\n}\n\nexport default ReorderableList;\n"],"sourceRoot":""}