{"version":3,"sources":["webpack:///./node_modules/rdf-store-inmemory/index.js"],"names":["util","AbstractStore","iriToKey","iri","toString","InMemoryStore","options","this","rdf","graphs","call","inherits","prototype","add","graph","callback","self","Promise","resolve","createGraph","addAll","delete","Object","keys","forEach","module","exports"],"mappings":"gFAAA,IAAIA,EAAO,EAAQ,KACfC,EAAgB,EAAQ,MAE5B,SAASC,SAAUC,GAEjB,OAAY,IAARA,EACKA,EAIJA,EAIEA,EAAIC,WAHF,KAMX,SAASC,cAAeC,GACtBA,EAAUA,GAAW,GAErBC,KAAKC,IAAMF,EAAQE,KAAO,EAAQ,MAClCD,KAAKE,OAAS,GAEdR,EAAcS,KAAKH,MAGrBP,EAAKW,SAASN,cAAeJ,GAE7BI,cAAcO,UAAUC,IAAM,SAAUV,EAAKW,EAAOC,GAClD,IAAIC,EAAOT,KAKX,OAHAJ,EAAMD,SAASC,GACfY,EAAWA,GAAY,aAEhB,IAAIE,SAAQ,SAAUC,GAC3BF,EAAKP,OAAON,GAAOa,EAAKR,IAAIW,cAC5BH,EAAKP,OAAON,GAAKiB,OAAON,GAExBC,EAAS,KAAMD,GACfI,EAAQJ,OAIZT,cAAcO,UAAUS,OAAS,SAAUlB,EAAKY,GAC9C,IAAIC,EAAOT,KAKX,OAHAJ,EAAMD,SAASC,GACfY,EAAWA,GAAY,aAEhB,IAAIE,SAAQ,SAAUC,GACvBf,KAAOa,EAAKP,eACPO,EAAKP,OAAON,GAGrBY,IACAG,QAIJb,cAAcO,UAAUE,MAAQ,SAAUX,EAAKY,GAC7C,IAAIC,EAAOT,KAKX,OAHAJ,EAAMD,SAASC,GACfY,EAAWA,GAAY,aAEhB,IAAIE,SAAQ,SAAUC,GAC3B,IAAIJ,EAAQ,KAERX,EACFW,EAAQE,EAAKP,OAAON,IAEpBW,EAAQE,EAAKR,IAAIW,cAEjBG,OAAOC,KAAKP,EAAKP,QAAQe,SAAQ,SAAUrB,GACzCW,EAAMM,OAAOJ,EAAKP,OAAON,QAI7BY,EAAS,KAAMD,GACfI,EAAQJ,OAIZW,EAAOC,QAAUrB","file":"npm.rdf-store-inmemory-77997f51b7e5f25ffb4d.js","sourcesContent":["var util = require('util')\nvar AbstractStore = require('rdf-store-abstract')\n\nfunction iriToKey (iri) {\n  // default graph\n  if (iri === true) {\n    return iri\n  }\n\n  // all graphs\n  if (!iri) {\n    return null\n  }\n\n  return iri.toString()\n}\n\nfunction InMemoryStore (options) {\n  options = options || {}\n\n  this.rdf = options.rdf || require('rdf-ext')\n  this.graphs = {}\n\n  AbstractStore.call(this)\n}\n\nutil.inherits(InMemoryStore, AbstractStore)\n\nInMemoryStore.prototype.add = function (iri, graph, callback) {\n  var self = this\n\n  iri = iriToKey(iri)\n  callback = callback || function () {}\n\n  return new Promise(function (resolve) {\n    self.graphs[iri] = self.rdf.createGraph()\n    self.graphs[iri].addAll(graph)\n\n    callback(null, graph)\n    resolve(graph)\n  })\n}\n\nInMemoryStore.prototype.delete = function (iri, callback) {\n  var self = this\n\n  iri = iriToKey(iri)\n  callback = callback || function () {}\n\n  return new Promise(function (resolve) {\n    if (iri in self.graphs) {\n      delete self.graphs[iri]\n    }\n\n    callback()\n    resolve()\n  })\n}\n\nInMemoryStore.prototype.graph = function (iri, callback) {\n  var self = this\n\n  iri = iriToKey(iri)\n  callback = callback || function () {}\n\n  return new Promise(function (resolve) {\n    var graph = null\n\n    if (iri) {\n      graph = self.graphs[iri]\n    } else {\n      graph = self.rdf.createGraph()\n\n      Object.keys(self.graphs).forEach(function (iri) {\n        graph.addAll(self.graphs[iri])\n      })\n    }\n\n    callback(null, graph)\n    resolve(graph)\n  })\n}\n\nmodule.exports = InMemoryStore\n"],"sourceRoot":""}