{"version":3,"sources":["webpack:///./src/main/web/components/ui/inputs/index.ts","webpack:///./src/main/web/components/ui/inputs/AbstractAutoCompletionInput.ts","webpack:///./src/main/web/components/ui/inputs/AutoCompletionInput.ts","webpack:///./src/main/web/components/ui/inputs/ClearableInput.tsx","webpack:///./src/main/web/components/ui/inputs/RemovableBadge.tsx"],"names":["props","cancellation","Cancellation","keyPressStream","Kefir","pool","initStream","forceSuggestionStream","loadOptions","query","plug","constant","onChange","x","setState","value","actions","onSelected","onKeyDown","event","allowForceSuggestion","keyCode","customSuggestionRenderer","template","option","createElement","TemplateItem","source","options","executeSuggestionQuery","token","defaultQueryFn","queryFn","_","isEmpty","state","searchTermVariable","undefined","loading","componentWillMount","this","assign","applyDefaultProps","componentWillUnmount","cancelAll","componentDidMount","requestProperty","merge","take","map","length","minimumInput","filter","debounce","flatMapLatest","onValue","vals","componentWillReceiveProps","nextProps","render","valueRenderer","templates","suggestion","multi","autofocus","onCloseResetsInput","filterOptions","lambda","identity","isLoading","autoload","disabled","className","classNames","style","ref","name","placeholder","onInputChange","onInputKeyDown","noResultsText","isUndefined","empty","optionRenderer","labelKey","labelBindingName","valueKey","valueBindingName","datatype","getValue","setValue","iri","LabelsService","getLabel","label","newValue","Rdf","literal","focus","refs","input","displayKey","AbstractAutoCompletionInput","MIN_LENGTH","defaultProps","Component","Async","propTypes","PropTypes","oneOfType","node","string","context","executeQuery","tokenVariable","parsedQuery","replaceTokenAndParseQuery","escapeLuceneSyntax","tokenizeLuceneQuery","queryParam","SparqlUtil","makeLuceneQuery","queryWithToken","SparqlClient","setBindings","semanticContext","select","res","results","bindings","queryString","parametrized","indexOf","replace","RegExp","console","warn","parseQuerySync","result","comp","autoCompletion","defaultQuery","droppable","Droppable","dropStyles","styles","dropComponents","components","onDrop","drop","AutoCompletionInput","CLASS_NAME","onInputMount","onClickSelf","e","currentTarget","target","onFocus","focused","onBlur","inputClassName","inputStyle","onClear","clearTitle","children","hasNonEmptyAddon","Children","count","groupClass","classnames","controlClass","onClick","type","inputProps","title","React","ClearableInput","D","div","button","disableClick","disableRemove","onRemove","span","RemovableBadge"],"mappings":"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","file":"default~diagram-search-result~field-editor~mp-admin-config-manager~mp-set-management~mp-set-manageme~58f8de69-e026fb47085526fa17a9.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport * from './AutoCompletionInput';\nexport * from './ClearableInput';\nexport * from './AbstractAutoCompletionInput';\nexport * from './RemovableBadge';\n","/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, ComponentClass, Props as ReactProps, CSSProperties, createElement } from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as Kefir from 'kefir';\nimport * as lambda from 'core.lambda';\nimport * as assign from 'object-assign';\nimport * as classNames from 'classnames';\nimport ReactSelect, { Async, Options } from 'react-select';\nimport * as _ from 'lodash';\n\nimport { SparqlClient } from 'platform/api/sparql';\nimport { Rdf } from 'platform/api/rdf';\nimport * as LabelsService from 'platform/api/services/resource-label';\nimport { Cancellation } from 'platform/api/async';\n\nimport { TemplateItem } from 'platform/components/ui/template';\n\ndeclare module 'react-select' {\n  interface ReactSelectProps {\n    /** Should only be applicable for Async? */\n    autoload?: boolean;\n    /** Missing from typings */\n    onCloseResetsInput?: boolean;\n    /** ?? */\n    'data-datatype'?: string;\n  }\n}\n\nexport interface BaseProps {\n  disabled?: boolean;\n  className?: string;\n  autofocus?: boolean;\n  style?: CSSProperties;\n  onClick?: any;\n  datatype?: string;\n  searchTermVariable?: string;\n  minimumInput?: number;\n  allowForceSuggestion?: boolean;\n  valueBindingName?: string;\n  labelBindingName?: string;\n  name?: string;\n  placeholder?: string;\n  multi?: boolean;\n  templates?: {\n    empty?: string;\n    suggestion?: string;\n    displayKey?: (obj: SparqlClient.Binding) => string;\n  };\n  actions?: {\n    onSelected?: (selected: SparqlClient.Binding | SparqlClient.Binding[]) => void;\n  };\n  value?: SparqlClient.Binding | ReadonlyArray<SparqlClient.Binding>;\n}\n\nexport interface AbstractAutoCompletionInputProps extends ReactProps<AbstractAutoCompletionInput>, BaseProps {\n  queryFn: (x: string, tokenVariable: string) => Kefir.Property<SparqlClient.Bindings>;\n  /**\n   * default query is used to show autosuggestion when input size is 0\n   * e.g. it is useful to show latest items added to clipboard immediately when input is focused\n   */\n  defaultQueryFn?: (x: string, tokenVariable: string) => Kefir.Property<SparqlClient.Bindings>;\n}\n\ninterface State extends BaseProps {\n  options?: Options;\n  loading?: boolean;\n  error?: any;\n  query?: string;\n}\n\nexport class AbstractAutoCompletionInput extends Component<AbstractAutoCompletionInputProps, State> {\n  static defaultProps: Partial<AbstractAutoCompletionInputProps> = {\n    autofocus: true,\n  };\n\n  private static MIN_LENGTH = 3;\n\n  refs: {\n    input: ReactSelect;\n    [key: string]: any;\n  };\n\n  private cancellation = new Cancellation();\n\n  private keyPressStream = Kefir.pool<string>();\n  private initStream = Kefir.pool<string>();\n  private forceSuggestionStream = Kefir.pool<any>();\n\n  constructor(props: AbstractAutoCompletionInputProps) {\n    super(props);\n    this.state = {\n      value: undefined,\n      options: undefined,\n      loading: false,\n    };\n  }\n\n  componentWillMount() {\n    this.setState(assign(this.applyDefaultProps(this.props)));\n  }\n\n  componentWillUnmount() {\n    this.cancellation.cancelAll();\n  }\n\n  componentDidMount() {\n    // Handles load if defaultQuery is provided\n    if (this.props.defaultQueryFn) {\n      this.initStream.plug(Kefir.constant(''));\n    }\n    const requestProperty = Kefir.merge([\n      this.initStream.take(1).map((query) => {\n        this.setState({ loading: true });\n        return query;\n      }),\n      this.forceSuggestionStream\n        .map((event) => {\n          const { query } = this.state;\n          if (query.length < this.state.minimumInput) {\n            this.setState({ loading: true });\n          } else {\n            this.setState({ loading: false, options: undefined });\n          }\n          return query;\n        })\n        .filter((query) => query.length < this.state.minimumInput),\n      this.keyPressStream\n        .map((query) => {\n          this.setState({ query: query });\n          if (query.length >= this.state.minimumInput) {\n            this.setState({ loading: true });\n          } else {\n            this.setState({ loading: false, options: undefined });\n          }\n          return query;\n        })\n        .filter((query) => query.length >= this.state.minimumInput)\n        .debounce(300),\n    ]).flatMapLatest(this.executeSuggestionQuery);\n\n    this.cancellation.map(requestProperty).onValue((vals) =>\n      this.setState((state) => {\n        return { options: vals, loading: false };\n      })\n    );\n  }\n\n  componentWillReceiveProps(nextProps: AbstractAutoCompletionInputProps) {\n    this.setState(this.applyDefaultProps(nextProps));\n  }\n\n  render() {\n    const valueRenderer = this.customSuggestionRenderer(this.state.templates.suggestion);\n    return createElement(ReactSelect, {\n      multi: this.state.multi,\n      autofocus: this.props.autofocus,\n      onCloseResetsInput: true,\n      filterOptions: lambda.identity,\n      isLoading: this.state.loading,\n      autoload: false,\n      disabled: this.state.disabled,\n      className: classNames(this.state.className),\n      style: this.props.style,\n      ref: 'input',\n      name: this.state.name,\n      placeholder: this.state.placeholder,\n      value: this.state.value,\n      onChange: this.onChange,\n      onInputChange: this.loadOptions,\n      onInputKeyDown: this.onKeyDown,\n      noResultsText: this.state.loading\n        ? 'Loading ...'\n        : _.isUndefined(this.state.options)\n        ? `Minimum ${this.state.minimumInput} characters to search`\n        : this.customSuggestionRenderer(this.state.templates.empty)({}),\n      optionRenderer: valueRenderer,\n      valueRenderer: valueRenderer,\n      labelKey: this.state.labelBindingName,\n      valueKey: this.state.valueBindingName,\n      options: this.state.options,\n      'data-datatype': this.state.datatype,\n    });\n  }\n\n  getValue(): SparqlClient.Binding | ReadonlyArray<SparqlClient.Binding> {\n    return this.state.value;\n  }\n\n  setValue(iri: Rdf.Iri) {\n    LabelsService.getLabel(iri).onValue((label) => {\n      const newValue: SparqlClient.Binding = {\n        [this.state.labelBindingName]: Rdf.literal(label),\n        [this.state.valueBindingName]: iri,\n      };\n      this.onChange(newValue);\n    });\n  }\n\n  focus() {\n    return this.refs.input.focus();\n  }\n\n  private loadOptions = (query: string) => {\n    this.keyPressStream.plug(Kefir.constant(query));\n  };\n\n  private onChange = (x: SparqlClient.Binding | SparqlClient.Binding[]) => {\n    this.setState({ value: x });\n    this.props.actions.onSelected(x);\n  };\n\n  private onKeyDown = (event) => {\n    if (this.props.allowForceSuggestion) {\n      if (event.keyCode === 13) {\n        this.forceSuggestionStream.plug(Kefir.constant(event.keyCode));\n      }\n    }\n  };\n\n  private customSuggestionRenderer = (template: string) => (option: any) => {\n    return createElement(TemplateItem, {\n      template: {\n        source: template,\n        options: option,\n      },\n    });\n  };\n\n  private executeSuggestionQuery = (token: string) => {\n    // if token is empty use default query to get suggestions\n    const { defaultQueryFn, queryFn } = this.props;\n    const queryToUse = _.isEmpty(token) && defaultQueryFn ? defaultQueryFn : queryFn;\n    return queryToUse(token, this.state.searchTermVariable);\n  };\n\n  private applyDefaultProps(props) {\n    const actions = assign(\n      {\n        onSelected: (token) => {\n          /**/\n        },\n      },\n      props.actions\n    );\n\n    const templates = assign(\n      {\n        empty: 'No matches for your query.',\n        suggestion: '<span title=\"{{value.value}}\">{{label.value}}</span>',\n        displayKey: (x) => x.label.value,\n      },\n      props.templates\n    );\n\n    return assign(\n      {\n        multi: false,\n        placeholder: 'search',\n        valueBindingName: 'value',\n        labelBindingName: 'label',\n        searchTermVariable: 'token',\n        name: 'search-input',\n        minimumInput: AbstractAutoCompletionInput.MIN_LENGTH,\n        datatype: 'xsd:string',\n      },\n      props,\n      {\n        actions: actions,\n        templates: templates,\n      }\n    );\n  }\n}\n\n// override incorrect noResultsText to make ReactSelect work\n// in debug mode (when warnings are errors)\n(Async as ComponentClass<any>).propTypes['noResultsText'] = PropTypes.oneOfType([PropTypes.node, PropTypes.string]);\n","/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Props, createElement } from 'react';\nimport * as assign from 'object-assign';\nimport * as SparqlJs from 'sparqljs';\n\nimport { Component, ComponentContext } from 'platform/api/components';\nimport { SparqlClient, SparqlUtil } from 'platform/api/sparql';\nimport { Rdf } from 'platform/api/rdf';\nimport { Droppable } from 'platform/components/dnd';\n\nimport { BaseProps, AbstractAutoCompletionInput } from './AbstractAutoCompletionInput';\n\nexport interface AutoCompletionInputProps extends Props<AutoCompletionInput>, BaseProps {\n  query: string | SparqlJs.SparqlQuery;\n  escapeLuceneSyntax?: boolean;\n  tokenizeLuceneQuery?: boolean;\n  droppable?: {\n    query: string;\n    styles?: {\n      enabled: React.CSSProperties;\n      disabled: React.CSSProperties;\n      enabledHover?: React.CSSProperties\n    };\n    components?: {\n      disabledHover?: any;\n    };\n  };\n  defaultQuery?: string | SparqlJs.SparqlQuery;\n  actions?: {\n    onSelected?: (selected: SparqlClient.Binding | SparqlClient.Binding[]) => void;\n  };\n  multi?: boolean;\n}\n\nconst SEARCH_INPUT_VARIABLE = '__token__';\nexport class AutoCompletionInput extends Component<AutoCompletionInputProps, {}> {\n  private autoCompletion: AbstractAutoCompletionInput;\n\n  constructor(props: AutoCompletionInputProps, context: ComponentContext) {\n    super(props, context);\n  }\n\n  render() {\n    const result = createElement(\n      AbstractAutoCompletionInput,\n      assign(\n        {\n          ref: (comp) => {\n            this.autoCompletion = comp;\n          },\n        },\n        this.props,\n        {\n          queryFn: this.executeQuery(this.props.query),\n          defaultQueryFn: this.props.defaultQuery ? this.executeQuery(this.props.defaultQuery) : undefined,\n          templates: this.props.templates || undefined,\n          actions: {\n            onSelected: this.props.actions.onSelected,\n          },\n        }\n      )\n    );\n    if (this.props.droppable) {\n      return createElement(\n        Droppable,\n        {\n          query: this.props.droppable.query,\n          dropStyles: this.props.droppable.styles,\n          dropComponents: this.props.droppable.components,\n          onDrop: (drop: Rdf.Iri) => {\n            this.autoCompletion.setValue(drop);\n          },\n        },\n        result\n      );\n    } else {\n      return result;\n    }\n  }\n\n  getValue(): SparqlClient.Binding | ReadonlyArray<SparqlClient.Binding> {\n    return this.autoCompletion.getValue();\n  }\n\n  focus() {\n    return null; // this.refs.input.focus();\n  }\n\n  private executeQuery = (query: string | SparqlJs.SparqlQuery) => (token: string, tokenVariable: string) => {\n    const parsedQuery: SparqlJs.SparqlQuery =\n      typeof query === 'string'\n        ? this.replaceTokenAndParseQuery(query as string, tokenVariable, token)\n        : (query as SparqlJs.SparqlQuery);\n    const { escapeLuceneSyntax, tokenizeLuceneQuery } = this.props;\n    const queryParam = SparqlUtil.makeLuceneQuery(token, escapeLuceneSyntax, tokenizeLuceneQuery);\n    const queryWithToken = SparqlClient.setBindings(parsedQuery, { [SEARCH_INPUT_VARIABLE]: queryParam });\n    const context = this.context.semanticContext;\n    return SparqlClient.select(queryWithToken, { context: context }).map((res) => res.results.bindings);\n  };\n\n  private replaceTokenAndParseQuery = (queryString: string, tokenVariable: string, token: string) => {\n    let parametrized = queryString;\n    if (queryString.indexOf(SEARCH_INPUT_VARIABLE) === -1) {\n      parametrized = queryString.replace(new RegExp('\\\\?' + tokenVariable), token);\n      if (parametrized !== queryString) {\n        console.warn('Please use new $__token__ variable in autocomplete search.');\n      }\n    }\n    return SparqlUtil.parseQuerySync(parametrized);\n  };\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport { InputHTMLAttributes, CSSProperties, Children } from 'react';\nimport * as classnames from 'classnames';\n\nimport './clearable-input.scss';\n\nexport interface ClearableInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  className?: string;\n  style?: CSSProperties;\n  inputClassName?: string;\n  inputStyle?: CSSProperties;\n  clearTitle?: string;\n  onClear: () => void;\n}\n\ninterface State {\n  readonly focused?: boolean;\n}\n\nconst CLASS_NAME = 'clearable-input';\n\nexport class ClearableInput extends React.Component<ClearableInputProps, State> {\n  static defaultProps: Partial<ClearableInputProps> = {\n    clearTitle: 'Clear input',\n  };\n\n  private input: HTMLInputElement;\n\n  constructor(props: ClearableInputProps, context: any) {\n    super(props, context);\n    this.state = { focused: false };\n  }\n\n  render() {\n    const { className, style, inputClassName, inputStyle, onClear, clearTitle, children, ...inputProps } = this.props;\n\n    const hasNonEmptyAddon = Children.count(children) > 0;\n\n    const groupClass = classnames(\n      `${CLASS_NAME} input-group has-feedback`,\n      this.state.focused ? `${CLASS_NAME}--focused` : undefined,\n      className\n    );\n    const controlClass = classnames(`${CLASS_NAME}__input form-control`, inputClassName);\n\n    return (\n      <div className={groupClass} style={style} onClick={this.onClickSelf}>\n        {hasNonEmptyAddon ? children : null}\n        <div className={`${CLASS_NAME}__input-with-clear`}>\n          <input\n            type=\"text\"\n            {...inputProps}\n            ref={this.onInputMount}\n            className={controlClass}\n            style={inputStyle}\n            placeholder={hasNonEmptyAddon ? undefined : inputProps.placeholder}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n          />\n          <div className={`${CLASS_NAME}__clear`} title={clearTitle} onClick={onClear}>\n            <span className=\"fa fa-times\" aria-hidden=\"true\"></span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private onInputMount = (input: HTMLInputElement) => {\n    this.input = input;\n  };\n\n  private onClickSelf = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.currentTarget === e.target && this.input) {\n      this.input.focus();\n    }\n  };\n\n  private onFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    this.setState({ focused: true });\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  private onBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    this.setState({ focused: false });\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport { Component, CSSProperties, ReactNode } from 'react';\nimport * as D from 'react-dom-factories';\n\nimport './removable-badge.scss';\n\nexport interface RemovableBadgeProps {\n  className?: string;\n  title?: string;\n  style?: CSSProperties;\n  disableClick?: boolean;\n  disableRemove?: boolean;\n  onClick?: () => void;\n  onRemove?: () => void;\n  children?: ReactNode;\n}\n\nconst CLASS_NAME = 'RemovableBadge';\n\nexport class RemovableBadge extends Component<RemovableBadgeProps, {}> {\n  render() {\n    return D.div(\n      {\n        className: `${CLASS_NAME} ${this.props.className || ''}`,\n        style: this.props.style,\n        title: this.props.title,\n      },\n      D.button(\n        {\n          className: `${CLASS_NAME}__content`,\n          type: 'button',\n          disabled: this.props.disableClick,\n          onClick: this.props.onClick,\n        },\n        this.props.children\n      ),\n      D.button(\n        {\n          className: `${CLASS_NAME}__remove`,\n          type: 'button',\n          disabled: this.props.disableRemove,\n          onClick: this.props.onRemove,\n        },\n        D.span({ className: 'fa fa-times' })\n      )\n    );\n  }\n}\n\nexport default RemovableBadge;\n"],"sourceRoot":""}