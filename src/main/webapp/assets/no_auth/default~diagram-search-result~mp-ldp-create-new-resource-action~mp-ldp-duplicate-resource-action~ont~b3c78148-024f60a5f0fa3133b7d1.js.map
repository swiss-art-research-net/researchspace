{"version":3,"sources":["webpack:///./src/main/web/components/ldp/CreateResourceDialog.ts"],"names":["States","Modal","createFactory","ReactBootstrap","ModalHeader","Header","ModalTitle","Title","ModalBody","Body","b","block","props","context","isLoading","state","LOADING","isSuccess","SUCCESS","onKeyPress","event","keyCode","preventDefault","stopPropagation","onSave","onSaveBtn","resourceName","getInputElement","value","length","setState","ERROR","errorMessage","type","offAny","_","delay","onHide","USER_INPUT","response","text","onAny","showMessage","createElement","Spinner","D","div","className","render","assign","this","classNames","onEntered","focus","closeButton","title","form","input","placeholder","ref","onKeyDown","button","disabled","onClick","findDOMNode","refs","Component","CreateResourceDialog"],"mappings":"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","file":"default~diagram-search-result~mp-ldp-create-new-resource-action~mp-ldp-duplicate-resource-action~ont~b3c78148-024f60a5f0fa3133b7d1.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { createFactory, createElement, ReactElement, KeyboardEvent, MouseEvent } from 'react';\n\nimport * as D from 'react-dom-factories';\nimport { findDOMNode } from 'react-dom';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport * as Kefir from 'kefir';\nimport * as assign from 'object-assign';\nimport * as _ from 'lodash';\nimport * as classNames from 'classnames';\nimport * as block from 'bem-cn';\n\nimport { Component } from 'platform/api/components';\nimport { Spinner } from 'platform/components/ui/spinner';\n\nconst Modal = createFactory(ReactBootstrap.Modal);\nconst ModalHeader = createFactory(ReactBootstrap.Modal.Header);\nconst ModalTitle = createFactory(ReactBootstrap.Modal.Title);\nconst ModalBody = createFactory(ReactBootstrap.Modal.Body);\n\nexport interface CreateResourceDialogProps extends ReactBootstrap.ModalDialogProps {\n  title?: string;\n  placeholder?: string;\n  onSave: (name: string) => Kefir.Property<any>;\n  onHide: () => void;\n  show?: boolean;\n}\n\nenum States {\n  USER_INPUT,\n  LOADING,\n  ERROR,\n  SUCCESS,\n}\n\ninterface CreateResourceDialogState {\n  state: States;\n  errorMessage?: string;\n}\n\nconst REF_LDP_RESOURCE_NAME = 'ldpResourceName';\n\nconst b = block('create-ldp-resource-modal');\n/**\n * Dialog for CreateNewResource action, should not be used standalone.\n */\nexport class CreateResourceDialog extends Component<CreateResourceDialogProps, CreateResourceDialogState> {\n  constructor(props: CreateResourceDialogProps, context: any) {\n    super(props, context);\n    this.state = {\n      state: States.USER_INPUT,\n    };\n  }\n\n  render() {\n    return Modal(\n      assign({}, this.props, {\n        className: classNames('form-group', b('')),\n        onHide: this.props.onHide,\n        onEntered: () => this.getInputElement().focus(),\n      }),\n      ModalHeader({ closeButton: true }, ModalTitle({}, this.props.title ? this.props.title : 'Create new resource')),\n      ModalBody(\n        {},\n        this.showMessage(),\n        D.form(\n          {\n            className: b('form'),\n          },\n          D.input({\n            className: classNames('form-control', b('form__collection-name')),\n            placeholder: this.props.placeholder ? this.props.placeholder : 'Name',\n            type: 'text',\n            ref: REF_LDP_RESOURCE_NAME,\n            onKeyDown: this.onKeyPress,\n          }),\n          D.button(\n            {\n              className: classNames('btn btn-primary', b('form__save-button')),\n              disabled: this.isLoading() || this.isSuccess(),\n              onClick: this.onSaveBtn,\n            },\n            this.isLoading() ? 'Saving...' : 'Save'\n          )\n        )\n      )\n    );\n  }\n\n  private isLoading = () => {\n    return this.state.state === States.LOADING;\n  };\n\n  private isSuccess = () => {\n    return this.state.state === States.SUCCESS;\n  };\n\n  private onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.onSave();\n    }\n  };\n\n  private onSaveBtn = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onSave();\n  };\n\n  private onSave = () => {\n    const resourceName = this.getInputElement().value;\n    if (resourceName.length === 0) {\n      this.setState({\n        state: States.ERROR,\n        errorMessage: 'Name of the resource must not be empty',\n      });\n    } else {\n      this.setState({\n        state: States.LOADING,\n      });\n      const saveResult = this.props.onSave(resourceName);\n\n      const callback = (event) => {\n        if (event.type === 'value') {\n          this.setState({\n            state: States.SUCCESS,\n          });\n          saveResult.offAny(callback);\n          _.delay(() => {\n            this.props.onHide();\n            // reset state i.e. in case the user\n            // tries to create the same resource again while saving\n            this.setState({\n              state: States.USER_INPUT,\n            });\n          }, 1000);\n        } else if (event.type === 'error') {\n          this.setState({\n            state: States.ERROR,\n            errorMessage: event.value.response.text,\n          });\n        }\n      };\n      saveResult.onAny(callback);\n    } // end else\n  };\n\n  private showMessage = (): ReactElement<any> => {\n    switch (this.state.state) {\n      case States.USER_INPUT:\n        return null;\n      case States.LOADING:\n        return createElement(Spinner);\n      case States.SUCCESS:\n        return D.div(\n          {\n            className: 'alert alert-success text-center',\n          },\n          'New LDP resource has been created successfully!'\n        );\n      case States.ERROR:\n        return D.div(\n          {\n            className: 'alert alert-danger text-center',\n          },\n          this.state.errorMessage\n        );\n    }\n  };\n\n  private getInputElement() {\n    return findDOMNode(this.refs[REF_LDP_RESOURCE_NAME]) as HTMLInputElement;\n  }\n}\n"],"sourceRoot":""}