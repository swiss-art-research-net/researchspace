{"version":3,"sources":["webpack:///./node_modules/marked/lib/marked.js"],"names":["root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","this","tokens","links","marked","defaults","rules","normal","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","merge","lex","src","prototype","token","top","next","loose","cap","bull","b","space","i","tag","l","isordered","exec","substring","length","push","type","pedantic","lang","depth","header","split","align","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","resolveUrl","base","baseUrls","_scheme","_email","_inside","_href","_backpedal","output","out","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","e","baseUrl","originIndependentUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","obj","target","key","arguments","Object","hasOwnProperty","call","callback","pending","done","err","message","silent","setOptions","parser","lexer","inlineLexer","module","exports","window"],"mappings":"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","file":"npm.marked-301c03734fb5c970324b.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n"],"sourceRoot":""}