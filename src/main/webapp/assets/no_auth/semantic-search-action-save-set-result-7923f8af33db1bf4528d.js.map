{"version":3,"sources":["webpack:///./src/main/web/components/search/web-components/SemanticSearchSaveSetResultAction.tsx"],"names":["DIALOG_REF","render","SemanticSearchContext","Consumer","context","SaveSetResultActionInner","props","React","Component","onSave","getOverlaySystem","show","createElement","SaveSetDialog","saveInNewSet","bind","onHide","hide","maxSetSize","maybe","Nothing","name","resultQuery","cata","Just","query","SparqlClient","select","onValue","resultSet","projectionVariable","variables","isNothing","createNewSetFromItems","id","results","bindings","map","bindingSet","substring","child","Children","only","this","children","cloneElement","onClick","SaveSetResultAction"],"mappings":"6IAsBA,OACA,QAGA,QACA,UACA,SAEA,UAKMA,EAAa,qBAMnB,6C,+CAQA,OARkC,mCAChC,8BAAAC,OAAA,sBACE,OACE,gBAAC,EAAAC,sBAAsBC,SAAQ,MAC5B,SAACC,GAAY,uBAACC,EAAwB,cAAK,EAAKC,MAAK,CAAEF,QAASA,SAIzE,oBARA,CAAkCG,EAAMC,WAcxC,gG,OACU,EAAAC,OAAS,WACf,EAAAC,mBAAmBC,KACjBX,EACAO,EAAMK,cAAc,EAAAC,cAAe,CACjCJ,OAAQ,EAAKK,aAAaC,KAAK,GAC/BC,OAAQ,WAAM,SAAAN,mBAAmBO,KAAKjB,IACtCkB,WAAYC,EAAMC,cAKhB,EAAAN,aAAe,SAACO,GACd,IAAAC,EAAA,gBAAAA,YACR,OAAOA,EAAYC,KAAK,CACtBH,QAAS,WAAM,aACfI,KAAM,SAACC,GACL,SAAAC,aAAaC,OAAOF,GAAOG,SAAQ,SAACC,GAClC,IAAMC,EAAqBL,EAAMM,UAAU,GACvCT,EAAYU,WAGhB,EAAAC,sBACE,EAAK3B,MAAM4B,GACXb,EACAQ,EAAUM,QAAQC,SAASC,KAGzB,SAACC,GAAe,OAAAA,EAAWR,EAAmBS,UAAU,QAE1DX,SAAQ,WAAM,SAAAlB,mBAAmBO,KAAKjB,a,EAWlD,OAzCuC,wCAmC9B,mCAAAC,OAAP,WACE,IAAMuC,EAAQjC,EAAMkC,SAASC,KAAKC,KAAKrC,MAAMsC,UAC7C,OAAOrC,EAAMsC,aAAaL,EAAO,CAC/BM,QAASH,KAAKlC,UAGpB,yBAzCA,CAAuCF,EAAMC,WA2C7C,UAAeuC","file":"semantic-search-action-save-set-result-7923f8af33db1bf4528d.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport * as React from 'react';\nimport * as maybe from 'data.maybe';\n\nimport { Rdf } from 'platform/api/rdf';\nimport { SparqlClient } from 'platform/api/sparql';\nimport { SaveSetDialog, createNewSetFromItems } from 'platform/components/sets';\nimport { getOverlaySystem } from 'platform/components/ui/overlay';\n\nimport {\n  SemanticSearchContext,\n  ResultContext,\n} from 'platform/components/semantic/search/web-components/SemanticSearchApi';\n\nconst DIALOG_REF = 'save-as-set-dialog';\n\ninterface SaveSetResultActionProps {\n  id: string;\n}\n\nclass SaveSetResultAction extends React.Component<SaveSetResultActionProps, {}> {\n  render() {\n    return (\n      <SemanticSearchContext.Consumer>\n        {(context) => <SaveSetResultActionInner {...this.props} context={context} />}\n      </SemanticSearchContext.Consumer>\n    );\n  }\n}\n\ninterface InnerProps extends SaveSetResultActionProps {\n  context: ResultContext;\n}\n\nclass SaveSetResultActionInner extends React.Component<InnerProps, {}> {\n  private onSave = () => {\n    getOverlaySystem().show(\n      DIALOG_REF,\n      React.createElement(SaveSetDialog, {\n        onSave: this.saveInNewSet.bind(this),\n        onHide: () => getOverlaySystem().hide(DIALOG_REF),\n        maxSetSize: maybe.Nothing<number>(),\n      })\n    );\n  };\n\n  private saveInNewSet = (name: string) => {\n    const { resultQuery } = this.props.context;\n    return resultQuery.cata({\n      Nothing: () => null,\n      Just: (query) =>\n        SparqlClient.select(query).onValue((resultSet) => {\n          const projectionVariable = query.variables[0] as string;\n          if (resultQuery.isNothing) {\n            return;\n          }\n          createNewSetFromItems(\n            this.props.id,\n            name,\n            resultSet.results.bindings.map(\n              // in sparql.js projection variable is prefixed by ?,\n              // so we need to remove it to get binding name\n              (bindingSet) => bindingSet[projectionVariable.substring(1)] as Rdf.Iri\n            )\n          ).onValue(() => getOverlaySystem().hide(DIALOG_REF));\n        }),\n    });\n  };\n\n  public render() {\n    const child = React.Children.only(this.props.children) as React.ReactElement<any>;\n    return React.cloneElement(child, {\n      onClick: this.onSave,\n    });\n  }\n}\n\nexport default SaveSetResultAction;\n"],"sourceRoot":""}