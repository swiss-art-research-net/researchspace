{"version":3,"sources":["webpack:///./src/main/web/components/search/configuration/ConfigurationSelector.tsx","webpack:///./src/main/web/components/search/configuration/DatasetSelector.tsx","webpack:///./src/main/web/components/search/configuration/AlignmentSelector.tsx"],"names":["render","SemanticSearchContext","Consumer","context","ConfigurationSelectorInner","props","React","Component","ConfigurationSelector","configHolder","isCollapsed","className","styles","holder","onClick","onCollapseExpand","classnames","configExpand","configCollapse","state","viewConfiguration","editConfiguration","setState","children","configurationSelector","datasetSelector","DatasetSelector","disabled","isConfigurationEditable","availableDatasets","selectedDatasets","onDatasetsSelection","selectDatasets","alignmentSelector","AlignmentSelector","selectedAlignment","onAlignmentSelection","setSelectedAlignment","datasets","length","Maybe","Nothing","setSelectedDatasets","this","_","isEmpty","viewHolder","map","dataset","label","join","a","getOrElse","options","datasetsToOptions","multi","value","onChange","placeholder","alignmentsLabels","alignments","alignment","iri","option","find","componentDidMount","filter","d","isDefault","alignmentsForDatasets","xs","intersectionWith","a1","a2","equals","alignmentsToOptions","alignmentToOption","selectAlignment","Just","selection","componentWillReceiveProps"],"mappings":"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","file":"semantic-search-configuration-editor-df8919579f4408022bd0.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport * as Maybe from 'data.maybe';\nimport * as classnames from 'classnames';\nimport * as _ from 'lodash';\n\nimport { Alignment, Dataset } from 'platform/components/semantic/search/data/datasets/Model';\nimport {\n  SemanticSearchContext,\n  ConfigurationContext,\n} from 'platform/components/semantic/search/web-components/SemanticSearchApi';\nimport { DatasetSelector } from './DatasetSelector';\nimport { AlignmentSelector } from './AlignmentSelector';\n\nimport * as styles from './ConfigurationSelector.scss';\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\nexport class ConfigurationSelector extends React.Component {\n  render() {\n    return (\n      <SemanticSearchContext.Consumer>\n        {(context) => <ConfigurationSelectorInner {...this.props} context={context} />}\n      </SemanticSearchContext.Consumer>\n    );\n  }\n}\n\ninterface InnerProps {\n  context: ConfigurationContext;\n}\n\ninterface State {\n  isCollapsed: boolean;\n}\n\nclass ConfigurationSelectorInner extends React.Component<InnerProps, State> {\n  constructor(props: InnerProps) {\n    super(props);\n    this.state = {\n      isCollapsed: true,\n    };\n  }\n\n  render() {\n    return this.configHolder();\n  }\n\n  private configHolder = () => {\n    const { isCollapsed } = this.state;\n    return (\n      <div className={styles.holder}>\n        <span onClick={this.onCollapseExpand}>\n          <i\n            className={classnames({\n              [styles.configExpand]: isCollapsed,\n              [styles.configCollapse]: !isCollapsed,\n            })}\n          />\n          Configure search options\n        </span>\n        <div className=\"clearfix\"></div>\n        {this.state.isCollapsed ? this.viewConfiguration() : this.editConfiguration()}\n      </div>\n    );\n  };\n\n  private onCollapseExpand = () => this.setState((state) => ({ isCollapsed: !state.isCollapsed }));\n\n  private viewConfiguration() {\n    const { context } = this.props;\n    if (_.isEmpty(context.selectedDatasets)) {\n      return null;\n    } else {\n      return (\n        <div>\n          <div className={styles.viewHolder}>\n            <b>Datasets: </b>\n            {_.map(context.selectedDatasets, (dataset) => dataset.label).join(', ')}.<b> Alignment: </b>\n            {context.selectedAlignment.map((a) => a.label).getOrElse('NONE')}\n          </div>\n          <div className=\"clearfix\"></div>\n        </div>\n      );\n    }\n  }\n\n  private editConfiguration = () => {\n    const { context } = this.props;\n    return (\n      <div>\n        {this.props.children}\n        <div className={styles.configurationSelector}>\n          <span>Datasets for search:</span>\n          <div className={styles.datasetSelector}>\n            <DatasetSelector\n              disabled={!context.isConfigurationEditable}\n              availableDatasets={context.availableDatasets}\n              selectedDatasets={context.selectedDatasets}\n              onDatasetsSelection={this.selectDatasets}\n            />\n          </div>\n          <div className={styles.alignmentSelector}>\n            <AlignmentSelector\n              disabled={!context.isConfigurationEditable}\n              selectedDatasets={context.selectedDatasets}\n              selectedAlignment={context.selectedAlignment}\n              onAlignmentSelection={context.setSelectedAlignment}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  private selectDatasets = (datasets: Array<Dataset>) => {\n    const { context } = this.props;\n    if (datasets.length < 1) {\n      // reset alignment if less then one dataset is selected\n      context.setSelectedAlignment(Maybe.Nothing<Alignment>());\n    }\n    context.setSelectedDatasets(datasets);\n  };\n}\n\nexport default ConfigurationSelector;\n","/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport * as React from 'react';\nimport ReactSelect, { Options } from 'react-select';\nimport * as _ from 'lodash';\n\nimport { Dataset } from 'platform/components/semantic/search/data/datasets/Model';\n\nexport interface DatasetSelectorProps {\n  availableDatasets: Array<Dataset>;\n  selectedDatasets: Array<Dataset>;\n  onDatasetsSelection: (datasets: Array<Dataset>) => void;\n  disabled?: boolean;\n}\n\nexport class DatasetSelector extends React.Component<DatasetSelectorProps, {}> {\n  render() {\n    return this.props.availableDatasets.length > 0 ? this.datasetSelector() : null;\n  }\n\n  componentDidMount() {\n    if (_.isEmpty(this.props.selectedDatasets)) {\n      this.props.onDatasetsSelection(_.filter(this.props.availableDatasets, (d) => d.isDefault));\n    }\n  }\n\n  private datasetSelector = () => {\n    return (\n      <ReactSelect\n        disabled={this.props.disabled}\n        options={this.datasetsToOptions(this.props.availableDatasets)}\n        multi={true}\n        value={this.datasetsToOptions(this.props.selectedDatasets)}\n        onChange={this.selectDatasets}\n        placeholder=\"Select Datasets\"\n      />\n    );\n  };\n\n  private datasetsToOptions = (datasets: Array<Dataset>): Options =>\n    _.map(datasets, (dataset) => {\n      const alignmentsLabels = _.map(dataset.alignments, (alignment) => alignment.label).join(', ');\n      return {\n        value: dataset.iri.value,\n        label: `${dataset.label} [${alignmentsLabels}]`,\n      };\n    });\n\n  private selectDatasets = (options: Options) => {\n    const { availableDatasets } = this.props;\n    this.props.onDatasetsSelection(\n      _.map(options, (option) => _.find(availableDatasets, (dataset) => dataset.iri.value === option.value))\n    );\n  };\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport * as React from 'react';\nimport ReactSelect, { Option, Options } from 'react-select';\nimport * as _ from 'lodash';\nimport * as Maybe from 'data.maybe';\n\nimport { Alignment, Dataset } from 'platform/components/semantic/search/data/datasets/Model';\n\nexport interface AlignmentSelectorProps {\n  selectedDatasets: Array<Dataset>;\n  selectedAlignment: Data.Maybe<Alignment>;\n  onAlignmentSelection: (alignment: Data.Maybe<Alignment>) => void;\n  disabled?: boolean;\n}\n\ninterface State {\n  alignments: Array<Alignment>;\n}\n\nexport class AlignmentSelector extends React.Component<AlignmentSelectorProps, State> {\n  constructor(props: AlignmentSelectorProps, context) {\n    super(props, context);\n    this.state = {\n      alignments: this.alignmentsForDatasets(props.selectedDatasets),\n    };\n  }\n\n  componentWillReceiveProps(props: AlignmentSelectorProps) {\n    this.setState({\n      alignments: this.alignmentsForDatasets(props.selectedDatasets),\n    });\n  }\n\n  render() {\n    return this.props.selectedDatasets.length > 0 ? this.alignmentSelector() : null;\n  }\n\n  private alignmentsForDatasets = (datasets: Array<Dataset>): Array<Alignment> => {\n    const xs = _.map(datasets, (dataset) => dataset.alignments || []);\n    // TODO typings for intersectionWith are not correct\n    const intersectionWith = _.intersectionWith as any;\n    return intersectionWith(...xs, (a1: Alignment, a2: Alignment) => a1.iri.equals(a2.iri));\n  };\n\n  private alignmentSelector = () => {\n    return (\n      <ReactSelect\n        disabled={this.props.disabled}\n        options={this.alignmentsToOptions(this.state.alignments)}\n        multi={true}\n        value={this.props.selectedAlignment.map(this.alignmentToOption).getOrElse(null)}\n        onChange={this.selectAlignment}\n        placeholder=\"Select Alignment\"\n      />\n    );\n  };\n\n  private alignmentsToOptions = (alignments: Array<Alignment>): Options => _.map(alignments, this.alignmentToOption);\n\n  private alignmentToOption = (alignment: Alignment): Option<string> => ({\n    value: alignment.iri.value,\n    label: alignment.label,\n  });\n\n  private selectAlignment = (option: ReadonlyArray<Option<string>>) => {\n    if (option.length !== 0) {\n      this.props.onAlignmentSelection(\n        Maybe.Just(_.find(this.state.alignments, (selection) => selection.iri.value === option[0].value))\n      );\n    } else {\n      this.props.onAlignmentSelection(Maybe.Nothing<Alignment>());\n    }\n  };\n}\n"],"sourceRoot":""}