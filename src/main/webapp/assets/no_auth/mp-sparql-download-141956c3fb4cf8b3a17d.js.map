{"version":3,"sources":["webpack:///./src/main/web/components/semantic/results/SparqlDownloadComponent.ts"],"names":["onSave","event","preventDefault","results","SparqlClient","sendSparqlQuery","props","query","header","context","semanticContext","onValue","response","push","onEnd","blob","Blob","type","fileSaver","saveAs","filename","render","child","Children","only","this","children","onClick","cloneElement","Component","component","SparqlDownloadComponent","factory","createFactory"],"mappings":"6IAmBA,OACA,UAEA,QAqCA,+F,OACU,EAAAA,OAAS,SAACC,GAChBA,EAAMC,iBAEN,IAAMC,EAAU,GAChB,EAAAC,aAAaC,gBAAgB,EAAKC,MAAMC,MAAO,EAAKD,MAAME,OAAQ,CAAEC,QAAS,EAAKA,QAAQC,kBACvFC,SAAQ,SAACC,GACRT,EAAQU,KAAKD,MAEdE,OAAM,WACL,IAAIC,EAAO,IAAIC,KAAKb,EAAS,CAAEc,KAAM,EAAKX,MAAME,SAChDU,EAAUC,OAAOJ,EAAM,EAAKT,MAAMc,UAAY,gB,EAYtD,OAvBsC,uCAe7B,kCAAAC,OAAP,WACE,IAAMC,EAAQ,EAAAC,SAASC,KAAKC,KAAKnB,MAAMoB,UACjCpB,EAAQ,CACZqB,QAASF,KAAKzB,QAGhB,OAAO,EAAA4B,aAAaN,EAAOhB,IAE/B,wBAvBA,CApCA,MAoCsCuB,WA0BzB,EAAAC,UAAYC,EACZ,EAAAC,QAAU,EAAAC,cAAc,EAAAH,WACrC,UAAe,EAAAA","file":"mp-sparql-download-141956c3fb4cf8b3a17d.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Children, ReactElement, cloneElement, createFactory } from 'react';\nimport * as fileSaver from 'file-saver';\n\nimport { SparqlClient, SparqlUtil } from 'platform/api/sparql';\nimport { Component } from 'platform/api/components';\n\n/**\n * Component to trigger the download of a SPARQL result set.\n * Downloading starts when the child element has been clicked,\n * therefore component should contain only one child element.\n * Child element could be any HTML-element (not text node).\n *\n * @example\n * <mp-sparql-download query=\"SELECT * WHERE {?a ?b ?c} LIMIT 10\"\n *                     header=\"application/sparql-results+json\">\n *     <button>Download SPARQL JSON</button>\n * </mp-sparql-download>\n *\n * @example\n * <mp-sparql-download query=\"SELECT * WHERE {?a ?b ?c} LIMIT 10\"\n *                     header=\"text/csv\"\n *                     filename=\"myresult.csv\">\n *     <a href=\"#\">Download CSV</a>\n * </mp-sparql-download>\n */\nexport interface Props {\n  /**\n   * SPARQL SELECT OR CONSTRUCT query\n   */\n  query: string;\n  /**\n   * result mime type header (according to the standards)\n   */\n  header: SparqlUtil.ResultFormat;\n  /**\n   * (optional) file name\n   */\n  filename?: string;\n}\n\nclass SparqlDownloadComponent extends Component<Props, {}> {\n  private onSave = (event: React.SyntheticEvent<any>) => {\n    event.preventDefault();\n\n    const results = [];\n    SparqlClient.sendSparqlQuery(this.props.query, this.props.header, { context: this.context.semanticContext })\n      .onValue((response) => {\n        results.push(response);\n      })\n      .onEnd(() => {\n        let blob = new Blob(results, { type: this.props.header });\n        fileSaver.saveAs(blob, this.props.filename || 'file.txt');\n      });\n  };\n\n  public render() {\n    const child = Children.only(this.props.children) as ReactElement<any>;\n    const props = {\n      onClick: this.onSave,\n    };\n\n    return cloneElement(child, props);\n  }\n}\n\nexport type component = SparqlDownloadComponent;\nexport const component = SparqlDownloadComponent;\nexport const factory = createFactory(component);\nexport default component;\n"],"sourceRoot":""}