{"version":3,"sources":["webpack:///./src/main/web/components/persistence/ActionDownload.ts"],"names":["Button","createFactory","ReactBootstrap","props","context","state","componentDidMount","this","parseQuery","componentWillReceiveProps","header","filename","parsedQuery","SparqlUtil","parseQuerySync","component","query","type","queryType","setState","render","child","Children","count","children","only","title","D","i","className","Component","ActionDownloadComponent"],"mappings":"6IAmBA,OACA,QACA,QAEA,QACA,QACA,UAEMA,EAAS,EAAAC,cAAcC,EAAeF,QAsB5C,cACE,iCAAYG,EAAcC,GAA1B,MACE,YAAMD,EAAOC,IAAQ,K,OACrB,EAAKC,MAAQ,G,EAsCjB,OAzC6C,uCAM3C,kCAAAC,kBAAA,WACEC,KAAKC,WAAWD,KAAKJ,QAEvB,kCAAAM,0BAAA,SAA0BN,GACxBI,KAAKC,WAAWL,IAGlB,kCAAAK,WAAA,SAAWL,GACT,IAAIO,EAASP,EAAMO,OACfC,EAAWR,EAAMQ,SACrB,IAAKD,EAAQ,CACX,IAAME,EAAc,EAAAC,WAAWC,eAAeX,EAAMY,UAAUZ,MAAMa,OACpE,GAAyB,UAArBJ,EAAYK,KACd,KAAM,4DAEsB,WAA1BL,EAAYM,WACdR,EAAS,WACTC,EAAWR,EAAMQ,UAAY,YACM,cAA1BC,EAAYM,YACrBR,EAAS,cACTC,EAAWR,EAAMQ,UAAY,YAGjCJ,KAAKY,SAAS,CAAET,OAAM,EAAEC,SAAQ,KAGlC,kCAAAS,OAAA,WACE,IAAMJ,EAAQT,KAAKJ,MAAMY,UAAUZ,MAAMa,MACnC,aAAEN,EAAA,EAAAA,OAAQC,EAAA,EAAAA,SACVU,EACoC,IAAxC,EAAAC,SAASC,MAAMhB,KAAKJ,MAAMqB,UACtB,EAAAF,SAASG,KAAKlB,KAAKJ,MAAMqB,UACzBxB,EAAO,CAAE0B,MAAO,iBAAmBC,EAAEC,EAAE,CAAEC,UAAW,oBAC1D,OAAO,UAAe,CAAEb,MAAK,EAAEN,OAAM,EAAEC,SAAQ,GAAIU,IAEvD,wBAzCA,CAA6C,EAAAS,WAAhC,EAAAC,0BA2Cb,UAAeA","file":"mp-component-toolbar-action-download-a688cd85f24dda6ac266.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { createFactory, Children } from 'react';\nimport * as D from 'react-dom-factories';\nimport * as ReactBootstrap from 'react-bootstrap';\n\nimport { Component } from 'platform/api/components';\nimport { SparqlUtil } from 'platform/api/sparql';\nimport { factory as SparqlDownload } from 'platform/components/semantic/results/SparqlDownloadComponent';\n\nconst Button = createFactory(ReactBootstrap.Button);\n\ninterface Props {\n  /**\n   * Component to get query prop from\n   */\n  component?: any;\n  /**\n   * (optional) result mime type header\n   */\n  header?: SparqlUtil.ResultFormat;\n  /**\n   * (optional) file name\n   */\n  filename?: string;\n}\n\ninterface State {\n  header?: SparqlUtil.ResultFormat;\n  filename?: string;\n}\n\nexport class ActionDownloadComponent extends Component<Props, State> {\n  constructor(props: Props, context: any) {\n    super(props, context);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.parseQuery(this.props);\n  }\n  componentWillReceiveProps(props: Props) {\n    this.parseQuery(props);\n  }\n\n  parseQuery(props: Props) {\n    let header = props.header;\n    let filename = props.filename;\n    if (!header) {\n      const parsedQuery = SparqlUtil.parseQuerySync(props.component.props.query);\n      if (parsedQuery.type !== 'query') {\n        throw 'query type is not supported, expected SELECT or CONSTRUCT';\n      }\n      if (parsedQuery.queryType === 'SELECT') {\n        header = 'text/csv';\n        filename = props.filename || 'file.csv';\n      } else if (parsedQuery.queryType === 'CONSTRUCT') {\n        header = 'text/turtle';\n        filename = props.filename || 'file.ttl';\n      }\n    }\n    this.setState({ header, filename });\n  }\n\n  render() {\n    const query = this.props.component.props.query;\n    const { header, filename } = this.state;\n    const child =\n      Children.count(this.props.children) === 1\n        ? Children.only(this.props.children)\n        : Button({ title: 'Download data' }, D.i({ className: 'fa fa-download' }));\n    return SparqlDownload({ query, header, filename }, child);\n  }\n}\n\nexport default ActionDownloadComponent;\n"],"sourceRoot":""}