{"version":3,"sources":["webpack:///./src/main/web/components/persistence/ActionSave.ts"],"names":["Button","createFactory","ReactBootstrap","Modal","ModalHeader","ModalFooter","ModalBody","FormControl","ResourceLink","ResourceLinkComponent","props","context","onClick","setState","show","onSave","componentGraph","componentToGraph","component","componentRoot","Rdf","iri","parentTemplateScope","appliedTemplateScope","semanticContext","graph","addLabelAndDescription","label","description","pointer","triples","add","triple","rdfs","literal","comment","pg","ldpc","VocabPlatform","PersistedComponentContainer","value","addResource","flatMap","res","addToDefaultSet","id","Kefir","constant","onValue","resourceIri","trigger","eventType","SetManagementEvents","ItemAdded","source","savedIri","onCancel","undefined","state","renderModal","this","onHide","onChange","e","newValue","target","type","disabled","Spinner","uri","render","isValidChild","children","child","Children","only","cloneElement","title","D","i","className","defaultProps","Component","ActionSaveComponent"],"mappings":"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","file":"mp-component-toolbar-action-save-68e3774eaa1d31820754.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { createFactory, cloneElement, Children } from 'react';\nimport * as D from 'react-dom-factories';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport * as Kefir from 'kefir';\n\nimport { Component } from 'platform/api/components';\nimport { trigger } from 'platform/api/events';\nimport { componentToGraph } from 'platform/api/persistence/ComponentPersistence';\nimport { Rdf } from 'platform/api/rdf';\nimport { VocabPlatform, rdfs } from 'platform/api/rdf/vocabularies/vocabularies';\nimport { SetManagementEvents } from 'platform/api/services/ldp-set/SetManagementEvents';\nimport { ldpc } from 'platform/api/services/ldp';\nimport { addToDefaultSet } from 'platform/api/services/ldp-set';\n\nimport { Spinner } from 'platform/components/ui/spinner/Spinner';\nimport { isValidChild } from 'platform/components/utils';\nimport { ResourceLinkComponent } from 'platform/api/navigation/components/ResourceLinkComponent';\n\nconst Button = createFactory(ReactBootstrap.Button);\nconst Modal = createFactory(ReactBootstrap.Modal);\nconst ModalHeader = createFactory(ReactBootstrap.ModalHeader);\nconst ModalFooter = createFactory(ReactBootstrap.ModalFooter);\nconst ModalBody = createFactory(ReactBootstrap.ModalBody);\nconst FormControl = createFactory(ReactBootstrap.FormControl);\nconst ResourceLink = createFactory(ResourceLinkComponent);\n\ninterface Props {\n  id: string;\n  component?: any;\n\n  /**\n   * `true` if persisted component should be added to the default set of the current user\n   *\n   * @default false\n   */\n  addToDefaultSet?: boolean;\n}\n\ninterface State {\n  show: 'hide' | 'editor' | 'saving' | 'success';\n  savedIri?: string;\n  label?: string;\n  description?: string;\n}\n\nexport class ActionSaveComponent extends Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    addToDefaultSet: false,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n    this.state = { show: 'hide' };\n  }\n\n  onClick = () => {\n    this.setState({ show: 'editor' });\n  }\n\n  onSave = () => {\n    this.setState({ show: 'saving' });\n\n    const componentGraph = componentToGraph({\n      component: this.props.component,\n      componentRoot: Rdf.iri(''),\n      parentTemplateScope: this.appliedTemplateScope,\n      semanticContext: this.context.semanticContext,\n    });\n\n    const { label, description } = this.state;\n    const { graph } = addLabelAndDescription(componentGraph, label, description);\n\n    ldpc(VocabPlatform.PersistedComponentContainer.value)\n      .addResource(graph)\n      .flatMap((res) => (this.props.addToDefaultSet ? addToDefaultSet(res, this.props.id) : Kefir.constant(res)))\n      .onValue((resourceIri) => {\n        trigger({ eventType: SetManagementEvents.ItemAdded, source: this.props.id });\n        this.setState({ show: 'success', savedIri: resourceIri.value });\n      });\n  }\n\n  onCancel = () => {\n    this.setState({\n      show: 'hide',\n      savedIri: undefined,\n      label: undefined,\n      description: undefined,\n    });\n  }\n\n  renderModal() {\n    switch (this.state.show) {\n      case 'editor':\n        return Modal(\n          { show: true, onHide: this.onCancel },\n          ModalHeader({}, 'Save visualization'),\n          ModalBody(\n            {},\n            'Label:',\n            FormControl({\n              value: this.state.label ? this.state.label : '',\n              onChange: (e) => {\n                const newValue = (e.target as any).value;\n                this.setState({ label: newValue });\n              },\n            }),\n            'Description:',\n            FormControl({\n              type: 'textarea',\n              value: this.state.description ? this.state.description : '',\n              onChange: (e) => {\n                const newValue = (e.target as any).value;\n                this.setState({ description: newValue });\n              },\n            })\n          ),\n          ModalFooter(\n            {},\n            Button({ disabled: !this.state.label, onClick: this.onSave }, 'OK'),\n            Button({ onClick: this.onCancel }, 'Cancel')\n          )\n        );\n      case 'saving':\n        return Modal(\n          { show: true, onHide: this.onCancel },\n          ModalHeader({}, 'Saving in progress'),\n          ModalBody({}, Spinner())\n        );\n      case 'success':\n        return Modal(\n          { show: true, onHide: this.onCancel },\n          ModalHeader({}, 'Success'),\n          ModalBody({}, 'Visualization ', ResourceLink({ uri: this.state.savedIri }), 'has been saved successfully!'),\n          ModalFooter({}, Button({ onClick: this.onCancel }, 'OK'))\n        );\n      case 'hide':\n        return null;\n    }\n  }\n\n  render() {\n    if (isValidChild(this.props.children)) {\n      const child = Children.only(this.props.children);\n      return cloneElement(\n        child,\n        { ...child.props, onClick: this.onClick },\n        ...child.props.children,\n        this.renderModal()\n      );\n    }\n    return Button(\n      {\n        title: 'Save into default set',\n        onClick: this.state.show == 'hide' ? this.onClick : undefined,\n      },\n      D.i({ className: 'fa fa-save' }),\n      this.renderModal()\n    );\n  }\n}\n\nfunction addLabelAndDescription(\n  { pointer, graph }: Rdf.PointedGraph,\n  label: string | undefined,\n  description: string | undefined\n): Rdf.PointedGraph {\n  let triples = graph.triples;\n  if (label) {\n    triples = triples.add(Rdf.triple(pointer, rdfs.label, Rdf.literal(label)));\n  }\n  if (description) {\n    triples = triples.add(Rdf.triple(pointer, rdfs.comment, Rdf.literal(description)));\n  }\n  return Rdf.pg(pointer, Rdf.graph(triples));\n}\n\nexport default ActionSaveComponent;\n"],"sourceRoot":""}