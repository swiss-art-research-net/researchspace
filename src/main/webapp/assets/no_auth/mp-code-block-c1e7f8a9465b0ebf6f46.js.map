{"version":3,"sources":["webpack:///./src/main/web/components/documentation/CodeBlock.tsx"],"names":["MODE_TEXT","copyButton","text","showCopyButton","CopyToClipboard","Button","bsStyle","showRunQueryButton","mode","repository","url","encodeURIComponent","style","marginLeft","target","href","className","getCodeModeText","render","codeText","styles","holder","modeLabel","this","CodeHighlightComponent","ButtonGroup","defaultProps","Component","CodeBlock"],"mappings":"6IAkBA,OACA,SACA,QAEA,QAEA,UACA,UAOMA,EAAY,CAChB,YAAa,OACb,2BAA4B,SAC5B,cAAe,OACf,kBAAmB,aACnB,kBAAmB,aACnB,cAAe,aACf,wBAAyB,gBACzB,sBAAuB,cACvB,mBAAoB,OACpB,sBAAuB,UACvB,YAAa,QACb,kBAAmB,OAYrB,iF,OAuBU,EAAAC,WAAa,SAACC,EAAcC,GAClC,OAAIA,EAEA,gBAACC,EAAe,CAACF,KAAMA,GACrB,gBAAC,EAAAG,OAAM,CAACC,QAAQ,WAAS,sBAItB,MAIH,EAAAC,mBAAqB,SAACL,GACtB,cAAEM,EAAA,EAAAA,KAAMD,EAAA,EAAAA,mBACNE,EAAA,0BAAAA,WACR,GAAa,6BAATD,GAAuCD,EAAoB,CAC7D,IAAMG,EAAM,iBAAiBC,mBAAmBT,GAAK,eAAeO,EACpE,OACE,qBAAGG,MAAO,CAAEC,WAAY,IAAMC,OAAO,SAASC,KAAML,EAAKM,UAAU,oCAAkC,aAKvG,OAAO,MAIH,EAAAC,gBAAkB,SAACT,GAAiB,OAAAR,EAAUQ,IAASA,G,EACjE,OAnD+B,yBAO7B,oBAAAU,OAAA,WACQ,iBAAEV,EAAA,EAAAA,KAAML,EAAA,EAAAA,eAAgBgB,EAAA,EAAAA,SAC9B,OACE,uBAAKH,UAAWI,EAAOC,QACrB,uBAAKL,UAAWI,EAAOE,WAAYC,KAAKN,gBAAgBT,IACxD,2BACE,gBAAC,EAAAgB,uBAAsB,CAAChB,KAAMA,EAAMW,SAAUA,KAEhD,gBAAC,EAAAM,YAAW,KACTF,KAAKtB,WAAWkB,EAAUhB,GAC1BoB,KAAKhB,mBAAmBY,MAhB1B,UAAAO,aAAe,CACpBlB,KAAM,YACNL,gBAAgB,EAChBI,oBAAoB,GA+CxB,UAnDA,CAA+B,EAAAoB,WAAlB,EAAAC,YAoDb,UAAeA","file":"mp-code-block-c1e7f8a9465b0ebf6f46.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport * as CopyToClipboard from 'react-copy-to-clipboard';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nimport { Component, ComponentProps } from 'platform/api/components';\n\nimport { CodeHighlightComponent, CodeHighlightProps } from './CodeHighlight';\nimport * as styles from './CodeBlock.scss';\n\nexport interface CodeBlockProps extends CodeHighlightProps, ComponentProps {\n  showCopyButton?: boolean;\n  showRunQueryButton?: boolean;\n}\n\nconst MODE_TEXT = {\n  'text/html': 'HTML',\n  'application/sparql-query': 'SPARQL',\n  'text/x-java': 'Java',\n  'text/typescript': 'TypeScript',\n  'text/javascript': 'JavaScript',\n  'text/turtle': 'RDF/Turtle',\n  'application/n-triples': 'RDF/N-Triples',\n  'application/n-quads': 'RDF/N-Quads',\n  'application/json': 'JSON',\n  'application/ld+json': 'JSON-LD',\n  'text/x-sh': 'Shell',\n  'application/xml': 'XML',\n};\n\n/**\n * Component for code block highlight with optional copy to clipboard button\n * and execute query button for sparql queries.\n *\n * @example\n * <pre>\n *  <mp-code-block data-mode=\"application/typescript\">const x = 5</mp-code-block>\n * </pre>\n */\nexport class CodeBlock extends Component<CodeBlockProps, {}> {\n  static defaultProps = {\n    mode: 'text/html',\n    showCopyButton: true,\n    showRunQueryButton: true,\n  };\n\n  render() {\n    const { mode, showCopyButton, codeText } = this.props;\n    return (\n      <div className={styles.holder}>\n        <div className={styles.modeLabel}>{this.getCodeModeText(mode)}</div>\n        <pre>\n          <CodeHighlightComponent mode={mode} codeText={codeText} />\n        </pre>\n        <ButtonGroup>\n          {this.copyButton(codeText, showCopyButton)}\n          {this.showRunQueryButton(codeText)}\n        </ButtonGroup>\n      </div>\n    );\n  }\n\n  private copyButton = (text: string, showCopyButton: boolean) => {\n    if (showCopyButton) {\n      return (\n        <CopyToClipboard text={text}>\n          <Button bsStyle=\"primary\">Copy to Clipboard</Button>\n        </CopyToClipboard>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  private showRunQueryButton = (text: string) => {\n    const { mode, showRunQueryButton } = this.props;\n    const { repository } = this.context.semanticContext;\n    if (mode === 'application/sparql-query' && showRunQueryButton) {\n      const url = `/sparql?query=${encodeURIComponent(text)}&repository=${repository}`;\n      return (\n        <a style={{ marginLeft: 10 }} target=\"_blank\" href={url} className=\"btn btn-primary run-query-button\">\n          Run Query\n        </a>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  private getCodeModeText = (mode: string) => MODE_TEXT[mode] || mode;\n}\nexport default CodeBlock;\n"],"sourceRoot":""}