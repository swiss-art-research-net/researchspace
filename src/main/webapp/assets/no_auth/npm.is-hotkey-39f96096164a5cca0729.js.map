{"version":3,"sources":["webpack:///./node_modules/is-hotkey/lib/index.js"],"names":["Object","defineProperty","exports","value","IS_MAC","window","test","navigator","platform","MODIFIERS","alt","control","meta","shift","ALIASES","add","break","cmd","command","ctl","ctrl","del","down","esc","ins","left","mod","opt","option","return","right","space","spacebar","up","win","windows","CODES","backspace","tab","enter","pause","capslock","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","delete","numlock","scrolllock","'","f","isHotkey","hotkey","options","event","Array","isArray","array","map","string","parseHotkey","check","e","some","object","compareHotkey","byKey","ret","values","replace","split","length","k","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","optional","endsWith","slice","name","toKeyName","modifier","key","which","toKeyCode","err","expected","actual","toLowerCase","toUpperCase","charCodeAt","default","isCodeHotkey","isKeyHotkey"],"mappings":"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","file":"npm.is-hotkey-39f96096164a5cca0729.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?');\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key') {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;"],"sourceRoot":""}