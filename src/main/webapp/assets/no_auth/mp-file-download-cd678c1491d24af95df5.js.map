{"version":3,"sources":["webpack:///./src/main/web/components/ui/file-download.tsx"],"names":["props","state","defaultProps","delay","postAction","download","downloadUrl","setState","isLoading","setTimeout","response","file","window","open","refresh","navigateToResource","Rdf","iri","onValue","v","render","Backdrop","createFactory","LoadingBackdrop","this","child","Children","only","children","onClick","cloneElement","Component","FileDownload"],"mappings":"6IAkBA,OACA,OACA,QACA,QACA,QACA,SA8BA,cAGE,sBAAYA,EAAcC,GAA1B,MACE,YAAMD,EAAOC,IAAM,K,OAHrB,EAAAC,aAAe,CAAEC,MAAO,IAAMC,WAAY,UAqB1C,EAAAC,SAAW,WACH,cAAEC,EAAA,EAAAA,YAAaF,EAAA,EAAAA,WAAYD,EAAA,EAAAA,MACjC,EAAKI,SAAS,CACZC,WAAW,IAEbC,YAAW,WACT,EAAKF,SAAS,CACZC,WAAW,IAEb,IAAME,EAAW,CACfC,KAAML,GAGRM,OAAOC,KAAKH,EAASC,MAEF,WAAfP,EACF,EAAAU,UAEA,EAAAC,mBAAmB,EAAAC,IAAIC,IAAIb,IAAac,SAAQ,SAACC,GAAM,OAAAA,OAExDhB,IArCH,EAAKF,MAAQ,CACXO,WAAW,G,EAsCjB,OA5CkC,4BAUzB,uBAAAY,OAAP,WACE,IAAMC,EAAW,EAAAC,cAAc,EAAAC,iBAC/B,GAAIC,KAAKvB,MAAMO,UACb,OAAO,gBAACa,EAAQ,MAElB,IAAMI,EAAQ,EAAAC,SAASC,KAAKH,KAAKxB,MAAM4B,UACjC5B,EAAQ,CACZ6B,QAASL,KAAKnB,UAEhB,OAAO,EAAAyB,aAAaL,EAAOzB,IAyB/B,aA5CA,CAAkC,EAAA+B,WAArB,EAAAC,eA6Cb,UAAeA","file":"mp-file-download-cd678c1491d24af95df5.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport { ReactElement, cloneElement, Children, createFactory } from 'react';\nimport { Component } from 'platform/api/components';\nimport { Rdf } from 'platform/api/rdf';\nimport { refresh, navigateToResource } from 'platform/api/navigation';\nimport { LoadingBackdrop } from 'platform/components/utils/LoadingBackdrop';\n\nimport * as _ from 'lodash';\n\ninterface State {\n  isLoading: boolean;\n}\n\ninterface Props {\n  /**\n   * The GET url that is supposed to return a file (stream).\n   */\n  downloadUrl: string;\n  /**\n   * To open the download url with a delay in ms.\n   * @default 1000\n   **/\n  delay: number;\n  /**\n   * @default 'reload'\n   */\n  postAction?: 'reload' | string;\n}\n/**\n * Opens the given downloadUrl in a new window or tab after a delay.\n * @example\n *  <mp-file-download delay='2000' post-action=\"reload\" download-url=\"/rest/admin/storages/runtime/zip\">\n *    <button class=\"btn btn-primary btn-sm active\">OK. Start Download.</button>\n *  </mp-file-download>\n */\nexport class FileDownload extends Component<Props, State> {\n  defaultProps = { delay: 1000, postAction: 'reload' };\n\n  constructor(props: Props, state: State) {\n    super(props, state);\n    this.state = {\n      isLoading: false,\n    };\n  }\n\n  public render() {\n    const Backdrop = createFactory(LoadingBackdrop);\n    if (this.state.isLoading) {\n      return <Backdrop />;\n    }\n    const child = Children.only(this.props.children) as ReactElement<any>;\n    const props = {\n      onClick: this.download,\n    };\n    return cloneElement(child, props);\n  }\n\n  download = () => {\n    const { downloadUrl, postAction, delay } = this.props;\n    this.setState({\n      isLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        isLoading: false,\n      });\n      const response = {\n        file: downloadUrl,\n      };\n\n      window.open(response.file);\n\n      if (postAction === 'reload') {\n        refresh();\n      } else {\n        navigateToResource(Rdf.iri(postAction)).onValue((v) => v);\n      }\n    }, delay);\n  };\n}\nexport default FileDownload;\n"],"sourceRoot":""}