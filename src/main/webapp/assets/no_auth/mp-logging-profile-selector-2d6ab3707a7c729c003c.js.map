{"version":3,"sources":["webpack:///./src/main/web/components/admin/log-browser/LoggingProfileSelector.tsx"],"names":["props","cancellation","Cancellation","onSubmit","setState","profileError","profileToSubmit","state","loggingProfile","map","executePost","observe","value","iri","addNotification","message","level","submittedProfile","error","onChangeProfile","event","currentTarget","undefined","submitting","componentWillUnmount","this","cancelAll","req","request","post","type","send","logprofile","requestAsProperty","render","isSubmitted","Alert","bsStyle","ErrorPresenter","className","styles","adminProfileSelector","onChange","disabled","title","onClick","React","Component","LoggingProfileSelector"],"mappings":"6IAkBA,OAEA,QAEA,QACA,SACA,QACA,UAaA,cAGE,gCAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAHG,EAAAC,aAAe,IAAI,EAAAC,aAgBpC,EAAAC,SAAW,WACT,EAAKC,SAAS,CAAEC,aAAc,OAC9B,IAAMC,EAAkB,EAAKC,MAAMC,eAEnC,EAAKP,aAAaQ,IAAI,EAAKC,eAAeC,QAAQ,CAChDC,MAAO,SAACC,GACN,EAAAC,gBAAgB,CACdC,QAAS,oCACTC,MAAO,YAET,EAAKZ,SAAS,CACZC,aAAc,KACdY,iBAAkBX,KAGtBY,MAAO,SAACA,GACN,EAAAJ,gBAAgB,CACdC,QAAS,+BACTC,MAAO,UAET,EAAKZ,SAAS,CAAEC,aAAca,QA0C1B,EAAAC,gBAAkB,SAACC,GAC3B,IAAMR,EAAwBQ,EAAMC,cAAcT,MAClD,EAAKR,SAAS,CAAEI,eAAgBI,KA5EhC,EAAKL,MAAQ,CACXF,kBAAciB,EACdL,sBAAkBK,EAClBd,eAAgB,SAChBe,YAAY,G,EA0ElB,OAnF4C,sCAa1C,iCAAAC,qBAAA,WACEC,KAAKxB,aAAayB,aA4BZ,iCAAAhB,YAAR,WACE,IAAMiB,EAAMC,EAAQC,KAtDC,4BAsDsBC,KAAK,QAAQC,KAAK,CAAEC,WAAYP,KAAKlB,MAAMC,iBACtF,OAAO,EAAAyB,kBAAkBN,GAAKlB,KAAI,gBAKpC,iCAAAyB,OAAA,WACQ,iBAAE7B,EAAA,EAAAA,aAAcG,EAAA,EAAAA,eAAgBS,EAAA,EAAAA,iBAAkBM,EAAA,EAAAA,WAClDY,EAAc3B,IAAmBS,EAEvC,OACE,2BACGZ,EACC,gBAAC,EAAA+B,MAAK,CAACC,QAAQ,WACb,gBAAC,EAAAC,eAAc,CAACpB,MAAOb,KAEvB,KACJ,uBAAKkC,UAAU,UACb,0BAAQA,UAAWC,EAAOC,qBAAsB7B,MAAOJ,EAAgBkC,SAAUjB,KAAKN,iBACpF,0BAAQP,MAAM,UAAQ,WACtB,0BAAQA,MAAM,gBAAc,SAC5B,0BAAQA,MAAM,gBAAc,UAE9B,0BACE+B,SAAUR,IAAgBZ,EAC1BqB,MAAOT,EAAc,+BAAiC,kBACtDU,QAASpB,KAAKtB,SACdoC,UAAU,mBAAiB,aAavC,uBAnFA,CAA4CO,EAAMC,WAArC,EAAAC,yBAoFb,UAAeA","file":"mp-logging-profile-selector-2d6ab3707a7c729c003c.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport * as request from 'platform/api/http';\nimport * as Kefir from 'kefir';\nimport { Cancellation, requestAsProperty } from 'platform/api/async';\nimport { addNotification, ErrorPresenter } from 'platform/components/ui/notification';\nimport { Alert } from 'react-bootstrap';\nimport * as styles from './LoggingProfileSelector.scss';\n\nconst REST_PROFILE_URL = '/rest/admin/logs/profile';\n\ntype LoggingProfile = 'log4j2' | 'log4j2-debug' | 'log4j2-trace';\n\ninterface LoggingProfileSelectorState {\n  profileError?: any;\n  submittedProfile?: LoggingProfile;\n  loggingProfile: LoggingProfile;\n  submitting: boolean;\n}\n\nexport class LoggingProfileSelector extends React.Component<void, LoggingProfileSelectorState> {\n  private readonly cancellation = new Cancellation();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      profileError: undefined,\n      submittedProfile: undefined,\n      loggingProfile: 'log4j2',\n      submitting: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.cancellation.cancelAll();\n  }\n\n  onSubmit = () => {\n    this.setState({ profileError: null });\n    const profileToSubmit = this.state.loggingProfile;\n\n    this.cancellation.map(this.executePost()).observe({\n      value: (iri) => {\n        addNotification({\n          message: 'Logging profile has been changed.',\n          level: 'success',\n        });\n        this.setState({\n          profileError: null,\n          submittedProfile: profileToSubmit,\n        });\n      },\n      error: (error) => {\n        addNotification({\n          message: 'Changing profile has failed.',\n          level: 'error',\n        });\n        this.setState({ profileError: error });\n      },\n    });\n  };\n\n  private executePost(): Kefir.Property<void> {\n    const req = request.post(REST_PROFILE_URL).type('form').send({ logprofile: this.state.loggingProfile });\n    return requestAsProperty(req).map(() => {\n      return undefined;\n    });\n  }\n\n  render() {\n    const { profileError, loggingProfile, submittedProfile, submitting } = this.state;\n    const isSubmitted = loggingProfile === submittedProfile;\n\n    return (\n      <div>\n        {profileError ? (\n          <Alert bsStyle=\"warning\">\n            <ErrorPresenter error={profileError} />\n          </Alert>\n        ) : null}\n        <div className='d-flex'>\n          <select className={styles.adminProfileSelector} value={loggingProfile} onChange={this.onChangeProfile}>\n            <option value=\"log4j2\">Default</option>\n            <option value=\"log4j2-debug\">Debug</option>\n            <option value=\"log4j2-trace\">Trace</option>\n          </select>\n          <button\n            disabled={isSubmitted && !submitting}\n            title={isSubmitted ? 'Profile is already submitted' : 'Submit  profile'}\n            onClick={this.onSubmit}\n            className='btn btn-primary'\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  protected onChangeProfile = (event: React.SyntheticEvent<HTMLSelectElement>) => {\n    const value: LoggingProfile = event.currentTarget.value as any;\n    this.setState({ loggingProfile: value });\n  };\n}\nexport default LoggingProfileSelector;\n"],"sourceRoot":""}