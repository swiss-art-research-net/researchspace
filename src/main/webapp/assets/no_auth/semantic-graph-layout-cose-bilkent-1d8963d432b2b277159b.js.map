{"version":3,"sources":["webpack:///./src/main/web/components/semantic/graph/layouts/CoseBilkentLayout.ts"],"names":["CoseBilkentLayout","registerCytoscapeLayout","cytoscape","regCose"],"mappings":"iIAmBA,cAEA,UAmIa,EAAAA,kBAAoB,EAAAC,wBAAwB,gBAAgB,SAACC,GAAyB,OAAAC,EAAQD,MAC3G,UAAe,EAAAF","file":"semantic-graph-layout-cose-bilkent-1d8963d432b2b277159b.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as regCose from 'cytoscape-cose-bilkent';\n\nimport { registerCytoscapeLayout } from '../api/Api';\n\n/**\n * The CoSE layout for Cytoscape.js by the i-Vis group in Bilkent University. It is an evolution of the CoSE algorithm that is more computationally expensive but produces near-perfect results\n */\nexport interface SemanticGraphCoseBilkentLayoutConfig {\n  /**\n   * Whether to fit the viewport to the graph\n   *\n   * @default true\n   */\n  fit?: boolean;\n\n  /**\n   * The padding on fit in pixels\n   *\n   * @default 30\n   */\n  padding?: number;\n\n  /**\n   * Whether to transition the node positions\n   *\n   * @default false\n   */\n  animate?: 'during' | 'end' | false;\n\n  /**\n   * Number of iterations between consecutive screen positions update (0 -> only updated on the end)\n   *\n   * @default 30\n   */\n  refresh?: number;\n\n  /**\n   * Randomize the initial positions of the nodes (true) or use existing positions (false)\n   *\n   * @default true\n   */\n  randomize?: boolean;\n\n  /**\n   * Node repulsion (non overlapping) multiplier\n   *\n   * @default 4500\n   */\n  nodeRepulsion?: number;\n\n  /**\n   * Ideal edge (non nested) length\n   *\n   * @default 50\n   */\n  idealEdgeLength?: number;\n\n  /**\n   * Divisor to compute edge forces\n   *\n   * @default 0.45\n   */\n  edgeElasticity?: number;\n\n  /**\n   * Nesting factor (multiplier) to compute ideal edge length for nested edges\n   *\n   * @default 0.1\n   */\n  nestingFactor?: number;\n\n  /**\n   * Gravity force (constant)\n   *\n   * @default 0.25\n   */\n  gravity?: number;\n\n  /**\n   * Maximum number of iterations to perform\n   *\n   * @default 2500\n   */\n  numIter?: number;\n\n  /**\n   * For enabling tiling\n   *\n   * @default true\n   */\n  tile?: boolean;\n\n  /**\n   * Represents the amount of the vertical space to put between the zero degree members during the tiling operation\n   *\n   * @default 10\n   */\n  tilingPaddingVertical?: number;\n\n  /**\n   * Represents the amount of the horizontal space to put between the zero degree members during the tiling operation\n   *\n   * @default 10\n   */\n  tilingPaddingHorizontal?: number;\n\n  /**\n   * Gravity range (constant) for compounds\n   *\n   * @default 1.5\n   */\n  gravityRangeCompound?: number;\n\n  /**\n   * Gravity force (constant) for compounds\n   *\n   * @default 1.0\n   */\n  gravityCompound?: number;\n\n  /**\n   * Gravity range (constant)\n   *\n   * @default 3.8\n   */\n  gravityRange?: number;\n}\n\n/**\n * CoSE layout for graphs with compound nodes.\n *\n * @see https://github.com/cytoscape/cytoscape.js-cose-bilkent\n */\nexport const CoseBilkentLayout = registerCytoscapeLayout('cose-bilkent', (cytoscape: Cy.Static) => regCose(cytoscape));\nexport default CoseBilkentLayout;\n"],"sourceRoot":""}