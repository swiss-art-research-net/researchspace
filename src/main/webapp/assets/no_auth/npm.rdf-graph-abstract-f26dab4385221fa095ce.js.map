{"version":3,"sources":["webpack:///./node_modules/rdf-graph-abstract/index.js"],"names":["normalize","rdf","s","out","skip","_g1","_g","length","i","code","charCodeAt","Error","hex","concat","Number","toString","toUpperCase","slice","charAt","constructor","other","this","Object","defineProperty","get","toArray","addAll","AbstractGraph","prototype","self","forEach","quad","add","clone","difference","includes","equals","every","callback","filter","match","subject","predicate","object","graph","intersection","map","Graph","merge","removeMatches","remove","some","join","module","exports"],"mappings":"+EAAA,IAAIA,EAAY,EAAQ,MAEpBC,EAAM,CAEV,aAAmB,SAAUC,GAM3B,IALA,IAAIC,EAAM,GACNC,GAAO,EACPC,EAAM,EACNC,EAAKJ,EAAEK,OAEJF,EAAMC,GAAI,CACf,IAAIE,EAAIH,IAER,GAAKD,EAkCHA,GAAQA,MAlCC,CACT,IAAIK,EAAOP,EAAEQ,WAAWF,GAExB,GAAIC,GAAQ,OAASA,GAAQ,MAE3BA,EAAwB,MAAhBA,EAAO,QADLP,EAAEQ,WAAWF,EAAI,GACW,OAAS,MAC/CJ,GAAO,EAGT,GAAIK,EAAO,QACT,MAAM,IAAIE,MAAM,qBAGlB,IAAIC,EAAM,WAAWC,OAAQC,OAAOL,GAAOM,SAAS,IAAIC,eAExD,GAAIP,GAAQ,MACVN,GAAO,KAAOS,EAAIK,OAAO,QAEzB,GAAIR,GAAQ,KAAOA,GAAQ,GACzB,OAAQA,GACN,KAAK,EAAGN,GAAO,MAAO,MACtB,KAAK,GAAIA,GAAO,MAAO,MACvB,KAAK,GAAIA,GAAO,MAAO,MACvB,QAASA,GAAO,MAAQS,EAAIK,OAAO,QAGrC,OAAQR,GACN,KAAK,GAAIN,GAAO,MAAO,MACvB,KAAK,GAAIA,GAAO,OAAQ,MACxB,QAASA,GAAOD,EAAEgB,OAAOV,KAQnC,OAAOL,GAGT,cAAoB,SAAUgB,EAAaC,GACzCC,KAAKF,YAAcA,EAEnBG,OAAOC,eAAeF,KAAM,SAAU,CACpCG,IAAK,WAAc,OAAOH,KAAKI,UAAUlB,UAGvCa,GACFC,KAAKK,OAAON,KAIhBnB,EAAI0B,cAAcC,UAAUF,OAAS,SAAUN,GAC7C,IAAIS,EAAOR,KAMX,OAJAD,EAAMU,SAAQ,SAAUC,GACtBF,EAAKG,IAAID,MAGJV,MAGTpB,EAAI0B,cAAcC,UAAUK,MAAQ,WAClC,OAAO,IAAIZ,KAAKF,YAAYE,OAG9BpB,EAAI0B,cAAcC,UAAUM,WAAa,SAAUd,GACjD,IAAIc,EAAa,IAAIb,KAAKF,YAQ1B,OANAE,KAAKS,SAAQ,SAAUC,GAChBX,EAAMe,SAASJ,IAClBG,EAAWF,IAAID,MAIZG,GAGTjC,EAAI0B,cAAcC,UAAUQ,OAAS,SAAUhB,GAC7C,OAAOpB,EAAUqB,QAAUrB,EAAUoB,IAGvCnB,EAAI0B,cAAcC,UAAUS,MAAQ,SAAUC,GAC5C,OAAOjB,KAAKI,UAAUY,MAAMC,IAG9BrC,EAAI0B,cAAcC,UAAUW,OAAS,SAAUD,GAC7C,OAAO,IAAIjB,KAAKF,YAAYE,KAAKI,UAAUc,OAAOD,KAGpDrC,EAAI0B,cAAcC,UAAUE,QAAU,SAAUQ,GAC9C,IAAIT,EAAOR,KAEXQ,EAAKJ,UAAUK,SAAQ,SAAUC,GAC/BO,EAASP,EAAMF,OAInB5B,EAAI0B,cAAcC,UAAUO,SAAW,SAAUJ,GAC/C,OAAoF,IAA7EV,KAAKmB,MAAMT,EAAKU,QAASV,EAAKW,UAAWX,EAAKY,OAAQZ,EAAKa,OAAOrC,QAG3EN,EAAI0B,cAAcC,UAAUiB,aAAe,SAAUzB,GACnD,IAAIyB,EAAe,IAAIxB,KAAKF,YAQ5B,OANAE,KAAKS,SAAQ,SAAUC,GACjBX,EAAMe,SAASJ,IACjBc,EAAab,IAAID,MAIdc,GAGT5C,EAAI0B,cAAcC,UAAUkB,IAAM,SAAUR,GAC1C,IAAIT,EAAOR,KAEX,OAAOQ,EAAKJ,UAAUqB,KAAI,SAAUf,GAClC,OAAOO,EAASP,EAAMF,OAI1B5B,EAAI0B,cAAcC,UAAUY,MAAQ,SAAUC,EAASC,EAAWC,EAAQC,GACxE,OAAO,IAAI3C,EAAI8C,MAAM1B,KAAKI,UAAUc,QAAO,SAAUR,GACnD,UAAIa,GAAWb,EAAKa,OAAUb,EAAKa,MAAMR,OAAOQ,QAI5CH,IAAYV,EAAKU,QAAQL,OAAOK,QAIhCC,IAAcX,EAAKW,UAAUN,OAAOM,OAIpCC,IAAWZ,EAAKY,OAAOP,OAAOO,WAQtC1C,EAAI0B,cAAcC,UAAUoB,MAAQ,SAAU5B,GAC5C,OAAOC,KAAKY,QAAQP,OAAON,IAG7BnB,EAAI0B,cAAcC,UAAUqB,cAAgB,SAAUR,EAASC,EAAWC,EAAQC,GAChF,IAAIf,EAAOR,KAOX,OANcQ,EAAKW,MAAMC,EAASC,EAAWC,EAAQC,GAE7Cd,SAAQ,SAAUC,GACxBF,EAAKqB,OAAOnB,MAGPF,GAGT5B,EAAI0B,cAAcC,UAAUuB,KAAO,SAAUb,GAC3C,OAAOjB,KAAKI,UAAU0B,KAAKb,IAG7BrC,EAAI0B,cAAcC,UAAUb,SAAW,WACrC,OAAOM,KAAKI,UACTqB,KAAI,SAAUf,GACb,OAAOA,EAAKhB,cAEbqC,KAAK,OAGVC,EAAOC,QAAUrD","file":"npm.rdf-graph-abstract-f26dab4385221fa095ce.js","sourcesContent":["var normalize = require('rdf-normalize')\n\nvar rdf = {}\n\nrdf.encodeString = function (s) {\n  var out = ''\n  var skip = false\n  var _g1 = 0\n  var _g = s.length\n\n  while (_g1 < _g) {\n    var i = _g1++\n\n    if (!skip) {\n      var code = s.charCodeAt(i)\n\n      if (code >= 55296 && code <= 56319) {\n        var low = s.charCodeAt(i + 1)\n        code = (code - 55296) * 1024 + (low - 56320) + 65536\n        skip = true\n      }\n\n      if (code > 1114111) {\n        throw new Error('Char out of range')\n      }\n\n      var hex = '00000000'.concat((Number(code)).toString(16).toUpperCase())\n\n      if (code >= 65536) {\n        out += '\\\\' + hex.slice(-8)\n      } else {\n        if (code >= 127 || code <= 31) {\n          switch (code) {\n            case 9: out += '\\\\t'; break\n            case 10: out += '\\\\n'; break\n            case 13: out += '\\\\r'; break\n            default: out += '\\\\u' + hex.slice(-4); break\n          }\n        } else {\n          switch (code) {\n            case 34: out += '\\\\\"'; break\n            case 92: out += '\\\\\\\\'; break\n            default: out += s.charAt(i); break\n          }\n        }\n      }\n    } else {\n      skip = !skip\n    }\n  }\n  return out\n}\n\nrdf.AbstractGraph = function (constructor, other) {\n  this.constructor = constructor\n\n  Object.defineProperty(this, 'length', {\n    get: function () { return this.toArray().length }\n  })\n\n  if (other) {\n    this.addAll(other)\n  }\n}\n\nrdf.AbstractGraph.prototype.addAll = function (other) {\n  var self = this\n\n  other.forEach(function (quad) {\n    self.add(quad)\n  })\n\n  return this\n}\n\nrdf.AbstractGraph.prototype.clone = function () {\n  return new this.constructor(this)\n}\n\nrdf.AbstractGraph.prototype.difference = function (other) {\n  var difference = new this.constructor()\n\n  this.forEach(function (quad) {\n    if (!other.includes(quad)) {\n      difference.add(quad)\n    }\n  })\n\n  return difference\n}\n\nrdf.AbstractGraph.prototype.equals = function (other) {\n  return normalize(this) === normalize(other)\n}\n\nrdf.AbstractGraph.prototype.every = function (callback) {\n  return this.toArray().every(callback)\n}\n\nrdf.AbstractGraph.prototype.filter = function (callback) {\n  return new this.constructor(this.toArray().filter(callback))\n}\n\nrdf.AbstractGraph.prototype.forEach = function (callback) {\n  var self = this\n\n  self.toArray().forEach(function (quad) {\n    callback(quad, self)\n  })\n}\n\nrdf.AbstractGraph.prototype.includes = function (quad) {\n  return this.match(quad.subject, quad.predicate, quad.object, quad.graph).length === 1\n}\n\nrdf.AbstractGraph.prototype.intersection = function (other) {\n  var intersection = new this.constructor()\n\n  this.forEach(function (quad) {\n    if (other.includes(quad)) {\n      intersection.add(quad)\n    }\n  })\n\n  return intersection\n}\n\nrdf.AbstractGraph.prototype.map = function (callback) {\n  var self = this\n\n  return self.toArray().map(function (quad) {\n    return callback(quad, self)\n  })\n}\n\nrdf.AbstractGraph.prototype.match = function (subject, predicate, object, graph) {\n  return new rdf.Graph(this.toArray().filter(function (quad) {\n    if (graph && (!quad.graph || !quad.graph.equals(graph))) {\n      return false\n    }\n\n    if (subject && !quad.subject.equals(subject)) {\n      return false\n    }\n\n    if (predicate && !quad.predicate.equals(predicate)) {\n      return false\n    }\n\n    if (object && !quad.object.equals(object)) {\n      return false\n    }\n\n    return true\n  }))\n}\n\nrdf.AbstractGraph.prototype.merge = function (other) {\n  return this.clone().addAll(other)\n}\n\nrdf.AbstractGraph.prototype.removeMatches = function (subject, predicate, object, graph) {\n  var self = this\n  var matches = self.match(subject, predicate, object, graph)\n\n  matches.forEach(function (quad) {\n    self.remove(quad)\n  })\n\n  return self\n}\n\nrdf.AbstractGraph.prototype.some = function (callback) {\n  return this.toArray().some(callback)\n}\n\nrdf.AbstractGraph.prototype.toString = function () {\n  return this.toArray()\n    .map(function (quad) {\n      return quad.toString()\n    })\n    .join('\\n')\n}\n\nmodule.exports = rdf\n"],"sourceRoot":""}