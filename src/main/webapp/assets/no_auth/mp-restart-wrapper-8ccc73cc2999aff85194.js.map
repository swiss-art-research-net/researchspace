{"version":3,"sources":["webpack:///./src/main/web/components/admin/RestartWrapper.tsx"],"names":["cancellation","Cancellation","onClick","event","preventDefault","stopPropagation","showRestartConfirmationDialog","restart","map","executePost","observe","value","iri","addNotification","autoDismiss","message","level","error","req","request","post","requestAsProperty","componentWillUnmount","this","cancelAll","render","className","renderBody","children","childrenNumber","React","Children","count","Alert","bsStyle","ErrorPresenter","Error","child","only","childComponent","cloneElement","props","Component","execute","dialogRef","onHide","getOverlaySystem","hide","show","ConfirmationDialog","onConfirm","confirm","RestartWrapper"],"mappings":"6IAkBA,OAEA,QACA,QACA,SACA,QACA,SACA,SAQA,sF,OACmB,EAAAA,aAAe,IAAI,EAAAC,aAE5B,EAAAC,QAAU,SAACC,GACjBA,EAAMC,iBACND,EAAME,kBAENC,+BAA8B,SAACC,GACzBA,GACF,EAAKP,aAAaQ,IAAI,EAAKC,eAAeC,QAAQ,CAChDC,MAAO,SAACC,GACN,EAAAC,gBAAgB,CACdC,YAAa,GACbC,QAAS,+FACTC,MAAO,aAGXC,MAAO,SAACA,GACN,EAAAJ,gBAAgB,CACdE,QAAS,qBACTC,MAAO,iB,EA0CrB,OA9DoC,8BA4B1B,yBAAAP,YAAR,WACE,IAAMS,EAAMC,EAAQC,KAAK,8BACzB,OAAO,EAAAC,kBAAkBH,GAAKV,KAAI,gBAKpC,yBAAAc,qBAAA,WACEC,KAAKvB,aAAawB,aAGpB,yBAAAC,OAAA,WACE,OAAO,uBAAKC,UAAU,sBAAsBH,KAAKI,eAG3C,yBAAAA,WAAR,WACU,IAAAC,EAAA,WAAAA,SACFC,EAAiBC,EAAMC,SAASC,MAAMJ,GAC5C,GAAuB,IAAnBC,EACF,OACE,gBAAC,EAAAI,MAAK,CAACC,QAAQ,WACb,gBAAC,EAAAC,eAAc,CAAClB,MAAO,IAAImB,MAAM,+CAA+CP,MAKtF,IAAMQ,EAAQP,EAAMC,SAASO,KAAKV,GAClC,GAAqB,iBAAVS,EAAoB,CAC7B,IAAME,EAAiBF,EACvB,OAAOP,EAAMU,aAAaD,EAAgB,EAAF,uBAAOA,EAAeE,OAAK,CAAEvC,QAASqB,KAAKrB,WAEnF,OAAOmC,GAGb,eA9DA,CAAoCP,EAAMY,WAkE1C,SAASpC,8BAA8BqC,GACrC,IAAMC,EAAY,iCACZC,OAAS,WAAM,SAAAC,mBAAmBC,KAAKH,IAC7C,EAAAE,mBAAmBE,KACjBJ,EACA,gBAAC,EAAAK,mBAAkB,CACjBlC,QAAS,+CACT8B,OACAK,UAAW,SAACC,GACVN,SACIM,GACFR,EAAQQ,OA7EL,EAAAC,iBAgEb,UAAeA","file":"mp-restart-wrapper-8ccc73cc2999aff85194.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport * as Kefir from 'kefir';\nimport { Alert } from 'react-bootstrap';\nimport { Cancellation, requestAsProperty } from 'platform/api/async';\nimport { addNotification, ErrorPresenter } from 'platform/components/ui/notification';\nimport * as request from 'platform/api/http';\nimport { ConfirmationDialog } from 'platform/components/ui/confirmation-dialog';\nimport { getOverlaySystem } from 'platform/components/ui/overlay';\n\n/**\n * @example\n * <mp-restart-wrapper>\n *  <Button><i class=\"fa fa-power-off fa-5x\" aria-hidden=\"true\"></i></Button>\n * </mp-restart-wrapper>\n */\nexport class RestartWrapper extends React.Component {\n  private readonly cancellation = new Cancellation();\n\n  private onClick = (event: React.MouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    showRestartConfirmationDialog((restart) => {\n      if (restart) {\n        this.cancellation.map(this.executePost()).observe({\n          value: (iri) => {\n            addNotification({\n              autoDismiss: 57,\n              message: 'System is restarting. Please reload the page and log in again when the system has restarted.',\n              level: 'success',\n            });\n          },\n          error: (error) => {\n            addNotification({\n              message: 'Restarting failed.',\n              level: 'error',\n            });\n          },\n        });\n      }\n    });\n  };\n\n  private executePost(): Kefir.Property<void> {\n    const req = request.post('/rest/admin/system/restart');\n    return requestAsProperty(req).map(() => {\n      return undefined;\n    });\n  }\n\n  componentWillUnmount() {\n    this.cancellation.cancelAll();\n  }\n\n  render() {\n    return <div className=\"mp-restart-wrapper\">{this.renderBody()}</div>;\n  }\n\n  private renderBody() {\n    const { children } = this.props;\n    const childrenNumber = React.Children.count(children);\n    if (childrenNumber !== 1) {\n      return (\n        <Alert bsStyle=\"warning\">\n          <ErrorPresenter error={new Error(`Expected children number is 1, but provided ${childrenNumber}`)} />\n        </Alert>\n      );\n    }\n\n    const child = React.Children.only(children);\n    if (typeof child === 'object') {\n      const childComponent = child as React.ReactElement<any>;\n      return React.cloneElement(childComponent, { ...childComponent.props, onClick: this.onClick });\n    } else {\n      return child;\n    }\n  }\n}\n\nexport default RestartWrapper;\n\nfunction showRestartConfirmationDialog(execute: (b: boolean) => void) {\n  const dialogRef = 'mp-restart-confirmation-dialog';\n  const onHide = () => getOverlaySystem().hide(dialogRef);\n  getOverlaySystem().show(\n    dialogRef,\n    <ConfirmationDialog\n      message={'Are you sure you want to restart the system?'}\n      onHide={onHide}\n      onConfirm={(confirm) => {\n        onHide();\n        if (confirm) {\n          execute(confirm);\n        }\n      }}\n    />\n  );\n}\n"],"sourceRoot":""}