{"version":3,"sources":["webpack:///./src/main/web/components/search/web-components/SemanticSearchFacetBreadcrumbs.tsx","webpack:///./src/main/web/components/search/facet/breadcrumbs/FacetBreadcrumbs.tsx"],"names":["render","SemanticSearchContext","Consumer","context","SemanticSearchFacetBreadcrumbsInner","props","Component","ast","this","facetStructure","getOrElse","undefined","actions","facetActions","FacetBreadcrumbsComponent","React","SemanticSearchFacetBreadcrumbs","breadcrumb","conjunct","disjuncts","List","map","disjunct","elem","of","className","styles","or","flatten","butLast","relation","classNames","values","onClick","selectRelation","label","cancelButton","removeConjunct","selectCategory","hasRange","value","kind","EntityDisjunctKinds","Resource","resourceDisjunctValue","TemporalDisjunctKinds","DateRange","dateRangeDisjunctValue","NumericRangeDisjunctKind","numericRangeDisjunctValue","LiteralDisjunctKind","literalDisjunctValue","conjuncts","length","breadcrumbs","container","toStringFn","begin","year","end","literal","FacetBreadcrumbs","createFactory"],"mappings":"6IAkBA,OAEA,QACA,UAIA,UAEA,wD,+CAQA,OAR6C,8CAC3C,yCAAAA,OAAA,sBACE,OACE,gBAAC,EAAAC,sBAAsBC,SAAQ,MAC5B,SAACC,GAAY,uBAACC,EAAmC,cAAK,EAAKC,MAAK,CAAEF,QAASA,SAIpF,+BARA,CAA6C,EAAAG,WAc7C,6D,+CAWA,OAXkD,mDAChD,8CAAAN,OAAA,WACE,IAAMO,EAAMC,KAAKH,MAAMF,QAAQM,eAAeC,eAAUC,GAClDC,EAAUJ,KAAKH,MAAMF,QAAQU,aAAaH,eAAUC,GAE1D,OAAIJ,GAAOK,EACF,gBAAC,EAAAE,0BAAyB,CAACP,IAAKA,EAAKK,QAASA,IAGhD,MAEX,oCAXA,CAAkDG,EAAMT,WAaxD,UAAeU,G,kFChCf,OACA,OACA,OACA,QAOA,UAWA,UAEA,UAWA,iG,OAeU,EAAAC,WAAa,SAACC,GACpB,IAAMC,EAAY,EAAAC,KAChBF,EAASC,UAAUE,KAAI,SAACC,GACtB,IAAMC,EAAO,EAAKD,SAASA,GAC3B,OAAO,EAAAF,KAAKI,GAAGD,EAAM,wBAAME,UAAWC,EAAOC,IAAE,WAGhDC,UACAC,UACKC,EAAA,EAAAA,SAER,OACE,uBAAKL,UAAWC,EAAOR,UACrB,uBAAKO,UAAWM,EAAWL,EAAOM,OAAQ,mBAAoBC,QAAS,WAAM,SAAKC,eAAeJ,KAC/F,wBAAML,UAAWC,EAAOI,UAAWA,EAASK,OAC3ChB,GAEH,0BACEM,UAAWM,EAAWL,EAAOU,aAAc,0BAC3CH,QAAS,WAAM,SAAK5B,MAAMO,QAAQyB,eAAenB,KAEjD,6BAMA,EAAAgB,eAAiB,SAACJ,GAClB,sBAAEQ,EAAA,EAAAA,eAAgBJ,EAAA,EAAAA,eACxBI,EAAeR,EAASS,UACxBL,EAAeJ,IAGT,EAAAR,SAAW,SAACA,GAClB,IAAIkB,EAAoC,qBAYxC,OAVIlB,EAASmB,OAAS,EAAAC,oBAAoBC,SACxCH,EAAQ,EAAKI,sBAAsBtB,GAC1BA,EAASmB,OAAS,EAAAI,sBAAsBC,UACjDN,EAAQ,EAAKO,uBAAuBzB,GAC3BA,EAASmB,OAAS,EAAAO,yBAC3BR,EAAQ,EAAKS,0BAA0B3B,GAC9BA,EAASmB,OAAS,EAAAS,sBAC3BV,EAAQ,EAAKW,qBAAqB7B,IAG7B,wBAAMG,UAAWC,EAAOJ,UAAWkB,I,EAsC9C,OAnG+C,yCAC7C,oCAAAxC,OAAA,WACU,IAAAoD,EAAA,eAAAA,UAER,OAAyB,IAArBA,EAAUC,OACL,KAIP,uBAAK5B,UAAWC,EAAO4B,aACrB,uBAAK7B,UAAWC,EAAO6B,WAAYH,EAAU/B,IAAIb,KAAKS,eAsDpD,oCAAA2B,sBAAR,SAA8BtB,GAC5B,OAAOA,EAASkB,MAAML,OAGhB,oCAAAY,uBAAR,SAA+BzB,GACrB,IAAAkC,GAAA,qBAAAA,WACFC,EAAQD,EAAWlC,EAASkB,MAAMiB,MAAMC,QACxCC,EAAMH,EAAWlC,EAASkB,MAAMmB,IAAID,QAE1C,OACE,4BACGD,EACD,wBAAMhC,UAAWC,EAAOC,IAAE,MACzBgC,IAKC,oCAAAV,0BAAR,SAAkC3B,GACxB,IAAAkC,GAAA,wBAAAA,WACFC,EAAQD,EAAWlC,EAASkB,MAAMiB,OAClCE,EAAMH,EAAWlC,EAASkB,MAAMmB,KAEtC,OACE,4BACGF,EACD,wBAAMhC,UAAWC,EAAOC,IAAE,MACzBgC,IAKC,oCAAAR,qBAAR,SAA6B7B,GAC3B,OAAOA,EAASkB,MAAMoB,QAAQpB,OAElC,0BAnGA,CAA+C,EAAAlC,WAAlC,EAAAQ,4BAqGA,EAAA+C,iBAAmB,EAAAC,cAAchD,GAC9C,UAAe,EAAA+C","file":"semantic-search-facet-breadcrumbs-d88de759295840d5a387.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\n\nimport { Component } from 'platform/api/components';\nimport {\n  SemanticSearchContext,\n  FacetContext,\n} from 'platform/components/semantic/search/web-components/SemanticSearchApi';\nimport { FacetBreadcrumbsComponent } from '../facet/breadcrumbs/FacetBreadcrumbs';\n\nclass SemanticSearchFacetBreadcrumbs extends Component<{}, {}> {\n  render() {\n    return (\n      <SemanticSearchContext.Consumer>\n        {(context) => <SemanticSearchFacetBreadcrumbsInner {...this.props} context={context} />}\n      </SemanticSearchContext.Consumer>\n    );\n  }\n}\n\ninterface InnerProps {\n  context: FacetContext;\n}\n\nclass SemanticSearchFacetBreadcrumbsInner extends React.Component<InnerProps> {\n  render() {\n    const ast = this.props.context.facetStructure.getOrElse(undefined);\n    const actions = this.props.context.facetActions.getOrElse(undefined);\n\n    if (ast && actions) {\n      return <FacetBreadcrumbsComponent ast={ast} actions={actions} />;\n    }\n\n    return null;\n  }\n}\n\nexport default SemanticSearchFacetBreadcrumbs;\n","/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport * as React from 'react';\nimport { Component, ReactElement, createFactory } from 'react';\nimport * as classNames from 'classnames';\nimport { List } from 'immutable';\n\nimport {\n  Ast,\n  FacetRelationConjunct,\n  FacetRelationDisjunct,\n} from 'platform/components/semantic/search/data/facet/Model';\nimport {\n  ResourceDisjunct,\n  DateRangeDisjunct,\n  NumericRangeDisjunct,\n  EntityDisjunctKinds,\n  TemporalDisjunctKinds,\n  NumericRangeDisjunctKind,\n  LiteralDisjunctKind,\n  LiteralDisjunct,\n} from 'platform/components/semantic/search/data/search/Model';\nimport { Category, Relation } from 'platform/components/semantic/search/data/profiles/Model';\nimport { DateConverter, NumericConverter } from '../slider/FacetSlider';\n\nimport * as styles from './FacetBreadcrumbs.scss';\n\nexport interface FacetBreadcrumbsProps {\n  ast: Ast;\n  actions: {\n    selectCategory: (category: Category) => void;\n    selectRelation: (relation: Relation) => void;\n    removeConjunct: (relation: FacetRelationConjunct) => void;\n  };\n}\n\nexport class FacetBreadcrumbsComponent extends Component<FacetBreadcrumbsProps, {}> {\n  render() {\n    const { conjuncts } = this.props.ast;\n\n    if (conjuncts.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={styles.breadcrumbs}>\n        <div className={styles.container}>{conjuncts.map(this.breadcrumb)}</div>\n      </div>\n    );\n  }\n\n  private breadcrumb = (conjunct: FacetRelationConjunct) => {\n    const disjuncts = List(\n      conjunct.disjuncts.map((disjunct) => {\n        const elem = this.disjunct(disjunct);\n        return List.of(elem, <span className={styles.or}>or</span>);\n      })\n    )\n      .flatten()\n      .butLast();\n    const { relation } = conjunct;\n\n    return (\n      <div className={styles.conjunct}>\n        <div className={classNames(styles.values, 'btn btn-default')} onClick={() => this.selectRelation(relation)}>\n          <span className={styles.relation}>{relation.label}</span>\n          {disjuncts}\n        </div>\n        <button\n          className={classNames(styles.cancelButton, 'btn btn-default btn-xs')}\n          onClick={() => this.props.actions.removeConjunct(conjunct)}\n        >\n          <i />\n        </button>\n      </div>\n    );\n  };\n\n  private selectRelation = (relation: Relation) => {\n    const { selectCategory, selectRelation } = this.props.actions;\n    selectCategory(relation.hasRange);\n    selectRelation(relation);\n  };\n\n  private disjunct = (disjunct: FacetRelationDisjunct): ReactElement<any> => {\n    let value: string | ReactElement<any> = 'unknown facet term';\n\n    if (disjunct.kind === EntityDisjunctKinds.Resource) {\n      value = this.resourceDisjunctValue(disjunct as ResourceDisjunct);\n    } else if (disjunct.kind === TemporalDisjunctKinds.DateRange) {\n      value = this.dateRangeDisjunctValue(disjunct as DateRangeDisjunct);\n    } else if (disjunct.kind === NumericRangeDisjunctKind) {\n      value = this.numericRangeDisjunctValue(disjunct as NumericRangeDisjunct);\n    } else if (disjunct.kind === LiteralDisjunctKind) {\n      value = this.literalDisjunctValue(disjunct as LiteralDisjunct);\n    }\n\n    return <span className={styles.disjunct}>{value}</span>;\n  };\n\n  private resourceDisjunctValue(disjunct: ResourceDisjunct) {\n    return disjunct.value.label;\n  }\n\n  private dateRangeDisjunctValue(disjunct: DateRangeDisjunct) {\n    const { toStringFn } = new DateConverter();\n    const begin = toStringFn(disjunct.value.begin.year());\n    const end = toStringFn(disjunct.value.end.year());\n\n    return (\n      <span>\n        {begin}\n        <span className={styles.or}>to</span>\n        {end}\n      </span>\n    );\n  }\n\n  private numericRangeDisjunctValue(disjunct: NumericRangeDisjunct) {\n    const { toStringFn } = new NumericConverter();\n    const begin = toStringFn(disjunct.value.begin);\n    const end = toStringFn(disjunct.value.end);\n\n    return (\n      <span>\n        {begin}\n        <span className={styles.or}>to</span>\n        {end}\n      </span>\n    );\n  }\n\n  private literalDisjunctValue(disjunct: LiteralDisjunct) {\n    return disjunct.value.literal.value;\n  }\n}\n\nexport const FacetBreadcrumbs = createFactory(FacetBreadcrumbsComponent);\nexport default FacetBreadcrumbs;\n"],"sourceRoot":""}