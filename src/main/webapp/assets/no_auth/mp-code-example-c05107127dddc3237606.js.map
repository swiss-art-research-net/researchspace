{"version":3,"sources":["webpack:///./src/main/web/components/documentation/CodeExample.tsx"],"names":["props","state","showCode","renderedCode","Maybe","Nothing","componentDidMount","this","loadCode","codeText","componentWillReceiveProps","ModuleRegistry","parseHtmlToReact","then","components","setState","Just","render","showCopyButton","className","styles","holder","Tabs","defaultActiveKey","showCodeByDefault","unmountOnExit","Tab","eventKey","title","CodeBlock","getOrElse","Spinner","defaultProps","React","Component","CodeExample"],"mappings":"6IAkBA,OACA,QACA,QAEA,SACA,SAEA,UACA,UAoBA,cAME,qBAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAEZ,EAAKC,MAAQ,CACXC,SAAUF,EAAME,SAChBC,aAAcC,EAAMC,W,EAmC1B,OA9CiC,2BAe/B,sBAAAC,kBAAA,WACEC,KAAKC,SAASD,KAAKP,MAAMS,WAG3B,sBAAAC,0BAAA,SAA0BV,GACpBA,EAAMS,WAAaF,KAAKP,MAAMS,UAChCF,KAAKC,SAASR,EAAMS,WAIhB,sBAAAD,SAAR,SAAiBC,GAAjB,WACE,EAAAE,eAAeC,iBAAiBH,GAAUI,MAAK,SAACC,GAC9C,SAAKC,SAAS,CAAEZ,aAAcC,EAAMY,KAAKF,SAI7C,sBAAAG,OAAA,WACQ,iBAAER,EAAA,EAAAA,SAAUS,EAAA,EAAAA,eAClB,OACE,uBAAKC,UAAWC,EAAOC,QACrB,gBAAC,EAAAC,KAAI,CAACC,iBAAkBhB,KAAKP,MAAMwB,kBAAoB,EAAI,EAAGC,eAAe,GAC3E,gBAAC,EAAAC,IAAG,CAACC,SAAU,EAAGC,MAAM,QACtB,gBAAC,EAAAC,UAAS,CAACpB,SAAUA,EAAUS,eAAgBA,KAEjD,gBAAC,EAAAQ,IAAG,CAACC,SAAU,EAAGC,MAAM,UACrBrB,KAAKN,MAAME,aAAa2B,UAAU,gBAAC,EAAAC,QAAO,WAvC9C,YAAAC,aAAe,CACpBR,mBAAmB,EACnBN,gBAAgB,GA2CpB,YA9CA,CAAiCe,EAAMC,WAA1B,EAAAC,cAgDb,UAAeA","file":"mp-code-example-c05107127dddc3237606.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport { Tab, Tabs } from 'react-bootstrap';\nimport * as Maybe from 'data.maybe';\n\nimport { ModuleRegistry } from 'platform/api/module-loader';\nimport { Spinner } from 'platform/components/ui/spinner';\n\nimport { CodeBlock } from './CodeBlock';\nimport * as styles from './CodeExample.scss';\n\ninterface Props {\n  codeText: string;\n  showCodeByDefault?: boolean;\n  showCopyButton?: boolean;\n}\n\ninterface State {\n  showCode?: boolean;\n  renderedCode?: Data.Maybe<React.ReactNode>;\n}\n\n/**\n * Component which can be used to create interactive html snippets.\n * With code highlight and copy to clipboard option.\n *\n * @example\n *    <mp-code-example><semantic-table>...</semantic-table></mp-code-example>\n */\nexport class CodeExample extends React.Component<Props, State> {\n  static defaultProps = {\n    showCodeByDefault: false,\n    showCopyButton: true,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showCode: props.showCode,\n      renderedCode: Maybe.Nothing<React.ReactNode>(),\n    };\n  }\n\n  componentDidMount() {\n    this.loadCode(this.props.codeText);\n  }\n\n  componentWillReceiveProps(props: Props) {\n    if (props.codeText !== this.props.codeText) {\n      this.loadCode(props.codeText);\n    }\n  }\n\n  private loadCode(codeText: string) {\n    ModuleRegistry.parseHtmlToReact(codeText).then((components) =>\n      this.setState({ renderedCode: Maybe.Just(components) })\n    );\n  }\n\n  render() {\n    const { codeText, showCopyButton } = this.props;\n    return (\n      <div className={styles.holder}>\n        <Tabs defaultActiveKey={this.props.showCodeByDefault ? 1 : 2} unmountOnExit={true}>\n          <Tab eventKey={1} title=\"Code\">\n            <CodeBlock codeText={codeText} showCopyButton={showCopyButton} />\n          </Tab>\n          <Tab eventKey={2} title=\"Result\">\n            {this.state.renderedCode.getOrElse(<Spinner />)}\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default CodeExample;\n"],"sourceRoot":""}