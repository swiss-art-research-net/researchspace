{"version":3,"sources":["webpack:///./src/main/web/components/semantic/graph/layouts/ConcentricLayout.ts"],"names":["ConcentricLayout","registerCytoscapeLayout","identity","mapOptions","api","options","has","concentricBy","levelPropertyName","levelFn","getNumberValueForProperty","element","getOrElse"],"mappings":"iIAmBA,YACA,UAEA,UACA,UA6Fa,EAAAA,iBAAmB,EAAAC,wBAAwB,aAAc,EAAAC,UAGtE,SAASC,WAAWC,EAAmBC,GACjC,EAAAC,IAAID,EAAS,gBACfA,EAAoB,WAQxB,SAASE,aAAaC,GACpB,IAAMC,EAAU,EAAAC,0BAA0BF,GAC1C,OAAO,SAAUG,GACf,OAAOF,EAAQE,GAASC,UAAU,IAXVL,CAAaF,EAAoB,aAE3D,OAAOA,KANT,UAAe,EAAAL","file":"semantic-graph-layout-concentric-b3389778bcf506a1e1d9.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { has } from 'lodash';\nimport { identity } from 'core.lambda';\n\nimport { registerCytoscapeLayout, CytoscapeApi } from '../api/Api';\nimport { getNumberValueForProperty } from '../api/LayoutHelpers';\n\n/**\n * The concentric layout positions nodes in concentric circles, based on a numeric value of some node property. Placing nodes with higher value in levels towards the center\n */\nexport interface SemanticGraphConcentricLayoutConfig {\n  /**\n   * Full property IRI which has numeric value for each node. If property is not specified, node degree is used as a concentric weight. For a node, the degree is the number of edge connections it has. Each time a node is referenced as source or target of an edge in the graph, that counts as an edge connection\n   */\n  concentric?: string;\n\n  /**\n   * Whether to fit the viewport to the graph\n   *\n   * @default true\n   */\n  fit?: boolean;\n\n  /**\n   * The padding on fit in pixels\n   *\n   * @default 30\n   */\n  padding?: number;\n\n  /**\n   * Prevents node overlap, may overflow bounding-box and radius if not enough space\n   *\n   * @default true\n   */\n  avoidOverlap?: boolean;\n\n  /**\n   * Where nodes start in radians\n   *\n   * @default 3/2*Mathi.Pi\n   */\n  startAngle?: number;\n\n  /**\n   * How many radians should be between the first and last node (defaults to full circle)\n   */\n  sweep?: number;\n\n  /**\n   * Whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)\n   *\n   * @default true\n   */\n  clockwise?: boolean;\n\n  /**\n   * Whether levels have an equal radial distance betwen them, may cause bounding box overflow\n   *\n   * @default false\n   */\n  equidistant?: boolean;\n\n  /**\n   * Min spacing between outside of nodes (used for radius adjustment)\n   *\n   * @default 10\n   */\n  minNodeSpacing?: number;\n\n  /**\n   * Whether to transition the node positions\n   *\n   * @default false\n   */\n  animate?: boolean;\n\n  /**\n   * Duration of animation in ms if enabled\n   *\n   * @default 500\n   */\n  animationDuration?: boolean;\n\n  /**\n   * Easing of animation if enabled. For possible values see `transition-timing-function` at [easing](http://js.cytoscape.org/#style/transition-animation)\n   */\n  animationEasing?: string;\n}\n\n/**\n * Register built-in cytoscape concentric layout.\n *\n * @example\n *   <graph-layout-concentric></graph-layout-concentric>\n *\n * @see http://js.cytoscape.org/#layouts/concentric\n */\nexport const ConcentricLayout = registerCytoscapeLayout('concentric', identity, mapOptions);\nexport default ConcentricLayout;\n\nfunction mapOptions(api: CytoscapeApi, options: Cy.LayoutOptions): Cy.LayoutOptions {\n  if (has(options, 'concentric')) {\n    options['concentric'] = concentricBy(options['concentric']);\n  }\n  return options;\n}\n\n/**\n * Transform concentric property to concentric function required by the layout.\n */\nfunction concentricBy(levelPropertyName: string) {\n  const levelFn = getNumberValueForProperty(levelPropertyName);\n  return function (element: Cy.CollectionFirstNode): number {\n    return levelFn(element).getOrElse(0);\n  };\n}\n"],"sourceRoot":""}