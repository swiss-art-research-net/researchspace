{"version":3,"sources":["webpack:///./src/main/web/components/panel-system/PanelSystemHolder.tsx","webpack:///./src/main/web/components/panel-system/PanelSystemEvents.ts"],"names":["Holder","props","cancellation","Cancellation","state","holder","defaultHolder","holderKey","componentDidMount","id","this","map","listen","eventType","PanelSystemEvents","ShowResource","target","onValue","data","updateHolder","PageLoader","InitiateIIIFViewer","IIIFViewer","InitiateGraphAuthoring","GraphAuthoring","componentDidUpdate","prevProps","prevState","onChangeHolder","componentWillUnmount","cancelAll","setState","mapChildren","children","Children","child","isValidChild","componentHasType","pageId","cloneElement","key","pageProps","OntodiaPanel","IIIFViewerPanel","render","className","styles","panelHolder","React","Component","PanelSystemHolder","event","EventMaker"],"mappings":"qIAgCKA,E,QAdL,OACA,OAEA,SACA,SAEA,SACA,SACA,UACA,UACA,UAEA,WAEA,SAAKA,GACH,2BACA,2BACA,mCAHF,CAAKA,MAAM,KAgCX,kBAGE,2BAAYC,GAAZ,MACE,YAAMA,IAAM,K,OAHG,EAAAC,aAAe,IAAI,EAAAC,aAIlC,EAAKC,MAAQ,CACXC,OAAQJ,EAAMK,cACdC,UAAW,G,EA2DjB,OAlEuC,iCAWrC,4BAAAC,kBAAA,sBACU,aAAAC,GACRC,KAAKR,aACFS,IAAI,EAAAC,OAAO,CAAEC,UAAWC,EAAkBC,aAAcC,OAAM,KAC9DC,SAAQ,SAAC,G,IAAEC,EAAA,EAAAA,KAAW,SAAKC,aAAa,CAAEd,OAAQL,EAAOoB,WAAYF,KAAI,OAE5ER,KAAKR,aACFS,IAAI,EAAAC,OAAO,CAAEC,UAAWC,EAAkBO,mBAAoBL,OAAM,KACpEC,SAAQ,SAAC,G,IAAEC,EAAA,EAAAA,KAAW,SAAKC,aAAa,CAAEd,OAAQL,EAAOsB,WAAYJ,KAAI,OAE5ER,KAAKR,aACFS,IAAI,EAAAC,OAAO,CAAEC,UAAWC,EAAkBS,uBAAwBP,OAAM,KACxEC,SAAQ,SAAC,G,IAAEC,EAAA,EAAAA,KAAW,SAAKC,aAAa,CAAEd,OAAQL,EAAOwB,eAAgBN,KAAI,QAGlF,4BAAAO,mBAAA,SAAmBC,EAAkBC,GAC/BjB,KAAKN,MAAMC,SAAWsB,EAAUtB,QAAUK,KAAKN,MAAMc,OAASS,EAAUT,MAC1ER,KAAKT,MAAM2B,kBAIf,4BAAAC,qBAAA,WACEnB,KAAKR,aAAa4B,aAGZ,4BAAAX,aAAR,SAAqB,G,IAAEd,EAAA,EAAAA,OAAQa,EAAA,EAAAA,KAC7BR,KAAKqB,UAAS,SAAC,G,IAAExB,EAAA,EAAAA,UAAgB,OAAGF,OAAM,EAAEE,UAAWA,EAAY,EAAGW,KAAI,OAGpE,4BAAAc,YAAR,SAAoBC,GACZ,iBAAE5B,EAAA,EAAAA,OAAQa,EAAA,EAAAA,KAAMX,EAAA,EAAAA,UACtB,OAAO,EAAA2B,SAASvB,IAAIsB,GAAU,SAACE,GAC7B,OAAI,EAAAC,aAAaD,GAEb9B,IAAWL,EAAOoB,YAClB,EAAAiB,iBAAiBF,EAAO,YACxBA,EAAMlC,MAAMQ,KAAOS,EAAKoB,OAEjB,EAAAC,aAAaJ,EAAO,EAAF,UAAIK,IAAKjC,GAAcW,EAAKuB,YAGpDpC,IAAWL,EAAOwB,gBAAkB,EAAAa,iBAAiBF,EAAO,EAAAO,eAC5DrC,IAAWL,EAAOsB,YAAc,EAAAe,iBAAiBF,EAAO,EAAAQ,iBAElD,EAAAJ,aAAaJ,EAAO,EAAF,UAAIK,IAAKjC,GAAcW,IAE3C,KAEFiB,MAIX,4BAAAS,OAAA,WACE,OAAO,uBAAKC,UAAWC,EAAOC,aAAcrC,KAAKsB,YAAYtB,KAAKT,MAAMgC,YAE5E,kBAlEA,CAAuCe,EAAMC,WAAhC,EAAAC,oBAoEb,UAAeA,G,sEClHf,IAOMC,EAPN,OAOgDC,WAEnC,EAAArC,aAAeoC,EAAM,4BACrB,EAAA9B,mBAAqB8B,EAAM,kCAC3B,EAAA5B,uBAAyB4B,EAAM","file":"rs-panel-system-holder-b723ccfa4bd2e0d9a2d5.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\n\nimport { Cancellation } from 'platform/api/async/Cancellation';\nimport { listen } from 'platform/api/events';\n\nimport PageLoaderComponent from 'platform/components/ui/page-loader';\nimport { isValidChild, componentHasType } from 'platform/components/utils';\nimport { OntodiaPanel } from './OntodiaPanel';\nimport { IIIFViewerPanel } from './IIIFViewerPanel';\nimport * as PanelSystemEvents from './PanelSystemEvents';\n\nimport * as styles from './PanelSystem.scss';\n\nenum Holder {\n  PageLoader = 'page-loader',\n  IIIFViewer = 'iiif-viewer',\n  GraphAuthoring = 'graph-authoring',\n}\n\nexport interface Props {\n  id?: string;\n  defaultHolder?: Holder;\n  onChangeHolder?: () => void;\n}\n\nexport interface State {\n  holder?: Holder;\n  data?: any;\n  /**\n   * Force update holders\n   */\n  holderKey?: number;\n}\n\n/**\n * This component can be used only inside <rs-panel-system> component.\n *\n * @example\n * <rs-panel-system-holder id=\"panel-system-holder\">\n *     <mp-page-loader id='resource-template' iri='http://example.com/demo'></mp-page-loader>\n *     <rs-iiif-viewer-panel [[> rsp:IIIFConfig]]\n *        query=\"SELECT ?image WHERE { ?subject crm:P138i_has_representation ?image }\">\n *     </rs-iiif-viewer-panel>\n * </rs-panel-system-holder>\n */\nexport class PanelSystemHolder extends React.Component<Props, State> {\n  private readonly cancellation = new Cancellation();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      holder: props.defaultHolder,\n      holderKey: 0,\n    };\n  }\n\n  componentDidMount() {\n    const { id: target } = this.props;\n    this.cancellation\n      .map(listen({ eventType: PanelSystemEvents.ShowResource, target }))\n      .onValue(({ data }) => this.updateHolder({ holder: Holder.PageLoader, data }));\n\n    this.cancellation\n      .map(listen({ eventType: PanelSystemEvents.InitiateIIIFViewer, target }))\n      .onValue(({ data }) => this.updateHolder({ holder: Holder.IIIFViewer, data }));\n\n    this.cancellation\n      .map(listen({ eventType: PanelSystemEvents.InitiateGraphAuthoring, target }))\n      .onValue(({ data }) => this.updateHolder({ holder: Holder.GraphAuthoring, data }));\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (this.state.holder !== prevState.holder || this.state.data !== prevState.data) {\n      this.props.onChangeHolder();\n    }\n  }\n\n  componentWillUnmount() {\n    this.cancellation.cancelAll();\n  }\n\n  private updateHolder({ holder, data }: Partial<State>) {\n    this.setState(({ holderKey }) => ({ holder, holderKey: holderKey + 1, data }));\n  }\n\n  private mapChildren(children: React.ReactNode) {\n    const { holder, data, holderKey } = this.state;\n    return Children.map(children, (child) => {\n      if (isValidChild(child)) {\n        if (\n          holder === Holder.PageLoader &&\n          componentHasType(child, PageLoaderComponent) &&\n          child.props.id === data.pageId\n        ) {\n          return cloneElement(child, { key: holderKey, ...data.pageProps });\n        }\n        if (\n          (holder === Holder.GraphAuthoring && componentHasType(child, OntodiaPanel)) ||\n          (holder === Holder.IIIFViewer && componentHasType(child, IIIFViewerPanel))\n        ) {\n          return cloneElement(child, { key: holderKey, ...data });\n        }\n        return null;\n      }\n      return child;\n    });\n  }\n\n  render() {\n    return <div className={styles.panelHolder}>{this.mapChildren(this.props.children)}</div>;\n  }\n}\n\nexport default PanelSystemHolder;\n","/**\n * ResearchSpace\n * Copyright (C) 2015-2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EventMaker } from 'platform/api/events';\n\nexport interface PanelSystemEventData {\n  'PanelSystem.ShowResource': { pageId: string; pageProps: any };\n  'PanelSystem.InitiateIIIFViewer': { iris: Array<string> };\n  'PanelSystem.InitiateGraphAuthoring': { iris: Array<string> } | { diagram: string };\n}\nconst event: EventMaker<PanelSystemEventData> = EventMaker;\n\nexport const ShowResource = event('PanelSystem.ShowResource');\nexport const InitiateIIIFViewer = event('PanelSystem.InitiateIIIFViewer');\nexport const InitiateGraphAuthoring = event('PanelSystem.InitiateGraphAuthoring');\n"],"sourceRoot":""}