{"version":3,"sources":["webpack:///./node_modules/react-virtualized/dist/es/Grid/types.js","webpack:///./node_modules/react-virtualized/dist/es/Table/index.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/types.js","webpack:///./node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","webpack:///./node_modules/react-virtualized/dist/es/List/types.js","webpack:///./node_modules/react-virtualized/dist/es/Table/types.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortDirection.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/Grid.js","webpack:///./node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/index.js","webpack:///./node_modules/react-virtualized/dist/es/List/List.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/Masonry.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/index.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/SortIndicator.js","webpack:///./node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Column.js","webpack:///./node_modules/react-virtualized/dist/es/index.js","webpack:///./node_modules/react-virtualized/node_modules/dom-helpers/esm/scrollbarSize.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","webpack:///./node_modules/react-virtualized/dist/es/AutoSizer/index.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/types.js","webpack:///./node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/index.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Collection.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/index.js","webpack:///./node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","webpack:///./node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/createCellPositioner.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/index.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","webpack:///./node_modules/react-virtualized/dist/es/ScrollSync/index.js","webpack:///./node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","webpack:///./node_modules/react-virtualized/dist/es/Table/createMultiSort.js","webpack:///./node_modules/react-virtualized/dist/es/Table/Table.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/index.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","webpack:///./node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","webpack:///./node_modules/react-virtualized/node_modules/dom-helpers/esm/canUseDOM.js","webpack:///./node_modules/react-virtualized/dist/es/utils/animationFrame.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/CollectionView.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/SectionManager.js","webpack:///./node_modules/react-virtualized/dist/es/Collection/Section.js","webpack:///./node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","webpack:///./node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/intervalTree.js","webpack:///./node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","webpack:///./node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","webpack:///./node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js"],"names":["bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellCache","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellSize","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Scroll","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_Alignment","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_Index","bpfrpt_proptype_PositionInfo","bpfrpt_proptype_ScrollPosition","bpfrpt_proptype_SizeAndPositionInfo","bpfrpt_proptype_SizeInfo","bpfrpt_proptype_AnimationTimeoutId","cancelAnimationTimeout","frame","id","requestAnimationTimeout","callback","delay","start","resolve","then","Date","now","timeout","call","bpfrpt_proptype_RowRendererParams","bpfrpt_proptype_RowRenderer","bpfrpt_proptype_RenderedRows","bpfrpt_proptype_CellDataGetterParams","bpfrpt_proptype_HeaderRowRendererParams","bpfrpt_proptype_HeaderRendererParams","ASC","DESC","ArrowKeyStepper","_React$PureComponent","_ref","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","__proto__","apply","concat","state","scrollToColumn","scrollToRow","_columnStartIndex","_columnStopIndex","_rowStartIndex","_rowStopIndex","_onKeyDown","event","_this$props","props","columnCount","disabled","mode","rowCount","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","key","Math","min","max","preventDefault","_updateScrollState","_onSectionRendered","_ref2","columnStartIndex","columnStopIndex","rowStartIndex","rowStopIndex","value","setScrollIndexes","_ref3","setState","render","_props","className","children","_getScrollState2","onKeyDown","onSectionRendered","isControlled","_ref4","_props2","onScrollToChange","getDerivedStateFromProps","nextProps","prevState","defaultProps","propTypes","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","SCROLL_POSITION_CHANGE_REASONS","Grid","_onGridRenderedMemoizer","_onScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","_renderedColumnStartIndex","_renderedColumnStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_styleCache","_cellCache","_debounceScrollEndedCallback","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","_invokeOnGridRenderedHelper","indices","columnOverscanStartIndex","columnOverscanStopIndex","rowOverscanStartIndex","rowOverscanStopIndex","_setScrollingContainerRef","ref","_scrollingContainer","_onScroll","target","handleScrollEvent","columnSizeAndPositionManager","cellCount","cellSizeGetter","params","_wrapSizeGetter","columnWidth","estimatedCellSize","_getEstimatedColumnSize","rowSizeAndPositionManager","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","prevScrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","getOffsetForCell","undefined","_ref$alignment","alignment","scrollToAlignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","getTotalRowsHeight","getTotalSize","getTotalColumnsWidth","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","invalidateCellSizeAfterRender","measureAllCells","getSizeAndPositionOfCell","recomputeGridSize","_ref4$columnIndex","_ref4$rowIndex","_props3","resetCell","forceUpdate","scrollToCell","_ref5","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","componentDidMount","_props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_maybeCallOnScrollbarPresenceChange","componentDidUpdate","prevProps","_this2","_props5","_state","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToIndex","size","updateScrollIndexCallback","componentWillUnmount","_props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","getVisibleCellRange","containerSize","offset","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","stop","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_ref6","_this3","_ref7","_props7","clientHeight","clientWidth","scrollHeight","scrollWidth","Object","hasOwnProperty","Boolean","_onScrollbarPresenceChange","onScrollbarPresenceChange","horizontal","vertical","scrollToPosition","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","configure","maybeStateA","maybeStateB","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","targetIndex","scrollBarSize","getUpdatedOffsetForIndex","align","currentOffset","calculatedScrollLeft","finalRow","calculatedScrollTop","renderNull","AutoSizer","defaultHeight","defaultWidth","_onResize","disableHeight","disableWidth","onResize","_parentNode","_height","offsetHeight","_width","offsetWidth","_style","_window","window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","_setRef","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","addResizeListener","removeResizeListener","outerStyle","childParams","List","_cellRenderer","isVisible","rowRenderer","writable","index","onRowsRendered","forceUpdateGrid","getOffsetForRow","measureAllRows","_ref7$columnIndex","_ref7$rowIndex","recomputeRowHeights","noRowsRenderer","classNames","Masonry","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_positionCache","_startIndex","_startIndexMemoized","_stopIndex","_stopIndexMemoized","_debounceResetIsScrollingCallback","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","clearCellPositions","recomputeCellPositions","count","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","left","top","push","getHeight","getWidth","batchSize","ceil","_index","estimatedColumnCount","floor","_onScrollMemoized","_onCellsRendered","onCellsRendered","cellPositioner","_index2","_cellPositioner","_left","_top","setPosition","noop","identity","bpfrpt_proptype_CellMeasurerCache","bpfrpt_proptype_Positioner","IS_SCROLLING_TIMEOUT","getWindow","WindowScroller","_isMounted","_positionFromTop","_positionFromLeft","scrollElement","_registerChild","element","Element","console","warn","_child","updatePosition","_onChildScroll","scrollTo","_registerResizeListener","addEventListener","_unregisterResizeListener","removeEventListener","__handleWindowScrollEvent","_scrollLeft","_scrollTop","__resetIsScrolling","thisNode","dimensions","prevScrollElement","onChildScroll","registerChild","serverHeight","serverWidth","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","areOffsetsAdjusted","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","totalSize","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","getSizeAndPositionOfLastMeasuredCell","_ref3$align","_safeOffsetToOffset","_offsetToSafeOffset","createCallbackMemoizer","requireAllKeys","cachedIndices","keys","allInitialized","every","isArray","indexChanged","some","cachedValue","join","SCROLL_DIRECTION_BACKWARD","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_VERTICAL","defaultOverscanIndicesGetter","defaultCellRangeRenderer","renderedCells","canCacheStyle","rowDatum","columnDatum","cellRendererParams","renderedCell","bpfrpt_proptype_ScrollIndices","defaultCellDataGetter","dataKey","rowData","get","defaultCellRenderer","cellData","String","defaultHeaderRowRenderer","columns","defaultHeaderRenderer","label","sortBy","sortDirection","showSortIndicator","title","SortIndicator","viewBox","d","fill","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","_React$Component","cellDataGetter","defaultSortDirection","flexGrow","flexShrink","headerRenderer","recalc","scrollDiv","document","createElement","body","appendChild","removeChild","createDetectElementResize","hostWindow","cancel","raf","attachEvent","self","global","requestFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","indexOf","__resizeRAF__","checkTriggers","__resizeLast__","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","i","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","createStyles","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","innerHTML","__animationListener__","animationListener","detachEvent","splice","CellMeasurer","_measure","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","set","_maybeMeasureCell","measure","node","styleWidth","styleHeight","_props$columnIndex","_props$rowIndex","_getCellMeasurements2","__internalCellMeasurerFlag","bpfrpt_proptype_CellMeasureCache","DEFAULT_HEIGHT","DEFAULT_WIDTH","CellMeasurerCache","_cellHeightCache","_cellWidthCache","_columnWidthCache","_rowHeightCache","_columnCount","_rowCount","_keyMapper","_defaultWidth","_defaultHeight","fixedHeight","fixedWidth","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","clear","_updateCachedColumnAndRowSizes","clearAll","_key2","columnKey","_i","rowKey","Collection","context","_cellMetadata","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","cellLayoutManager","isScrollingChange","calculateSizeAndPositionData","cellSizeAndPositionGetter","sectionSize","data","cellMetadata","_sectionManager","sectionManager","getLastRenderedIndices","getScrollPositionForCell","cellIndex","cellOffset","x","y","cellRenderers","cellGroupRenderer","getCellIndices","getCellMetadata","defaultCellGroupRenderer","map","cellRendererProps","filter","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","Error","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","resetLoadMoreRowsCache","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","_loadUnloadedRanges","unloadedRanges","loadMoreRows","unloadedRange","promise","isRangeVisible","lastRenderedStartIndex","lastRenderedStopIndex","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","scanForUnloadedRanges","squashedUnloadedRanges","registeredChild","rangeStartIndex","rangeStopIndex","potentialStopIndex","firstUnloadedRange","component","currentIndex","recomputeSize","createCellPositioner","_ref$spacer","spacer","columnHeights","initOrResetDerivedValues","reset","MultiGrid","_initialiseProps","fixedColumnCount","fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","forceUpdateGrids","_bottomLeftGrid","_bottomRightGrid","_topLeftGrid","_topRightGrid","_ref2$columnIndex","_ref2$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","rest","_prepareForRender","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getBottomGridHeight","_getTopGridHeight","_getLeftGridWidth","leftGridWidth","_getRightGridWidth","topGridHeight","resetAll","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","showVerticalScrollbar","additionalRowCount","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_bottomRightGridRef","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","showHorizontalScrollbar","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","_props8","_state3","scrollInfo","_state4","_props9","_state5","ScrollSync","createMultiSort","sortCallback","defaultSortBy","_ref$defaultSortDirec","sort","shiftKey","ctrlKey","metaKey","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","getScrollbarWidth","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","_createHeader","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","calculateSizeAndPositionDataAndUpdateScrollOffset","CellSizeAndPositionManager","_cellSizeAndPositionData","_lastMeasuredIndex","_lastBatchedIndex","_cellSizeGetter","_cellCount","_estimatedCellSize","lastMeasuredCellSizeAndPosition","_offset","_size","isNaN","datum","maxOffset","minOffset","idealOffset","_findNearestCell","_binarySearch","high","low","middle","_currentOffset","_exponentialSearch","interval","lastMeasuredIndex","getMaxElementSize","isBrowser","isChrome","chrome","updateScrollIndexHelper","hasScrollToIndex","win","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","CollectionView","_calculateSizeAndPositionDataOnNextUpdate","_onSectionRenderedMemoizer","_invokeOnSectionRenderedHelper","_updateScrollPositionForScrollToCell","_this$props2","_this$state","scrollPosition","_setScrollPosition","_enablePointerEventsAfterDelay","_this$props3","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","_cellLayoutManager$ge3","right","bottom","collectionStyle","cellMetadatum","registerCell","SectionManager","_sectionSize","_sections","getSections","section","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","getTotalSectionCount","toString","addCellIndex","Section","_indexMap","_indices","_ref$align","PositionCache","_columnSizeMap","_intervalTree","_leftMap","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","queryInterval","insert","columnSizeMap","columnHeight","IntervalTreeNode","mid","leftPoints","rightPoints","proto","prototype","copy","a","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","weight","l","ge","remove","p","n","queryPoint","tproto","createWrapper","defineProperty","dispatchBsearchGE","c","h","_GEP","m","_GEA","gt","dispatchBsearchGT","_GTP","_GTA","lt","dispatchBsearchLT","_LTP","_LTA","le","dispatchBsearchLE","_LEP","_LEA","eq","dispatchBsearchEQ","_EQP","_EQA","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","_params$rowIndexOffse","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","instance","onScrollWindow","enablePointerEventsAfterDelay","maximumTimeout","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX"],"mappings":"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","file":"npm.react-virtualized-38d3cd9f6ef2c2cf2504.js","sourcesContent":["import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  columnIndex: PropTypes.number.isRequired,\n  rowIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  columnIndex: PropTypes.number.isRequired,\n  isScrolling: PropTypes.bool.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  parent: PropTypes.object.isRequired,\n  rowIndex: PropTypes.number.isRequired,\n  style: PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  cellCache: PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  cellRenderer: PropTypes.func.isRequired,\n  columnSizeAndPositionManager: function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === 'function' ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  columnStartIndex: PropTypes.number.isRequired,\n  columnStopIndex: PropTypes.number.isRequired,\n  deferredMeasurementCache: PropTypes.object,\n  horizontalOffsetAdjustment: PropTypes.number.isRequired,\n  isScrolling: PropTypes.bool.isRequired,\n  isScrollingOptOut: PropTypes.bool.isRequired,\n  parent: PropTypes.object.isRequired,\n  rowSizeAndPositionManager: function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === 'function' ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  rowStartIndex: PropTypes.number.isRequired,\n  rowStopIndex: PropTypes.number.isRequired,\n  scrollLeft: PropTypes.number.isRequired,\n  scrollTop: PropTypes.number.isRequired,\n  styleCache: PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  verticalOffsetAdjustment: PropTypes.number.isRequired,\n  visibleColumnIndices: PropTypes.object.isRequired,\n  visibleRowIndices: PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  clientHeight: PropTypes.number.isRequired,\n  clientWidth: PropTypes.number.isRequired,\n  scrollHeight: PropTypes.number.isRequired,\n  scrollLeft: PropTypes.number.isRequired,\n  scrollTop: PropTypes.number.isRequired,\n  scrollWidth: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  horizontal: PropTypes.bool.isRequired,\n  vertical: PropTypes.bool.isRequired,\n  size: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  columnOverscanStartIndex: PropTypes.number.isRequired,\n  columnOverscanStopIndex: PropTypes.number.isRequired,\n  columnStartIndex: PropTypes.number.isRequired,\n  columnStopIndex: PropTypes.number.isRequired,\n  rowOverscanStartIndex: PropTypes.number.isRequired,\n  rowOverscanStopIndex: PropTypes.number.isRequired,\n  rowStartIndex: PropTypes.number.isRequired,\n  rowStopIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  direction: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  scrollDirection: PropTypes.oneOf([-1, 1]).isRequired,\n\n\n  // Number of rows or columns in the current axis\n  cellCount: PropTypes.number.isRequired,\n\n\n  // Maximum number of cells to over-render in either direction\n  overscanCellsCount: PropTypes.number.isRequired,\n\n\n  // Begin of range of visible cells\n  startIndex: PropTypes.number.isRequired,\n\n\n  // End of range of visible cells\n  stopIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  overscanStartIndex: PropTypes.number.isRequired,\n  overscanStopIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf(['auto', 'end', 'start', 'center']);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  start: PropTypes.number,\n  stop: PropTypes.number\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\n\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","var bpfrpt_proptype_Index = process.env.NODE_ENV === 'production' ? null : {\n  index: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_PositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollPosition = process.env.NODE_ENV === 'production' ? null : {\n  scrollLeft: PropTypes.number.isRequired,\n  scrollTop: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeAndPositionInfo = process.env.NODE_ENV === 'production' ? null : {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_SizeInfo = process.env.NODE_ENV === 'production' ? null : {\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_Index };\nexport { bpfrpt_proptype_PositionInfo };\nexport { bpfrpt_proptype_ScrollPosition };\nexport { bpfrpt_proptype_SizeAndPositionInfo };\nexport { bpfrpt_proptype_SizeInfo };","import _Promise from 'babel-runtime/core-js/promise';\nimport { caf, raf } from './animationFrame';\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  id: PropTypes.number.isRequired\n};\n\n\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start = void 0;\n  // wait for end of processing current event handler, because event handler may be long\n  _Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n\n  return frame;\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_AnimationTimeoutId };","import * as React from 'react';\n\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  index: PropTypes.number.isRequired,\n  isScrolling: PropTypes.bool.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  key: PropTypes.string.isRequired,\n  parent: PropTypes.object.isRequired,\n  style: PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  overscanStartIndex: PropTypes.number.isRequired,\n  overscanStopIndex: PropTypes.number.isRequired,\n  startIndex: PropTypes.number.isRequired,\n  stopIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  clientHeight: PropTypes.number.isRequired,\n  scrollHeight: PropTypes.number.isRequired,\n  scrollTop: PropTypes.number.isRequired\n};\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_RowRendererParams };\nexport { bpfrpt_proptype_RowRenderer };\nexport { bpfrpt_proptype_RenderedRows };\nexport { bpfrpt_proptype_Scroll };","var bpfrpt_proptype_CellDataGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  columnData: PropTypes.any,\n  dataKey: PropTypes.string.isRequired,\n  rowData: function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  }\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  cellData: PropTypes.any,\n  columnData: PropTypes.any,\n  dataKey: PropTypes.string.isRequired,\n  rowData: function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  },\n  rowIndex: PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_HeaderRowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  className: PropTypes.string.isRequired,\n  columns: PropTypes.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  }).isRequired,\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  }\n};\nvar bpfrpt_proptype_HeaderRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  columnData: PropTypes.any,\n  dataKey: PropTypes.string.isRequired,\n  disableSort: PropTypes.bool,\n  label: PropTypes.any,\n  sortBy: PropTypes.string,\n  sortDirection: PropTypes.string\n};\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  className: PropTypes.string.isRequired,\n  columns: PropTypes.arrayOf(function (props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  isScrolling: PropTypes.bool.isRequired,\n  onRowClick: PropTypes.func,\n  onRowDoubleClick: PropTypes.func,\n  onRowMouseOver: PropTypes.func,\n  onRowMouseOut: PropTypes.func,\n  rowData: function rowData(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  },\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\" + propName + \"` has type 'any' or 'mixed', but was not provided to `\" + componentName + \"`. Pass undefined or any other value.\");\n    }\n  }\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellDataGetterParams };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_HeaderRowRendererParams };\nexport { bpfrpt_proptype_HeaderRendererParams };\nexport { bpfrpt_proptype_RowRendererParams };","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\n\nexport default SortDirection;","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = function (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ArrowKeyStepper.__proto__ || _Object$getPrototypeOf(ArrowKeyStepper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      scrollToColumn: 0,\n      scrollToRow: 0\n    }, _this._columnStartIndex = 0, _this._columnStopIndex = 0, _this._rowStartIndex = 0, _this._rowStopIndex = 0, _this._onKeyDown = function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow;\n\n      // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n    }, _this._onSectionRendered = function (_ref2) {\n      var columnStartIndex = _ref2.columnStartIndex,\n          columnStopIndex = _ref2.columnStopIndex,\n          rowStartIndex = _ref2.rowStartIndex,\n          rowStopIndex = _ref2.rowStopIndex;\n\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: 'setScrollIndexes',\n    value: function setScrollIndexes(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          children = _props.children;\n\n      var _getScrollState2 = this._getScrollState(),\n          scrollToColumn = _getScrollState2.scrollToColumn,\n          scrollToRow = _getScrollState2.scrollToRow;\n\n      return React.createElement(\n        'div',\n        { className: className, onKeyDown: this._onKeyDown },\n        children({\n          onSectionRendered: this._onSectionRendered,\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        })\n      );\n    }\n  }, {\n    key: '_getScrollState',\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: '_updateScrollState',\n    value: function _updateScrollState(_ref4) {\n      var scrollToColumn = _ref4.scrollToColumn,\n          scrollToRow = _ref4.scrollToRow;\n      var _props2 = this.props,\n          isControlled = _props2.isControlled,\n          onScrollToChange = _props2.onScrollToChange;\n\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n\n      if (!isControlled) {\n        this.setState({ scrollToColumn: scrollToColumn, scrollToRow: scrollToRow });\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return null;\n      }\n\n      if (nextProps.scrollToColumn !== prevState.scrollToColumn || nextProps.scrollToRow !== prevState.scrollToRow) {\n        return {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent);\n\nArrowKeyStepper.defaultProps = {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n};\nArrowKeyStepper.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  children: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  columnCount: PropTypes.number.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  isControlled: PropTypes.bool.isRequired,\n  mode: PropTypes.oneOf(['cells', 'edges']).isRequired,\n  onScrollToChange: PropTypes.func,\n  rowCount: PropTypes.number.isRequired,\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\n\n\npolyfill(ArrowKeyStepper);\n\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_ScrollIndices } from './types';\nimport PropTypes from 'prop-types';","import _Object$assign from 'babel-runtime/core-js/object/assign';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = function (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    _classCallCheck(this, Grid);\n\n    var _this = _possibleConstructorReturn(this, (Grid.__proto__ || _Object$getPrototypeOf(Grid)).call(this, props));\n\n    _this._onGridRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n    _this._deferredInvalidateColumnIndex = null;\n    _this._deferredInvalidateRowIndex = null;\n    _this._recomputeScrollLeftFlag = false;\n    _this._recomputeScrollTopFlag = false;\n    _this._horizontalScrollBarSize = 0;\n    _this._verticalScrollBarSize = 0;\n    _this._scrollbarPresenceChanged = false;\n    _this._renderedColumnStartIndex = 0;\n    _this._renderedColumnStopIndex = 0;\n    _this._renderedRowStartIndex = 0;\n    _this._renderedRowStopIndex = 0;\n    _this._styleCache = {};\n    _this._cellCache = {};\n\n    _this._debounceScrollEndedCallback = function () {\n      _this._disablePointerEventsTimeoutId = null;\n      // isScrolling is used to determine if we reset styleCache\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    };\n\n    _this._invokeOnGridRenderedHelper = function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    };\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n    return _this;\n  }\n\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: 'getOffsetForCell',\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === undefined ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _extends({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: 'getTotalRowsHeight',\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: 'getTotalColumnsWidth',\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: 'handleScrollEvent',\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === undefined ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === undefined ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      this._debounceScrollEnded();\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          autoWidth = _props.autoWidth,\n          height = _props.height,\n          width = _props.width;\n      var instanceProps = this.state.instanceProps;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam);\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var _scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var _scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: _scrollDirectionHorizontal,\n          scrollDirectionVertical: _scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      var _props2 = this.props,\n          columnCount = _props2.columnCount,\n          rowCount = _props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === undefined ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === undefined ? 0 : _ref4$rowIndex;\n\n      var _props3 = this.props,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollToRow = _props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n\n\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex);\n\n      // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow);\n\n      // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n      this._styleCache = {};\n      this._cellCache = {};\n\n      this.forceUpdate();\n    }\n\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: 'scrollToCell',\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n\n\n      var props = this.props;\n\n      // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_extends({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_extends({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props4 = this.props,\n          getScrollbarSize = _props4.getScrollbarSize,\n          height = _props4.height,\n          scrollLeft = _props4.scrollLeft,\n          scrollToColumn = _props4.scrollToColumn,\n          scrollTop = _props4.scrollTop,\n          scrollToRow = _props4.scrollToRow,\n          width = _props4.width;\n      var instanceProps = this.state.instanceProps;\n\n      // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0;\n\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n      this._handleInvalidatedGridSize();\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _extends({}, prevState, { needToResetStyleCache: false });\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      }\n\n      // refs don't work in `react-test-renderer`\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      }\n\n      // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      }\n\n      // Update onRowsRendered callback\n      this._invokeOnGridRenderedHelper();\n\n      // Initialize onScroll callback\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props5 = this.props,\n          autoHeight = _props5.autoHeight,\n          autoWidth = _props5.autoWidth,\n          columnCount = _props5.columnCount,\n          height = _props5.height,\n          rowCount = _props5.rowCount,\n          scrollToAlignment = _props5.scrollToAlignment,\n          scrollToColumn = _props5.scrollToColumn,\n          scrollToRow = _props5.scrollToRow,\n          width = _props5.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop,\n          instanceProps = _state.instanceProps;\n      // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize();\n\n      // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0;\n\n      // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnGridRenderedHelper();\n\n      // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props6 = this.props,\n          autoContainerWidth = _props6.autoContainerWidth,\n          autoHeight = _props6.autoHeight,\n          autoWidth = _props6.autoWidth,\n          className = _props6.className,\n          containerProps = _props6.containerProps,\n          containerRole = _props6.containerRole,\n          containerStyle = _props6.containerStyle,\n          height = _props6.height,\n          id = _props6.id,\n          noContentRenderer = _props6.noContentRenderer,\n          role = _props6.role,\n          style = _props6.style,\n          tabIndex = _props6.tabIndex,\n          width = _props6.width;\n      var _state2 = this.state,\n          instanceProps = _state2.instanceProps,\n          needToResetStyleCache = _state2.needToResetStyleCache;\n\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      }\n\n      // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      }\n\n      // calculate children to render here\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      }\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n\n      var childrenToDisplay = this._childrenToDisplay;\n\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n\n      return React.createElement(\n        'div',\n        _extends({\n          ref: this._setScrollingContainerRef\n        }, containerProps, {\n          'aria-label': this.props['aria-label'],\n          'aria-readonly': this.props['aria-readonly'],\n          className: clsx('ReactVirtualized__Grid', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: role,\n          style: _extends({}, gridStyle, style),\n          tabIndex: tabIndex }),\n        childrenToDisplay.length > 0 && React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Grid__innerScrollContainer',\n            role: containerRole,\n            style: _extends({\n              width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n              height: totalRowsHeight,\n              maxWidth: totalColumnsWidth,\n              maxHeight: totalRowsHeight,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              position: 'relative'\n            }, containerStyle) },\n          childrenToDisplay\n        ),\n        showNoContentRenderer && noContentRenderer()\n      );\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: '_calculateChildrenToRender',\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n\n\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = [];\n\n      // Render only enough columns and rows to cover the visible area of the grid.\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        });\n\n        // Store for _invokeOnGridRenderedHelper()\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex;\n\n        // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          }\n\n          // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        });\n\n        // update the indices\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_debounceScrollEnded',\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n\n        this.recomputeGridSize({ columnIndex: columnIndex, rowIndex: rowIndex });\n      }\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _props7 = _this3.props,\n              height = _props7.height,\n              onScroll = _props7.onScroll,\n              width = _props7.width;\n\n\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_isScrolling',\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: '_maybeCallOnScrollbarPresenceChange',\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var _onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n\n\n        this._scrollbarPresenceChanged = false;\n\n        _onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: 'scrollToPosition',\n\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: '_updateScrollLeftForScrollToColumn',\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: '_resetStyleCache',\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut;\n\n      // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {};\n\n      // Copy over the visible cell styles so avoid unnecessary re-render.\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = rowIndex + '-' + columnIndex;\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: '_updateScrollTopForScrollToRow',\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0;\n\n        // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        _Object$assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps;\n\n      // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      }\n\n      // If scrolling is controlled outside this component, clear cache when scrolling stops\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        _Object$assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA = void 0;\n      var maybeStateB = void 0;\n\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow;\n\n      // getting scrollBarSize (moved from componentWillMount)\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n\n      return _extends({}, newState, maybeStateA, maybeStateB);\n    }\n  }, {\n    key: '_getEstimatedColumnSize',\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: '_getEstimatedRowSize',\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: '_getScrollToPositionStateUpdate',\n\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n      return null;\n    }\n  }, {\n    key: '_wrapSizeGetter',\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: '_getCalculatedScrollLeft',\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: '_getScrollLeftForScrollToColumnStateUpdate',\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n      return null;\n    }\n  }, {\n    key: '_getCalculatedScrollTop',\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n      return 0;\n    }\n  }, {\n    key: '_getScrollTopForScrollToRowStateUpdate',\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n      return null;\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent);\n\nGrid.defaultProps = {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n};\nGrid.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  autoContainerWidth: PropTypes.bool.isRequired,\n\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  autoWidth: PropTypes.bool.isRequired,\n\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  cellRenderer: function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === 'function' ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  cellRangeRenderer: function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === 'function' ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  className: PropTypes.string,\n\n\n  /** Number of columns in grid.  */\n  columnCount: PropTypes.number.isRequired,\n\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  columnWidth: function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Unfiltered props for the Grid container. */\n  containerProps: PropTypes.object,\n\n\n  /** ARIA role for the cell-container.  */\n  containerRole: PropTypes.string.isRequired,\n\n\n  /** Optional inline style applied to inner cell-container */\n  containerStyle: PropTypes.object.isRequired,\n\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  deferredMeasurementCache: PropTypes.object,\n\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  estimatedColumnSize: PropTypes.number.isRequired,\n\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n\n  /** Exposed for testing purposes only.  */\n  getScrollbarSize: PropTypes.func.isRequired,\n\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  height: PropTypes.number.isRequired,\n\n\n  /** Optional custom id to attach to root Grid element.  */\n  id: PropTypes.string,\n\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  isScrolling: PropTypes.bool,\n\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  isScrollingOptOut: PropTypes.bool.isRequired,\n\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  noContentRenderer: function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  onScrollbarPresenceChange: PropTypes.func.isRequired,\n\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  onSectionRendered: PropTypes.func.isRequired,\n\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanColumnCount: PropTypes.number.isRequired,\n\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n\n  /** ARIA role for the grid element.  */\n  role: PropTypes.string.isRequired,\n\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Number of rows in grid.  */\n  rowCount: PropTypes.number.isRequired,\n\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n\n  /** Horizontal offset. */\n  scrollLeft: PropTypes.number,\n\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToColumn: PropTypes.number.isRequired,\n\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToRow: PropTypes.number.isRequired,\n\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  width: PropTypes.number.isRequired\n};\n\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from './types';\nimport { bpfrpt_proptype_CellRangeRenderer } from './types';\nimport { bpfrpt_proptype_CellPosition } from './types';\nimport { bpfrpt_proptype_CellSize } from './types';\nimport { bpfrpt_proptype_CellSizeGetter } from './types';\nimport { bpfrpt_proptype_NoContentRenderer } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from './types';\nimport { bpfrpt_proptype_RenderedSection } from './types';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from './types';\nimport { bpfrpt_proptype_Alignment } from './types';\nimport { bpfrpt_proptype_CellCache } from './types';\nimport { bpfrpt_proptype_StyleCache } from './types';\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\nvar AutoSizer = function (_React$PureComponent) {\n  _inherits(AutoSizer, _React$PureComponent);\n\n  function AutoSizer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AutoSizer.__proto__ || _Object$getPrototypeOf(AutoSizer)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    }, _this._onResize = function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n\n        var _height = _this._parentNode.offsetHeight || 0;\n        var _width = _this._parentNode.offsetWidth || 0;\n\n        var win = _this._window || window;\n        var _style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(_style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(_style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(_style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(_style.paddingBottom, 10) || 0;\n\n        var newHeight = _height - paddingTop - paddingBottom;\n        var newWidth = _width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: _height - paddingTop - paddingBottom,\n            width: _width - paddingLeft - paddingRight\n          });\n\n          onResize({ height: _height, width: _width });\n        }\n      }\n    }, _this._setRef = function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  } // uses any instead of Window because Flow doesn't have window type\n\n\n  _createClass(AutoSizer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView;\n\n        // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeight = _props.disableHeight,\n          disableWidth = _props.disableWidth,\n          style = _props.style;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n      // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = { overflow: 'visible' };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n      return React.createElement(\n        'div',\n        {\n          className: className,\n          ref: this._setRef,\n          style: _extends({}, outerStyle, style) },\n        children(childParams)\n      );\n    }\n  }]);\n\n  return AutoSizer;\n}(React.PureComponent);\n\nAutoSizer.defaultProps = {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n};\nAutoSizer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  children: PropTypes.func.isRequired,\n\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  className: PropTypes.string,\n\n\n  /** Default height to use for initial render; useful for SSR */\n  defaultHeight: PropTypes.number,\n\n\n  /** Default width to use for initial render; useful for SSR */\n  defaultWidth: PropTypes.number,\n\n\n  /** Disable dynamic :height property */\n  disableHeight: PropTypes.bool.isRequired,\n\n\n  /** Disable dynamic :width property */\n  disableWidth: PropTypes.bool.isRequired,\n\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  nonce: PropTypes.string,\n\n\n  /** Callback to be invoked on-resize */\n  onResize: PropTypes.func.isRequired,\n\n\n  /** Optional inline style */\n  style: PropTypes.object\n};\nexport default AutoSizer;\nimport PropTypes from 'prop-types';","import CellMeasurer from './CellMeasurer';\nimport CellMeasurerCache from './CellMeasurerCache';\n\nexport default CellMeasurer;\nexport { CellMeasurer, CellMeasurerCache };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getOwnPropertyDescriptor from 'babel-runtime/core-js/object/get-own-property-descriptor';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = function (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = List.__proto__ || _Object$getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this._cellRenderer = function (_ref2) {\n      var parent = _ref2.parent,\n          rowIndex = _ref2.rowIndex,\n          style = _ref2.style,\n          isScrolling = _ref2.isScrolling,\n          isVisible = _ref2.isVisible,\n          key = _ref2.key;\n      var rowRenderer = _this.props.rowRenderer;\n\n      // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var _Object$getOwnPropert = _Object$getOwnPropertyDescriptor(style, 'width'),\n          writable = _Object$getOwnPropert.writable;\n\n      if (writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    }, _this._setRef = function (ref) {\n      _this.Grid = ref;\n    }, _this._onScroll = function (_ref3) {\n      var clientHeight = _ref3.clientHeight,\n          scrollHeight = _ref3.scrollHeight,\n          scrollTop = _ref3.scrollTop;\n      var onScroll = _this.props.onScroll;\n\n\n      onScroll({ clientHeight: clientHeight, scrollHeight: scrollHeight, scrollTop: scrollTop });\n    }, _this._onSectionRendered = function (_ref4) {\n      var rowOverscanStartIndex = _ref4.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref4.rowOverscanStopIndex,\n          rowStartIndex = _ref4.rowStartIndex,\n          rowStopIndex = _ref4.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n\n\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(List, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref5) {\n      var alignment = _ref5.alignment,\n          index = _ref5.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            _scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return _scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === undefined ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === undefined ? 0 : _ref7$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({ scrollTop: scrollTop });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          className = _props.className,\n          noRowsRenderer = _props.noRowsRenderer,\n          scrollToIndex = _props.scrollToIndex,\n          width = _props.width;\n\n\n      var classNames = clsx('ReactVirtualized__List', className);\n\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent);\n\nList.defaultProps = {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nList.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool.isRequired,\n\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  height: PropTypes.number.isRequired,\n\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  noRowsRenderer: function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === 'function' ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n\n  onRowsRendered: PropTypes.func.isRequired,\n\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === 'function' ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  rowHeight: function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === 'function' ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  rowRenderer: function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === 'function' ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n\n  /** Number of rows in list. */\n  rowCount: PropTypes.number.isRequired,\n\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === 'function' ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n\n  /** Optional inline style */\n  style: PropTypes.object.isRequired,\n\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n};\nexport default List;\nimport { bpfrpt_proptype_NoContentRenderer } from '../Grid';\nimport { bpfrpt_proptype_Alignment } from '../Grid';\nimport { bpfrpt_proptype_CellSize } from '../Grid';\nimport { bpfrpt_proptype_CellPosition } from '../Grid';\nimport { bpfrpt_proptype_OverscanIndicesGetter } from '../Grid';\nimport { bpfrpt_proptype_RenderedSection } from '../Grid';\nimport { bpfrpt_proptype_CellRendererParams } from '../Grid';\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from '../Grid';\nimport { bpfrpt_proptype_RowRenderer } from './types';\nimport { bpfrpt_proptype_RenderedRows } from './types';\nimport { bpfrpt_proptype_Scroll } from './types';\nimport PropTypes from 'prop-types';","import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n\nvar emptyObject = {};\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = function (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Masonry.__proto__ || _Object$getPrototypeOf(Masonry)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      isScrolling: false,\n      scrollTop: 0\n    }, _this._invalidateOnUpdateStartIndex = null, _this._invalidateOnUpdateStopIndex = null, _this._positionCache = new PositionCache(), _this._startIndex = null, _this._startIndexMemoized = null, _this._stopIndex = null, _this._stopIndexMemoized = null, _this._debounceResetIsScrollingCallback = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    }, _this._onScroll = function (event) {\n      var height = _this.props.height;\n\n\n      var eventScrollTop = event.currentTarget.scrollTop;\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop);\n\n      // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n      if (eventScrollTop !== scrollTop) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._debounceResetIsScrolling();\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Masonry, [{\n    key: 'clearCellPositions',\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    }\n\n    // HACK This method signature was intended for Grid\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var index = _ref2.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: 'recomputeCellPositions',\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n\n      this._positionCache = new PositionCache();\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n      this._invokeOnScrollCallback();\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          autoHeight = _props.autoHeight,\n          cellCount = _props.cellCount,\n          cellMeasurerCache = _props.cellMeasurerCache,\n          cellRenderer = _props.cellRenderer,\n          className = _props.className,\n          height = _props.height,\n          id = _props.id,\n          keyMapper = _props.keyMapper,\n          overscanByPixels = _props.overscanByPixels,\n          role = _props.role,\n          style = _props.style,\n          tabIndex = _props.tabIndex,\n          width = _props.width,\n          rowDirection = _props.rowDirection;\n      var _state = this.state,\n          isScrolling = _state.isScrolling,\n          scrollTop = _state.scrollTop;\n\n\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n\n      var startIndex = 0;\n      var stopIndex = void 0;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, 'position', 'absolute'), _defineProperty(_style, 'top', top), _defineProperty(_style, 'width', cellMeasurerCache.getWidth(index)), _style)\n        }));\n      });\n\n      // We need to measure additional cells for this layout\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n\n      return React.createElement(\n        'div',\n        {\n          ref: this._setScrollingContainerRef,\n          'aria-label': this.props['aria-label'],\n          className: clsx('ReactVirtualized__Masonry', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: role,\n          style: _extends({\n            boxSizing: 'border-box',\n            direction: 'ltr',\n            height: autoHeight ? 'auto' : height,\n            overflowX: 'hidden',\n            overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n            position: 'relative',\n            width: width,\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform'\n          }, style),\n          tabIndex: tabIndex },\n        React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Masonry__innerScrollContainer',\n            style: {\n              width: '100%',\n              height: estimateTotalHeight,\n              maxWidth: '100%',\n              maxHeight: estimateTotalHeight,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              position: 'relative'\n            } },\n          children\n        )\n      );\n    }\n  }, {\n    key: '_checkInvalidateOnUpdate',\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var _startIndex = this._invalidateOnUpdateStartIndex;\n        var _stopIndex = this._invalidateOnUpdateStopIndex;\n\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null;\n\n        // Query external layout logic for position of newly-measured cells\n        this._populatePositionCache(_startIndex, _stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: '_debounceResetIsScrolling',\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: '_getEstimatedTotalHeight',\n    value: function _getEstimatedTotalHeight() {\n      var _props2 = this.props,\n          cellCount = _props2.cellCount,\n          cellMeasurerCache = _props2.cellMeasurerCache,\n          width = _props2.width;\n\n\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: '_invokeOnScrollCallback',\n    value: function _invokeOnScrollCallback() {\n      var _props3 = this.props,\n          height = _props3.height,\n          onScroll = _props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: '_invokeOnCellsRenderedCallback',\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var _onCellsRendered = this.props.onCellsRendered;\n\n\n        _onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: '_populatePositionCache',\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _props4 = this.props,\n          cellMeasurerCache = _props4.cellMeasurerCache,\n          cellPositioner = _props4.cellPositioner;\n\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            _left = _cellPositioner.left,\n            _top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, _left, _top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent);\n\nMasonry.defaultProps = {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n};\nMasonry.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  autoHeight: PropTypes.bool.isRequired,\n  cellCount: PropTypes.number.isRequired,\n  cellMeasurerCache: function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === 'function' ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellPositioner: function cellPositioner() {\n    return (typeof Positioner === 'function' ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  cellRenderer: function cellRenderer() {\n    return (typeof CellRenderer === 'function' ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  className: PropTypes.string,\n  height: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  keyMapper: function keyMapper() {\n    return (typeof KeyMapper === 'function' ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  onCellsRendered: function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === 'function' ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  onScroll: function onScroll() {\n    return (typeof OnScrollCallback === 'function' ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  overscanByPixels: PropTypes.number.isRequired,\n  role: PropTypes.string.isRequired,\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n  style: function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error('Prop `' + propName + '` has type \\'any\\' or \\'mixed\\', but was not provided to `' + componentName + '`. Pass undefined or any other value.');\n    }\n  },\n  tabIndex: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  rowDirection: PropTypes.string.isRequired\n};\n\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  defaultHeight: PropTypes.number.isRequired,\n  defaultWidth: PropTypes.number.isRequired,\n  getHeight: PropTypes.func.isRequired,\n  getWidth: PropTypes.func.isRequired\n};\n\n\npolyfill(Masonry);\n\nexport default Masonry;\n\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from '../utils/requestAnimationTimeout';\nimport PropTypes from 'prop-types';\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = function (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = WindowScroller.__proto__ || _Object$getPrototypeOf(WindowScroller)).call.apply(_ref, [this].concat(args))), _this), _this._window = getWindow(), _this._isMounted = false, _this._positionFromTop = 0, _this._positionFromLeft = 0, _this.state = _extends({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }), _this._registerChild = function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n      _this._child = element;\n      _this.updatePosition();\n    }, _this._onChildScroll = function (_ref2) {\n      var scrollTop = _ref2.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    }, _this._registerResizeListener = function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    }, _this._unregisterResizeListener = function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    }, _this._onResize = function () {\n      _this.updatePosition();\n    }, _this.__handleWindowScrollEvent = function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n\n\n      var scrollElement = _this.props.scrollElement;\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var _scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var _scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n\n        onScroll({\n          scrollLeft: _scrollLeft,\n          scrollTop: _scrollTop\n        });\n      }\n    }, _this.__resetIsScrolling = function () {\n      _this.setState({\n        isScrolling: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(WindowScroller, [{\n    key: 'updatePosition',\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _state = this.state,\n          height = _state.height,\n          width = _state.width;\n\n\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n\n      this._detectElementResize = createDetectElementResize();\n\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollTop = _state2.scrollTop,\n          scrollLeft = _state2.scrollLeft,\n          height = _state2.height,\n          width = _state2.width;\n\n\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n\n    // Referenced by utils/onScroll\n\n\n    // Referenced by utils/onScroll\n\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent);\n\nWindowScroller.defaultProps = {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n};\nWindowScroller.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired,\n\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  onResize: PropTypes.func.isRequired,\n\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  onScroll: PropTypes.func.isRequired,\n\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  scrollElement: PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === 'function' ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  scrollingResetTimeInterval: PropTypes.number.isRequired,\n\n\n  /** Height used for server-side rendering */\n  serverHeight: PropTypes.number.isRequired,\n\n\n  /** Width used for server-side rendering */\n  serverWidth: PropTypes.number.isRequired\n};\nexport default WindowScroller;\nimport PropTypes from 'prop-types';","import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\n\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Browsers have scroll offset limitations (eg Chrome stops scrolling at ~33.5M pixels where as Edge tops out at ~1.5M pixels).\n * After a certain position, the browser won't allow the user to scroll further (even via JavaScript scroll offset adjustments).\n * This util picks a lower ceiling for max size and artificially adjusts positions within to make it transparent for users.\n */\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager = function () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === undefined ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, ['maxScrollSize']);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: '_getOffsetPercentage',\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: '_offsetToSafeOffset',\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: '_safeOffsetToOffset',\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport default ScalingCellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","import _Object$keys from 'babel-runtime/core-js/object/keys';\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var cachedIndices = {};\n\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n\n    var keys = _Object$keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== _Object$keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\n\nexport var SCROLL_DIRECTION_BACKWARD = -1;\n\nexport var SCROLL_DIRECTION_FORWARD = 1;\n\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\n\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n\n  var renderedCells = [];\n\n  // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = rowIndex + '-' + columnIndex;\n      var style = void 0;\n\n      // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n\n      var renderedCell = void 0;\n\n      // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key];\n\n        // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\nimport { bpfrpt_proptype_CellRangeRendererParams } from './types';","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  scrollToColumn: PropTypes.number.isRequired,\n  scrollToRow: PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\n\nexport default Masonry;\nexport { createCellPositioner, Masonry };","\n\n/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from './types';","\n\n/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from './types';","import * as React from 'react';\n\n\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n\n  return React.createElement(\n    'div',\n    { className: className, role: 'row', style: style },\n    columns\n  );\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from './types';\nimport PropTypes from 'prop-types';","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\n    'span',\n    {\n      className: 'ReactVirtualized__Table__headerTruncatedText',\n      key: 'label',\n      title: typeof label === 'string' ? label : null },\n    label\n  )];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, { key: 'SortIndicator', sortDirection: sortDirection }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from './types';\nimport PropTypes from 'prop-types';","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n\n  return React.createElement(\n    'svg',\n    { className: classNames, width: 18, height: 18, viewBox: '0 0 24 24' },\n    sortDirection === SortDirection.ASC ? React.createElement('path', { d: 'M7 14l5-5 5 5z' }) : React.createElement('path', { d: 'M7 10l5 5 5-5z' }),\n    React.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' })\n  );\n}\n\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import _extends from 'babel-runtime/helpers/extends';\nimport * as React from 'react';\n\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n\n  var a11yProps = { 'aria-rowindex': index + 1 };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({ event: event, index: index, rowData: rowData });\n      };\n    }\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({ event: event, index: index, rowData: rowData });\n      };\n    }\n  }\n\n  return React.createElement(\n    'div',\n    _extends({}, a11yProps, {\n      className: className,\n      key: key,\n      role: 'row',\n      style: style }),\n    columns\n  );\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from './types';\nimport PropTypes from 'prop-types';","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column = function (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, (Column.__proto__ || _Object$getPrototypeOf(Column)).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\nColumn.defaultProps = {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n};\nexport default Column;\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","export { ArrowKeyStepper } from './ArrowKeyStepper';\nexport { AutoSizer } from './AutoSizer';\nexport { CellMeasurer, CellMeasurerCache } from './CellMeasurer';\nexport { Collection } from './Collection';\nexport { ColumnSizer } from './ColumnSizer';\nexport { accessibilityOverscanIndicesGetter, defaultCellRangeRenderer, defaultOverscanIndicesGetter, Grid } from './Grid';\nexport { InfiniteLoader } from './InfiniteLoader';\nexport { List } from './List';\nexport { createCellPositioner as createMasonryCellPositioner, Masonry } from './Masonry';\nexport { MultiGrid } from './MultiGrid';\nexport { ScrollSync } from './ScrollSync';\nexport { createMultiSort as createTableMultiSort, defaultCellDataGetter as defaultTableCellDataGetter, defaultCellRenderer as defaultTableCellRenderer, defaultHeaderRenderer as defaultTableHeaderRenderer, defaultHeaderRowRenderer as defaultTableHeaderRowRenderer, defaultRowRenderer as defaultTableRowRenderer, Table, Column, SortDirection, SortIndicator } from './Table';\nexport { WindowScroller } from './WindowScroller';","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\n\nexport var SCROLL_DIRECTION_BACKWARD = -1;\n\nexport var SCROLL_DIRECTION_FORWARD = 1;\n\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from './types';\nimport { bpfrpt_proptype_OverscanIndices } from './types';","export { default } from './AutoSizer';\nexport { default as AutoSizer } from './AutoSizer';","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\n\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n\n    /* Detect CSS Animations support to detect element display/re-attach */\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n        var elementStyle = _window.getComputedStyle(element);\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n\n        /* Listen for a css animation to detect element display/re-attach */\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {\n          // Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = function (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CellMeasurer.__proto__ || _Object$getPrototypeOf(CellMeasurer)).call.apply(_ref, [this].concat(args))), _this), _this._measure = function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === undefined ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === undefined ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CellMeasurer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return typeof children === 'function' ? children({ measure: this._measure }) : children;\n    }\n  }, {\n    key: '_getCellMeasurements',\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n\n\n      var node = findDOMNode(this);\n\n      // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height;\n\n        // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth);\n\n        // Reset after measuring to avoid breaking styles; see #660\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return { height: height, width: width };\n      } else {\n        return { height: 0, width: 0 };\n      }\n    }\n  }, {\n    key: '_maybeMeasureCell',\n    value: function _maybeMeasureCell() {\n      var _props = this.props,\n          cache = _props.cache,\n          _props$columnIndex = _props.columnIndex,\n          columnIndex = _props$columnIndex === undefined ? 0 : _props$columnIndex,\n          parent = _props.parent,\n          _props$rowIndex = _props.rowIndex,\n          rowIndex = _props$rowIndex === undefined ? this.props.index || 0 : _props$rowIndex;\n\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _getCellMeasurements2 = this._getCellMeasurements(),\n            height = _getCellMeasurements2.height,\n            width = _getCellMeasurements2.width;\n\n        cache.set(rowIndex, columnIndex, width, height);\n\n        // If size has changed, let Grid know to re-render.\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent);\n\n// Used for DEV mode warning check\n\n\nCellMeasurer.__internalCellMeasurerFlag = false;\nCellMeasurer.propTypes = process.env.NODE_ENV === 'production' ? null : {\n  cache: function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === 'function' ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  columnIndex: PropTypes.number,\n  index: PropTypes.number,\n  parent: PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  rowIndex: PropTypes.number\n};\nexport default CellMeasurer;\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\nimport { bpfrpt_proptype_CellMeasureCache } from './types';\nimport PropTypes from 'prop-types';","var bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  hasFixedWidth: PropTypes.func.isRequired,\n  hasFixedHeight: PropTypes.func.isRequired,\n  has: PropTypes.func.isRequired,\n  set: PropTypes.func.isRequired,\n  getHeight: PropTypes.func.isRequired,\n  getWidth: PropTypes.func.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasureCache };","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n\nexport var DEFAULT_HEIGHT = 30;\n\nexport var DEFAULT_WIDTH = 100;\n\n// Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache = function () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    this._cellHeightCache = {};\n    this._cellWidthCache = {};\n    this._columnWidthCache = {};\n    this._rowHeightCache = {};\n    this._columnCount = 0;\n    this._rowCount = 0;\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache.hasOwnProperty(key) ? _this._columnWidthCache[key] : _this._defaultWidth;\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache.hasOwnProperty(key) ? _this._rowHeightCache[key] : _this._defaultHeight;\n    };\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n\n\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: 'clear',\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache.hasOwnProperty(_key) ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache.hasOwnProperty(_key2) ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache.hasOwnProperty(key);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      }\n\n      // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: '_updateCachedColumnAndRowSizes',\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n        var columnKey = this._keyMapper(0, columnIndex);\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n        var rowKey = this._keyMapper(rowIndex, 0);\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport default CellMeasurerCache;\n\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return rowIndex + '-' + columnIndex;\n}\nimport { bpfrpt_proptype_CellMeasureCache } from './types';","import Collection from './Collection';\n\nexport default Collection;\nexport { Collection };","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection = function (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    _classCallCheck(this, Collection);\n\n    var _this = _possibleConstructorReturn(this, (Collection.__proto__ || _Object$getPrototypeOf(Collection)).call(this, props, context));\n\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = [];\n\n    // Cell cache during scroll (for perforamnce)\n    _this._cellCache = [];\n\n    _this._isScrollingChange = _this._isScrollingChange.bind(_this);\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: 'forceUpdate',\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n\n    /** React lifecycle methods */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = _objectWithoutProperties(this.props, []);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n\n    /** CellLayoutManager interface */\n\n  }, {\n    key: 'calculateSizeAndPositionData',\n    value: function calculateSizeAndPositionData() {\n      var _props = this.props,\n          cellCount = _props.cellCount,\n          cellSizeAndPositionGetter = _props.cellSizeAndPositionGetter,\n          sectionSize = _props.sectionSize;\n\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: 'getLastRenderedIndices',\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: 'getScrollPositionForCell',\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: 'cellRenderers',\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _props2 = this.props,\n          cellGroupRenderer = _props2.cellGroupRenderer,\n          cellRenderer = _props2.cellRenderer;\n\n      // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({ index: index });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: '_isScrollingChange',\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: '_setCollectionViewRef',\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\nCollection.defaultProps = {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n};\nexport default Collection;\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({ index: index });\n\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    };\n\n    // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\nimport { bpfrpt_proptype_ScrollPosition } from './types';\nimport { bpfrpt_proptype_SizeInfo } from './types';","import ColumnSizer from './ColumnSizer';\n\nexport default ColumnSizer;\nexport { ColumnSizer };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer = function (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    _classCallCheck(this, ColumnSizer);\n\n    var _this = _possibleConstructorReturn(this, (ColumnSizer.__proto__ || _Object$getPrototypeOf(ColumnSizer)).call(this, props, context));\n\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var _props = this.props,\n          columnMaxWidth = _props.columnMaxWidth,\n          columnMinWidth = _props.columnMinWidth,\n          columnCount = _props.columnCount,\n          width = _props.width;\n\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          children = _props2.children,\n          columnMaxWidth = _props2.columnMaxWidth,\n          columnMinWidth = _props2.columnMinWidth,\n          columnCount = _props2.columnCount,\n          width = _props2.width;\n\n\n      var safeColumnMinWidth = columnMinWidth || 1;\n\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport default ColumnSizer;\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import InfiniteLoader from './InfiniteLoader';\n\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader = function (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    _classCallCheck(this, InfiniteLoader);\n\n    var _this = _possibleConstructorReturn(this, (InfiniteLoader.__proto__ || _Object$getPrototypeOf(InfiniteLoader)).call(this, props, context));\n\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n    _this._onRowsRendered = _this._onRowsRendered.bind(_this);\n    _this._registerChild = _this._registerChild.bind(_this);\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: 'resetLoadMoreRowsCache',\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n\n\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_onRowsRendered',\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: '_doStuff',\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _props = this.props,\n          isRowLoaded = _props.isRowLoaded,\n          minimumBatchSize = _props.minimumBatchSize,\n          rowCount = _props.rowCount,\n          threshold = _props.threshold;\n\n\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      });\n\n      // For memoize comparison\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: { squashedUnloadedRanges: squashedUnloadedRanges }\n      });\n    }\n  }, {\n    key: '_registerChild',\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\nInfiniteLoader.defaultProps = {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n};\nexport default InfiniteLoader;\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n\n  var unloadedRanges = [];\n\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({ index: index });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({ index: _index })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({ index: _index2 })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","\n\nexport default function createCellPositioner(_ref) {\n  var cellMeasurerCache = _ref.cellMeasurerCache,\n      columnCount = _ref.columnCount,\n      columnWidth = _ref.columnWidth,\n      _ref$spacer = _ref.spacer,\n      spacer = _ref$spacer === undefined ? 0 : _ref$spacer;\n\n  var columnHeights = void 0;\n\n  initOrResetDerivedValues();\n\n  function cellPositioner(index) {\n    // Find the shortest column and use it.\n    var columnIndex = 0;\n    for (var i = 1; i < columnHeights.length; i++) {\n      if (columnHeights[i] < columnHeights[columnIndex]) {\n        columnIndex = i;\n      }\n    }\n\n    var left = columnIndex * (columnWidth + spacer);\n    var top = columnHeights[columnIndex] || 0;\n\n    columnHeights[columnIndex] = top + cellMeasurerCache.getHeight(index) + spacer;\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function initOrResetDerivedValues() {\n    // Track the height of each column.\n    // Layout algorithm below always inserts into the shortest column.\n    columnHeights = [];\n    for (var i = 0; i < columnCount; i++) {\n      columnHeights[i] = 0;\n    }\n  }\n\n  function reset(params) {\n    columnCount = params.columnCount;\n    columnWidth = params.columnWidth;\n    spacer = params.spacer;\n\n    initOrResetDerivedValues();\n  }\n\n  cellPositioner.reset = reset;\n\n  return cellPositioner;\n}\nimport { bpfrpt_proptype_CellMeasurerCache } from './Masonry';\nimport { bpfrpt_proptype_Positioner } from './Masonry';","import MultiGrid from './MultiGrid';\n\nexport default MultiGrid;\nexport { MultiGrid };","import _extends from 'babel-runtime/helpers/extends';\nimport _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid = function (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    _classCallCheck(this, MultiGrid);\n\n    var _this = _possibleConstructorReturn(this, (MultiGrid.__proto__ || _Object$getPrototypeOf(MultiGrid)).call(this, props, context));\n\n    _initialiseProps.call(_this);\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        fixedColumnCount = props.fixedColumnCount,\n        fixedRowCount = props.fixedRowCount;\n\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheBottomRightGrid = fixedColumnCount > 0 || fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: fixedRowCount\n      }) : deferredMeasurementCache;\n\n      _this._deferredMeasurementCacheTopRightGrid = fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: 'forceUpdateGrids',\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === undefined ? 0 : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === undefined ? 0 : _ref$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllCells',\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$columnIndex = _ref2.columnIndex,\n          columnIndex = _ref2$columnIndex === undefined ? 0 : _ref2$columnIndex,\n          _ref2$rowIndex = _ref2.rowIndex,\n          rowIndex = _ref2$rowIndex === undefined ? 0 : _ref2$rowIndex;\n\n      var _props = this.props,\n          fixedColumnCount = _props.fixedColumnCount,\n          fixedRowCount = _props.fixedRowCount;\n\n\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props2 = this.props,\n          scrollLeft = _props2.scrollLeft,\n          scrollTop = _props2.scrollTop;\n\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          onScroll = _props3.onScroll,\n          onSectionRendered = _props3.onSectionRendered,\n          onScrollbarPresenceChange = _props3.onScrollbarPresenceChange,\n          scrollLeftProp = _props3.scrollLeft,\n          scrollToColumn = _props3.scrollToColumn,\n          scrollTopProp = _props3.scrollTop,\n          scrollToRow = _props3.scrollToRow,\n          rest = _objectWithoutProperties(_props3, ['onScroll', 'onSectionRendered', 'onScrollbarPresenceChange', 'scrollLeft', 'scrollToColumn', 'scrollTop', 'scrollToRow']);\n\n      this._prepareForRender();\n\n      // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      }\n\n      // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop;\n\n\n      return React.createElement(\n        'div',\n        { style: this._containerOuterStyle },\n        React.createElement(\n          'div',\n          { style: this._containerTopStyle },\n          this._renderTopLeftGrid(rest),\n          this._renderTopRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollLeft: scrollLeft\n          }))\n        ),\n        React.createElement(\n          'div',\n          { style: this._containerBottomStyle },\n          this._renderBottomLeftGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            scrollTop: scrollTop\n          })),\n          this._renderBottomRightGrid(_extends({}, rest, {\n            onScroll: onScroll,\n            onSectionRendered: onSectionRendered,\n            scrollLeft: scrollLeft,\n            scrollToColumn: scrollToColumn,\n            scrollToRow: scrollToRow,\n            scrollTop: scrollTop\n          }))\n        )\n      );\n    }\n  }, {\n    key: '_getBottomGridHeight',\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: '_getLeftGridWidth',\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({ index: index });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: '_getRightGridWidth',\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: '_getTopGridHeight',\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({ index: index });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: '_handleInvalidatedGridSize',\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: '_maybeCalculateCachedStyles',\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _props4 = this.props,\n          columnWidth = _props4.columnWidth,\n          enableFixedColumnScroll = _props4.enableFixedColumnScroll,\n          enableFixedRowScroll = _props4.enableFixedRowScroll,\n          height = _props4.height,\n          fixedColumnCount = _props4.fixedColumnCount,\n          fixedRowCount = _props4.fixedRowCount,\n          rowHeight = _props4.rowHeight,\n          style = _props4.style,\n          styleBottomLeftGrid = _props4.styleBottomLeftGrid,\n          styleBottomRightGrid = _props4.styleBottomRightGrid,\n          styleTopLeftGrid = _props4.styleTopLeftGrid,\n          styleTopRightGrid = _props4.styleTopRightGrid,\n          width = _props4.width;\n\n\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _extends({\n          height: height,\n          overflow: 'visible', // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible', // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _extends({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _extends({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: '_prepareForRender',\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: '_renderBottomLeftGrid',\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'BottomLeftGrid_ScrollWrapper',\n            style: _extends({}, this._bottomLeftGridStyle, {\n              height: height,\n              width: width,\n              overflowY: 'hidden'\n            }) },\n          bottomLeftGrid\n        );\n      }\n      return bottomLeftGrid;\n    }\n  }, {\n    key: '_renderBottomRightGrid',\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n\n\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopLeftGrid',\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: '_renderTopRightGrid',\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _state2 = this.state,\n          showHorizontalScrollbar = _state2.showHorizontalScrollbar,\n          scrollbarSize = _state2.scrollbarSize;\n\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _extends({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\n          'div',\n          {\n            className: 'TopRightGrid_ScrollWrapper',\n            style: _extends({}, this._topRightGridStyle, {\n              height: height,\n              width: width,\n              overflowX: 'hidden'\n            }) },\n          topRightGrid\n        );\n      }\n      return topRightGrid;\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\nMultiGrid.defaultProps = {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = {\n    scrollLeft: 0,\n    scrollTop: 0,\n    scrollbarSize: 0,\n    showHorizontalScrollbar: false,\n    showVerticalScrollbar: false\n  };\n  this._deferredInvalidateColumnIndex = null;\n  this._deferredInvalidateRowIndex = null;\n\n  this._bottomLeftGridRef = function (ref) {\n    _this2._bottomLeftGrid = ref;\n  };\n\n  this._bottomRightGridRef = function (ref) {\n    _this2._bottomRightGrid = ref;\n  };\n\n  this._cellRendererBottomLeftGrid = function (_ref3) {\n    var rowIndex = _ref3.rowIndex,\n        rest = _objectWithoutProperties(_ref3, ['rowIndex']);\n\n    var _props5 = _this2.props,\n        cellRenderer = _props5.cellRenderer,\n        fixedRowCount = _props5.fixedRowCount,\n        rowCount = _props5.rowCount;\n\n\n    if (rowIndex === rowCount - fixedRowCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          height: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        parent: _this2,\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    }\n  };\n\n  this._cellRendererBottomRightGrid = function (_ref4) {\n    var columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex,\n        rest = _objectWithoutProperties(_ref4, ['columnIndex', 'rowIndex']);\n\n    var _props6 = _this2.props,\n        cellRenderer = _props6.cellRenderer,\n        fixedColumnCount = _props6.fixedColumnCount,\n        fixedRowCount = _props6.fixedRowCount;\n\n\n    return cellRenderer(_extends({}, rest, {\n      columnIndex: columnIndex + fixedColumnCount,\n      parent: _this2,\n      rowIndex: rowIndex + fixedRowCount\n    }));\n  };\n\n  this._cellRendererTopRightGrid = function (_ref5) {\n    var columnIndex = _ref5.columnIndex,\n        rest = _objectWithoutProperties(_ref5, ['columnIndex']);\n\n    var _props7 = _this2.props,\n        cellRenderer = _props7.cellRenderer,\n        columnCount = _props7.columnCount,\n        fixedColumnCount = _props7.fixedColumnCount;\n\n\n    if (columnIndex === columnCount - fixedColumnCount) {\n      return React.createElement('div', {\n        key: rest.key,\n        style: _extends({}, rest.style, {\n          width: SCROLLBAR_SIZE_BUFFER\n        })\n      });\n    } else {\n      return cellRenderer(_extends({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _this2\n      }));\n    }\n  };\n\n  this._columnWidthRightGrid = function (_ref6) {\n    var index = _ref6.index;\n    var _props8 = _this2.props,\n        columnCount = _props8.columnCount,\n        fixedColumnCount = _props8.fixedColumnCount,\n        columnWidth = _props8.columnWidth;\n    var _state3 = _this2.state,\n        scrollbarSize = _state3.scrollbarSize,\n        showHorizontalScrollbar = _state3.showHorizontalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n      return scrollbarSize;\n    }\n\n    return typeof columnWidth === 'function' ? columnWidth({ index: index + fixedColumnCount }) : columnWidth;\n  };\n\n  this._onScroll = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft,\n        scrollTop = scrollInfo.scrollTop;\n\n    _this2.setState({\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n    var onScroll = _this2.props.onScroll;\n    if (onScroll) {\n      onScroll(scrollInfo);\n    }\n  };\n\n  this._onScrollbarPresenceChange = function (_ref7) {\n    var horizontal = _ref7.horizontal,\n        size = _ref7.size,\n        vertical = _ref7.vertical;\n    var _state4 = _this2.state,\n        showHorizontalScrollbar = _state4.showHorizontalScrollbar,\n        showVerticalScrollbar = _state4.showVerticalScrollbar;\n\n\n    if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n      _this2.setState({\n        scrollbarSize: size,\n        showHorizontalScrollbar: horizontal,\n        showVerticalScrollbar: vertical\n      });\n\n      var onScrollbarPresenceChange = _this2.props.onScrollbarPresenceChange;\n\n      if (typeof onScrollbarPresenceChange === 'function') {\n        onScrollbarPresenceChange({\n          horizontal: horizontal,\n          size: size,\n          vertical: vertical\n        });\n      }\n    }\n  };\n\n  this._onScrollLeft = function (scrollInfo) {\n    var scrollLeft = scrollInfo.scrollLeft;\n\n    _this2._onScroll({\n      scrollLeft: scrollLeft,\n      scrollTop: _this2.state.scrollTop\n    });\n  };\n\n  this._onScrollTop = function (scrollInfo) {\n    var scrollTop = scrollInfo.scrollTop;\n\n    _this2._onScroll({\n      scrollTop: scrollTop,\n      scrollLeft: _this2.state.scrollLeft\n    });\n  };\n\n  this._rowHeightBottomGrid = function (_ref8) {\n    var index = _ref8.index;\n    var _props9 = _this2.props,\n        fixedRowCount = _props9.fixedRowCount,\n        rowCount = _props9.rowCount,\n        rowHeight = _props9.rowHeight;\n    var _state5 = _this2.state,\n        scrollbarSize = _state5.scrollbarSize,\n        showVerticalScrollbar = _state5.showVerticalScrollbar;\n\n    // An extra cell is added to the count\n    // This gives the smaller Grid extra room for offset,\n    // In case the main (bottom right) Grid has a scrollbar\n    // If no scrollbar, the extra space is overflow:hidden anyway\n\n    if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n      return scrollbarSize;\n    }\n\n    return typeof rowHeight === 'function' ? rowHeight({ index: index + fixedRowCount }) : rowHeight;\n  };\n\n  this._topLeftGridRef = function (ref) {\n    _this2._topLeftGrid = ref;\n  };\n\n  this._topRightGridRef = function (ref) {\n    _this2._topRightGrid = ref;\n  };\n};\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\n\n\npolyfill(MultiGrid);\n\nexport default MultiGrid;","import ScrollSync from './ScrollSync';\n\nexport default ScrollSync;\nexport { ScrollSync };","import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync = function (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    _classCallCheck(this, ScrollSync);\n\n    var _this = _possibleConstructorReturn(this, (ScrollSync.__proto__ || _Object$getPrototypeOf(ScrollSync)).call(this, props, context));\n\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n\n    _this._onScroll = _this._onScroll.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var _state = this.state,\n          clientHeight = _state.clientHeight,\n          clientWidth = _state.clientWidth,\n          scrollHeight = _state.scrollHeight,\n          scrollLeft = _state.scrollLeft,\n          scrollTop = _state.scrollTop,\n          scrollWidth = _state.scrollWidth;\n\n\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport default ScrollSync;\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import _Object$keys from 'babel-runtime/core-js/object/keys';\n\n\nexport default function createMultiSort(sortCallback) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      defaultSortBy = _ref.defaultSortBy,\n      _ref$defaultSortDirec = _ref.defaultSortDirection,\n      defaultSortDirection = _ref$defaultSortDirec === undefined ? {} : _ref$defaultSortDirec;\n\n  if (!sortCallback) {\n    throw Error('Required parameter \"sortCallback\" not specified');\n  }\n\n  var sortBy = defaultSortBy || [];\n  var sortDirection = {};\n\n  sortBy.forEach(function (dataKey) {\n    sortDirection[dataKey] = defaultSortDirection.hasOwnProperty(dataKey) ? defaultSortDirection[dataKey] : 'ASC';\n  });\n\n  function sort(_ref2) {\n    var defaultSortDirection = _ref2.defaultSortDirection,\n        event = _ref2.event,\n        dataKey = _ref2.sortBy;\n\n    if (event.shiftKey) {\n      // Shift + click appends a column to existing criteria\n      if (sortDirection.hasOwnProperty(dataKey)) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n        sortBy.push(dataKey);\n      }\n    } else if (event.ctrlKey || event.metaKey) {\n      // Control + click removes column from sort (if pressent)\n      var index = sortBy.indexOf(dataKey);\n      if (index >= 0) {\n        sortBy.splice(index, 1);\n        delete sortDirection[dataKey];\n      }\n    } else {\n      // Clear sortBy array of all non-selected keys\n      sortBy.length = 0;\n      sortBy.push(dataKey);\n\n      // Clear sortDirection object of all non-selected keys\n      var sortDirectionKeys = _Object$keys(sortDirection);\n      sortDirectionKeys.forEach(function (key) {\n        if (key !== dataKey) delete sortDirection[key];\n      });\n\n      // If key is already selected, reverse sort direction.\n      // Else, set sort direction to default direction.\n      if (sortDirection.hasOwnProperty(dataKey)) {\n        sortDirection[dataKey] = sortDirection[dataKey] === 'ASC' ? 'DESC' : 'ASC';\n      } else {\n        sortDirection[dataKey] = defaultSortDirection;\n      }\n    }\n\n    // Notify application code\n    sortCallback({\n      sortBy: sortBy,\n      sortDirection: sortDirection\n    });\n  }\n\n  return {\n    sort: sort,\n    sortBy: sortBy,\n    sortDirection: sortDirection\n  };\n}","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\n\nimport clsx from 'clsx';\n\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\n\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table = function (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    _classCallCheck(this, Table);\n\n    var _this = _possibleConstructorReturn(this, (Table.__proto__ || _Object$getPrototypeOf(Table)).call(this, props));\n\n    _this.state = {\n      scrollbarWidth: 0\n    };\n\n    _this._createColumn = _this._createColumn.bind(_this);\n    _this._createRow = _this._createRow.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n    _this._onSectionRendered = _this._onSectionRendered.bind(_this);\n    _this._setRef = _this._setRef.bind(_this);\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: 'forceUpdateGrid',\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: 'getOffsetForRow',\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _Grid$getOffsetForCel = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _Grid$getOffsetForCel.scrollTop;\n\n        return scrollTop;\n      }\n      return 0;\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'invalidateCellSizeAfterRender',\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: 'measureAllRows',\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: 'recomputeGridSize',\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === undefined ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === undefined ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: 'recomputeRowHeights',\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: 'scrollToPosition',\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({ scrollTop: scrollTop });\n      }\n    }\n\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: 'scrollToRow',\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: 'getScrollbarWidth',\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          disableHeader = _props.disableHeader,\n          gridClassName = _props.gridClassName,\n          gridStyle = _props.gridStyle,\n          headerHeight = _props.headerHeight,\n          headerRowRenderer = _props.headerRowRenderer,\n          height = _props.height,\n          id = _props.id,\n          noRowsRenderer = _props.noRowsRenderer,\n          rowClassName = _props.rowClassName,\n          rowStyle = _props.rowStyle,\n          scrollToIndex = _props.scrollToIndex,\n          style = _props.style,\n          width = _props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: -1 }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: -1 }) : rowStyle;\n\n      // Precompute and cache column styles before rendering rows and columns to speed things up\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _extends({\n          overflow: 'hidden'\n        }, flexStyles);\n      });\n\n      // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n      return React.createElement(\n        'div',\n        {\n          'aria-label': this.props['aria-label'],\n          'aria-labelledby': this.props['aria-labelledby'],\n          'aria-colcount': React.Children.toArray(children).length,\n          'aria-rowcount': this.props.rowCount,\n          className: clsx('ReactVirtualized__Table', className),\n          id: id,\n          role: 'grid',\n          style: style },\n        !disableHeader && headerRowRenderer({\n          className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n          columns: this._getHeaderColumns(),\n          style: _extends({\n            height: headerHeight,\n            overflow: 'hidden',\n            paddingRight: scrollbarWidth,\n            width: width\n          }, rowStyleObject)\n        }),\n        React.createElement(Grid, _extends({}, this.props, {\n          'aria-readonly': null,\n          autoContainerWidth: true,\n          className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n          cellRenderer: this._createRow,\n          columnWidth: width,\n          columnCount: 1,\n          height: availableRowsHeight,\n          id: undefined,\n          noContentRenderer: noRowsRenderer,\n          onScroll: this._onScroll,\n          onSectionRendered: this._onSectionRendered,\n          ref: this._setRef,\n          role: 'rowgroup',\n          scrollbarWidth: scrollbarWidth,\n          scrollToRow: scrollToIndex,\n          style: _extends({}, gridStyle, {\n            overflowX: 'hidden'\n          })\n        }))\n      );\n    }\n  }, {\n    key: '_createColumn',\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n\n\n      var cellData = cellDataGetter({ columnData: columnData, dataKey: dataKey, rowData: rowData });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({ columnData: columnData, dataKey: dataKey, event: event });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n\n      var title = typeof renderedCell === 'string' ? renderedCell : null;\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-colindex': columnIndex + 1,\n          'aria-describedby': id,\n          className: clsx('ReactVirtualized__Table__rowColumn', className),\n          key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n          onClick: onClick,\n          role: 'gridcell',\n          style: style,\n          title: title },\n        renderedCell\n      );\n    }\n  }, {\n    key: '_createHeader',\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _props2 = this.props,\n          headerClassName = _props2.headerClassName,\n          headerStyle = _props2.headerStyle,\n          onHeaderClick = _props2.onHeaderClick,\n          sort = _props2.sort,\n          sortBy = _props2.sortBy,\n          sortDirection = _props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n\n      var sortEnabled = !disableSort && sort;\n\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n      var style = this._getFlexStyleForColumn(column, _extends({}, headerStyle, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n\n      var headerOnClick = void 0,\n          headerOnKeyDown = void 0,\n          headerTabIndex = void 0,\n          headerAriaSort = void 0,\n          headerAriaLabel = void 0;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey;\n\n        // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({ columnData: columnData, dataKey: dataKey, event: event });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      }\n\n      // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n      return React.createElement(\n        'div',\n        {\n          'aria-label': headerAriaLabel,\n          'aria-sort': headerAriaSort,\n          className: classNames,\n          id: id,\n          key: 'Header-Col' + index,\n          onClick: headerOnClick,\n          onKeyDown: headerOnKeyDown,\n          role: 'columnheader',\n          style: style,\n          tabIndex: headerTabIndex },\n        renderedHeader\n      );\n    }\n  }, {\n    key: '_createRow',\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _props3 = this.props,\n          children = _props3.children,\n          onRowClick = _props3.onRowClick,\n          onRowDoubleClick = _props3.onRowDoubleClick,\n          onRowRightClick = _props3.onRowRightClick,\n          onRowMouseOver = _props3.onRowMouseOver,\n          onRowMouseOut = _props3.onRowMouseOut,\n          rowClassName = _props3.rowClassName,\n          rowGetter = _props3.rowGetter,\n          rowRenderer = _props3.rowRenderer,\n          rowStyle = _props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n\n\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({ index: index }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({ index: index }) : rowStyle;\n      var rowData = rowGetter({ index: index });\n\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n      var flattenedStyle = _extends({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: '_getFlexStyleForColumn',\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var flexValue = column.props.flexGrow + ' ' + column.props.flexShrink + ' ' + column.props.width + 'px';\n\n      var style = _extends({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: '_getHeaderColumns',\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          children = _props4.children,\n          disableHeader = _props4.disableHeader;\n\n      var items = disableHeader ? [] : React.Children.toArray(children);\n\n      return items.map(function (column, index) {\n        return _this4._createHeader({ column: column, index: index });\n      });\n    }\n  }, {\n    key: '_getRowHeight',\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n\n\n      return typeof rowHeight === 'function' ? rowHeight({ index: rowIndex }) : rowHeight;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n\n\n      onScroll({ clientHeight: clientHeight, scrollHeight: scrollHeight, scrollTop: scrollTop });\n    }\n  }, {\n    key: '_onSectionRendered',\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n\n\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: '_setRef',\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: '_setScrollbarWidth',\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n\n      this.setState({ scrollbarWidth: scrollbarWidth });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\nTable.defaultProps = {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n};\nexport default Table;\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from '../Grid';","import WindowScroller, { IS_SCROLLING_TIMEOUT } from './WindowScroller';\n\nexport default WindowScroller;\nexport { WindowScroller, IS_SCROLLING_TIMEOUT };","\n\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps);\n\n    // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\n\nvar CellSizeAndPositionManager = function () {\n\n  // Used in deferred mode to track which cells have been queued for measurement.\n\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    this._cellSizeAndPositionData = {};\n    this._lastMeasuredIndex = -1;\n    this._lastBatchedIndex = -1;\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: 'areOffsetsAdjusted',\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: 'configure',\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: 'getCellCount',\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: 'getEstimatedCellSize',\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: 'getLastMeasuredIndex',\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: 'getOffsetAdjustment',\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: 'getSizeAndPositionOfCell',\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error('Requested index ' + index + ' is outside of range 0..' + this._cellCount);\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var _offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var _size = this._cellSizeGetter({ index: i });\n\n          // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n          if (_size === undefined || isNaN(_size)) {\n            throw Error('Invalid size returned for cell ' + i + ' of value ' + _size);\n          } else if (_size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: _offset,\n              size: 0\n            };\n\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: _offset,\n              size: _size\n            };\n\n            _offset += _size;\n\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: 'getSizeAndPositionOfLastMeasuredCell',\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: 'getTotalSize',\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: 'getUpdatedOffsetForIndex',\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === undefined ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n\n      var idealOffset = void 0;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n        case 'end':\n          idealOffset = minOffset;\n          break;\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: 'getVisibleCellRange',\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n\n\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: 'resetCell',\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: '_binarySearch',\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var _currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (_currentOffset === offset) {\n          return middle;\n        } else if (_currentOffset < offset) {\n          low = middle + 1;\n        } else if (_currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: '_exponentialSearch',\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: '_findNearestCell',\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error('Invalid offset ' + offset + ' specified');\n      }\n\n      // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n      offset = Math.max(0, offset);\n\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport default CellSizeAndPositionManager;\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSizeGetter } from '../types';\nimport { bpfrpt_proptype_VisibleCellRange } from '../types';","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","\n\nimport ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize;\n\n  // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex);\n\n    // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from '../types';\nimport { bpfrpt_proptype_CellSize } from '../types';","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","\n\n// Properly handle server-side rendering.\nvar win = void 0;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n}\n\n// requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\n\n// @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar IS_SCROLLING_TIMEOUT = 150;\n\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView = function (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _ref;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n    var _this = _possibleConstructorReturn(this, (_ref = CollectionView.__proto__ || _Object$getPrototypeOf(CollectionView)).call.apply(_ref, [this].concat(args)));\n\n    _this.state = {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    };\n    _this._calculateSizeAndPositionDataOnNextUpdate = false;\n    _this._onSectionRenderedMemoizer = createCallbackMemoizer();\n    _this._onScrollMemoizer = createCallbackMemoizer(false);\n\n    _this._invokeOnSectionRenderedHelper = function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    };\n\n    _this._setScrollingContainerRef = function (ref) {\n      _this._scrollingContainer = ref;\n    };\n\n    _this._updateScrollPositionForScrollToCell = function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    };\n\n    _this._onScroll = function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      }\n\n      // Prevent pointer events from interrupting a smooth scroll\n      _this._enablePointerEventsAfterDelay();\n\n      // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop));\n\n      // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED;\n\n        // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    };\n\n    _this._scrollbarSize = getScrollbarSize();\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: 'recomputeCellSizesAndPositions',\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          cellLayoutManager = _props.cellLayoutManager,\n          scrollLeft = _props.scrollLeft,\n          scrollToCell = _props.scrollToCell,\n          scrollTop = _props.scrollTop;\n\n      // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({ scrollLeft: scrollLeft, scrollTop: scrollTop });\n      }\n\n      // Update onSectionRendered callback.\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width;\n\n      // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _props2 = this.props,\n          height = _props2.height,\n          scrollToAlignment = _props2.scrollToAlignment,\n          scrollToCell = _props2.scrollToCell,\n          width = _props2.width;\n      var _state = this.state,\n          scrollLeft = _state.scrollLeft,\n          scrollPositionChangeReason = _state.scrollPositionChangeReason,\n          scrollTop = _state.scrollTop;\n\n      // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      }\n\n      // Update scroll offsets if the current :scrollToCell values requires it\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      }\n\n      // Update onRowsRendered callback if start/stop indices have changed\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          autoHeight = _props3.autoHeight,\n          cellCount = _props3.cellCount,\n          cellLayoutManager = _props3.cellLayoutManager,\n          className = _props3.className,\n          height = _props3.height,\n          horizontalOverscanSize = _props3.horizontalOverscanSize,\n          id = _props3.id,\n          noContentRenderer = _props3.noContentRenderer,\n          style = _props3.style,\n          verticalOverscanSize = _props3.verticalOverscanSize,\n          width = _props3.width;\n      var _state2 = this.state,\n          isScrolling = _state2.isScrolling,\n          scrollLeft = _state2.scrollLeft,\n          scrollTop = _state2.scrollTop;\n\n      // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width;\n\n      // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      };\n\n      // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0;\n\n      // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n\n      return React.createElement(\n        'div',\n        {\n          ref: this._setScrollingContainerRef,\n          'aria-label': this.props['aria-label'],\n          className: clsx('ReactVirtualized__Collection', className),\n          id: id,\n          onScroll: this._onScroll,\n          role: 'grid',\n          style: _extends({}, collectionStyle, style),\n          tabIndex: 0 },\n        cellCount > 0 && React.createElement(\n          'div',\n          {\n            className: 'ReactVirtualized__Collection__innerScrollContainer',\n            style: {\n              height: totalHeight,\n              maxHeight: totalHeight,\n              maxWidth: totalWidth,\n              overflow: 'hidden',\n              pointerEvents: isScrolling ? 'none' : '',\n              width: totalWidth\n            } },\n          childrenToDisplay\n        ),\n        cellCount === 0 && noContentRenderer()\n      );\n    }\n\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: '_enablePointerEventsAfterDelay',\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n\n\n        isScrollingChange(false);\n\n        _this2._disablePointerEventsTimeoutId = null;\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: '_invokeOnScrollMemoizer',\n    value: function _invokeOnScrollMemoizer(_ref2) {\n      var _this3 = this;\n\n      var scrollLeft = _ref2.scrollLeft,\n          scrollTop = _ref2.scrollTop,\n          totalHeight = _ref2.totalHeight,\n          totalWidth = _ref2.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref3) {\n          var scrollLeft = _ref3.scrollLeft,\n              scrollTop = _ref3.scrollTop;\n          var _props4 = _this3.props,\n              height = _props4.height,\n              onScroll = _props4.onScroll,\n              width = _props4.width;\n\n\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: '_setScrollPosition',\n    value: function _setScrollPosition(_ref4) {\n      var scrollLeft = _ref4.scrollLeft,\n          scrollTop = _ref4.scrollTop;\n\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\nCollectionView.defaultProps = {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n};\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\n\n\npolyfill(CollectionView);\n\nexport default CollectionView;","import SectionManager from '../SectionManager';\n\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({ index: index });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error('Invalid metadata returned for cell ' + index + ':\\n        x:' + cellMetadatum.x + ', y:' + cellMetadatum.y + ', width:' + cellMetadatum.width + ', height:' + cellMetadatum.height);\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _Object$keys from 'babel-runtime/core-js/object/keys';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\n\n\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager = function () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: 'getCellIndices',\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n\n      var indices = {};\n\n      this.getSections({ height: height, width: width, x: x, y: y }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      });\n\n      // Object keys are strings; this function returns numbers\n      return _Object$keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: 'getCellMetadata',\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n\n      return this._cellMetadata[index];\n    }\n\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: 'getSections',\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = sectionX + '.' + sectionY;\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: 'getTotalSectionCount',\n    value: function getTotalSectionCount() {\n      return _Object$keys(this._sections).length;\n    }\n\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var _this = this;\n\n      return _Object$keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: 'registerCell',\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n\n      this._cellMetadata[index] = cellMetadatum;\n\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({ index: index });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport default SectionManager;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section = function () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n\n    this._indexMap = {};\n    this._indices = [];\n  }\n\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: 'addCellIndex',\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n        this._indices.push(index);\n      }\n    }\n\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: 'getCellIndices',\n    value: function getCellIndices() {\n      return this._indices;\n    }\n\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.x + ',' + this.y + ' ' + this.width + 'x' + this.height;\n    }\n  }]);\n\n  return Section;\n}();\n\nexport default Section;\nimport { bpfrpt_proptype_Index } from './types';\nimport { bpfrpt_proptype_SizeAndPositionInfo } from './types';","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === undefined ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache = function () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    this._columnSizeMap = {};\n    this._intervalTree = createIntervalTree();\n    this._leftMap = {};\n  }\n  // Tracks the height of each column\n\n\n  // Store tops and bottoms of each cell for fast intersection lookup.\n\n\n  // Maps cell index to x coordinates for quick lookup.\n\n\n  _createClass(PositionCache, [{\n    key: 'estimateTotalHeight',\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    }\n\n    // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: 'range',\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: 'setPosition',\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n      this._leftMap[index] = left;\n\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: 'count',\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: 'shortestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: 'tallestColumnSize',\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport default PositionCache;","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nimport bounds from './binarySearchBounds';\n\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n  if (this.left) {\n    this.left.intervals(result);\n  }\n  if (this.right) {\n    this.right.intervals(result);\n  }\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n    var rw = this.right ? this.right.count : 0;\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.left.remove(interval);\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n    var lw = this.left ? this.left.count : 0;\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n    var r = this.right.remove(interval);\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n      return SUCCESS;\n    }\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n      if (r) {\n        return r;\n      }\n    }\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n    if (r) {\n      return r;\n    }\n  }\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n  if (d) {\n    return d;\n  }\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n  if (d) {\n    return d;\n  }\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n  var pts = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n  pts.sort(compareNumbers);\n\n  var mid = pts[pts.length >> 1];\n\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  }\n\n  //Split center intervals\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n}\n\n//User friendly wrapper that makes it possible to support empty trees\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n    if (r === EMPTY) {\n      this.root = null;\n    }\n    return r !== NOT_FOUND;\n  }\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n    return 0;\n  }\n});\n\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n    return [];\n  }\n});\n\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n  return new IntervalTree(createIntervalTree(intervals));\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\n\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return i;\n}\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n  return -1;\n}\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator = function () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    this.columnWidth = function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    };\n\n    this.rowHeight = function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    };\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === undefined ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === undefined ? 0 : _params$rowIndexOffse;\n\n\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: 'clear',\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'clearAll',\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: 'hasFixedHeight',\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: 'hasFixedWidth',\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'has',\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: 'set',\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: 'defaultHeight',\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: 'defaultWidth',\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport default CellMeasurerCacheDecorator;","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\n\n\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n\n    document.body.style.pointerEvents = 'none';\n  }\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n  mountedInstances.push(component);\n}\n\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from '../WindowScroller.js';","\n\n/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\n// TODO Move this into WindowScroller and import from there\n\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n    var _elementRect = getBoundingBox(element);\n    var _containerRect = getBoundingBox(container);\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}"],"sourceRoot":""}