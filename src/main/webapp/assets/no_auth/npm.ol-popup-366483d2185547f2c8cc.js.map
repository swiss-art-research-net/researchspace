{"version":3,"sources":["webpack:///./node_modules/ol-popup/dist/ol-popup.js"],"names":["module","exports","Overlay","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","Popup","_Overlay","opt_options","instance","TypeError","classCallCheck","this","options","undefined","autoPan","autoPanAnimation","duration","element","document","createElement","_this","self","call","ReferenceError","possibleConstructorReturn","__proto__","getPrototypeOf","container","className","closer","href","appendChild","that","addEventListener","evt","style","display","blur","preventDefault","content","enableTouchScroll_","subClass","superClass","create","constructor","value","setPrototypeOf","inherits","show","coord","html","HTMLElement","innerHTML","scrollTop","setPosition","hide","isOpened","isTouchDevice_","createEvent","e","elm","scrollStartPos","event","touches","pageY","window","ol","factory"],"mappings":"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","file":"npm.ol-popup-366483d2185547f2c8cc.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/overlay')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/overlay'], factory) :\n\t(global.Popup = factory(global.ol.Overlay));\n}(this, (function (Overlay) { 'use strict';\n\nOverlay = 'default' in Overlay ? Overlay['default'] : Overlay;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n* OpenLayers Popup Overlay.\n* See [the examples](./examples) for usage. Styling can be done via CSS.\n* @constructor\n* @extends {ol.Overlay}\n* @param {olx.OverlayOptions} opt_options options as defined by ol.Overlay. Defaults to\n* `{autoPan: true, autoPanAnimation: {duration: 250}}`\n*/\n\nvar Popup = function (_Overlay) {\n    inherits(Popup, _Overlay);\n\n    function Popup(opt_options) {\n        classCallCheck(this, Popup);\n\n\n        var options = opt_options || {};\n\n        if (options.autoPan === undefined) {\n            options.autoPan = true;\n        }\n\n        if (options.autoPanAnimation === undefined) {\n            options.autoPanAnimation = {\n                duration: 250\n            };\n        }\n\n        var element = document.createElement('div');\n\n        options.element = element;\n\n        var _this = possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, options));\n\n        _this.container = element;\n        _this.container.className = 'ol-popup';\n\n        _this.closer = document.createElement('a');\n        _this.closer.className = 'ol-popup-closer';\n        _this.closer.href = '#';\n        _this.container.appendChild(_this.closer);\n\n        var that = _this;\n        _this.closer.addEventListener('click', function (evt) {\n            that.container.style.display = 'none';\n            that.closer.blur();\n            evt.preventDefault();\n        }, false);\n\n        _this.content = document.createElement('div');\n        _this.content.className = 'ol-popup-content';\n        _this.container.appendChild(_this.content);\n\n        // Apply workaround to enable scrolling of content div on touch devices\n        Popup.enableTouchScroll_(_this.content);\n\n        return _this;\n    }\n\n    /**\n    * Show the popup.\n    * @param {ol.Coordinate} coord Where to anchor the popup.\n    * @param {String|HTMLElement} html String or element of HTML to display within the popup.\n    * @returns {Popup} The Popup instance\n    */\n\n\n    createClass(Popup, [{\n        key: 'show',\n        value: function show(coord, html) {\n            if (html instanceof HTMLElement) {\n                this.content.innerHTML = \"\";\n                this.content.appendChild(html);\n            } else {\n                this.content.innerHTML = html;\n            }\n            this.container.style.display = 'block';\n            this.content.scrollTop = 0;\n            this.setPosition(coord);\n            return this;\n        }\n\n        /**\n        * @private\n        * @desc Determine if the current browser supports touch events. Adapted from\n        * https://gist.github.com/chrismbarr/4107472\n        */\n\n    }, {\n        key: 'hide',\n\n\n        /**\n        * Hide the popup.\n        * @returns {Popup} The Popup instance\n        */\n        value: function hide() {\n            this.container.style.display = 'none';\n            return this;\n        }\n\n        /**\n        * Indicates if the popup is in open state\n        * @returns {Boolean} Whether the popup instance is open\n        */\n\n    }, {\n        key: 'isOpened',\n        value: function isOpened() {\n            return this.container.style.display == 'block';\n        }\n    }], [{\n        key: 'isTouchDevice_',\n        value: function isTouchDevice_() {\n            try {\n                document.createEvent(\"TouchEvent\");\n                return true;\n            } catch (e) {\n                return false;\n            }\n        }\n\n        /**\n        * @private\n        * @desc Apply workaround to enable scrolling of overflowing content within an\n        * element. Adapted from https://gist.github.com/chrismbarr/4107472\n        */\n\n    }, {\n        key: 'enableTouchScroll_',\n        value: function enableTouchScroll_(elm) {\n            if (Popup.isTouchDevice_()) {\n                var scrollStartPos = 0;\n                elm.addEventListener(\"touchstart\", function (event) {\n                    scrollStartPos = this.scrollTop + event.touches[0].pageY;\n                }, false);\n                elm.addEventListener(\"touchmove\", function (event) {\n                    this.scrollTop = scrollStartPos - event.touches[0].pageY;\n                }, false);\n            }\n        }\n    }]);\n    return Popup;\n}(Overlay);\n\nif (window.ol && window.ol.Overlay) {\n    window.ol.Overlay.Popup = Popup;\n}\n\nreturn Popup;\n\n})));\n"],"sourceRoot":""}