{"version":3,"sources":["webpack:///./node_modules/browserify-rsa/index.js"],"names":["randomBytes","crt","msg","priv","blinds","blind","r","getr","blinder","toRed","bn","mont","modulus","redPow","publicExponent","fromRed","unblinder","invm","len","byteLength","blinded","mul","umod","c1","prime1","c2","prime2","qinv","coefficient","p","q","m1","exponent1","m2","exponent2","h","isub","imul","iadd","Buffer","toArray","cmp","module","exports"],"mappings":"gFAAA,kBAAS,EAAQ,MACbA,EAAc,EAAQ,MAW1B,SAASC,IAAIC,EAAKC,GAChB,IAAIC,EAVN,SAASC,MAAMF,GACb,IAAIG,EAAIC,KAAKJ,GAGb,MAAO,CACLK,QAHYF,EAAEG,MAAMC,EAAGC,KAAKR,EAAKS,UAClCC,OAAO,IAAIH,EAAGP,EAAKW,iBAAiBC,UAGnCC,UAAUV,EAAEW,KAAKd,EAAKS,UAIXP,CAAMF,GACfe,EAAMf,EAAKS,QAAQO,aAEnBC,GADMV,EAAGC,KAAKR,EAAKS,SACT,IAAIF,EAAGR,GAAKmB,IAAIjB,EAAOI,SAASc,KAAKnB,EAAKS,UACpDW,EAAKH,EAAQX,MAAMC,EAAGC,KAAKR,EAAKqB,SAChCC,EAAKL,EAAQX,MAAMC,EAAGC,KAAKR,EAAKuB,SAChCC,EAAOxB,EAAKyB,YACZC,EAAI1B,EAAKqB,OACTM,EAAI3B,EAAKuB,OACTK,EAAKR,EAAGV,OAAOV,EAAK6B,WACpBC,EAAKR,EAAGZ,OAAOV,EAAK+B,WACxBH,EAAKA,EAAGhB,UACRkB,EAAKA,EAAGlB,UACR,IAAIoB,EAAIJ,EAAGK,KAAKH,GAAII,KAAKV,GAAML,KAAKO,GAGpC,OAFAM,EAAEE,KAAKP,GACPG,EAAGK,KAAKH,GACD,IAAII,EAAON,EAAGI,KAAKjC,EAAOY,WAAWM,KAAKnB,EAAKS,SAAS4B,SAAQ,EAAOtB,IAGhF,SAASX,KAAKJ,GAGZ,IAFA,IAAIe,EAAMf,EAAKS,QAAQO,aACnBb,EAAI,IAAII,EAAGV,EAAYkB,IACpBZ,EAAEmC,IAAItC,EAAKS,UAAa,IAAMN,EAAEgB,KAAKnB,EAAKqB,UAAYlB,EAAEgB,KAAKnB,EAAKuB,SACvEpB,EAAI,IAAII,EAAGV,EAAYkB,IAEzB,OAAOZ,EApCToC,EAAOC,QAAU1C,IA6BjBA,IAAIM,KAAOA,O","file":"npm.browserify-rsa-669caef0244fbe953770.js","sourcesContent":["var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n"],"sourceRoot":""}