{"version":3,"sources":["webpack:///./src/main/web/components/ui/truncate/TextTruncateComponent.ts","webpack:///./src/main/web/components/ui/truncate/TextTruncateExpandCollapseComponent.ts"],"names":["props","handleExpand","setState","expanded","state","componentDidMount","truncate","expand","collapse","ModuleRegistry","parseHtmlToReact","then","element","truncateElement","this","D","span","expandElement","TextTruncateExpandCollapseComponent","factory","onClick","collapseElement","render","lines","className","style","ellipsis","div","createElement","children","Component","TextTruncateComponent","child","Children","only","cloneElement","component","createFactory"],"mappings":"6IAmBA,OACA,QACA,UAEA,SAEA,UA8CA,cACE,+BAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAmCN,EAAAC,aAAe,WACrB,EAAKC,SAAS,CAAEC,UAAW,EAAKC,MAAMD,YAlCtC,EAAKC,MAAQ,CACXD,UAAU,G,EAyDhB,OA9D2C,qCASzC,gCAAAE,kBAAA,sBACQ,aAAEC,EAAA,EAAAA,SAAUC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,SAEtBF,EACF,EAAAG,eAAeC,iBAAiBJ,GAAUK,MAAK,SAACC,GAC9C,EAAKV,SAAS,CAAEW,gBAAiBD,OAGnCE,KAAKZ,SAAS,CAAEW,gBAAiBE,EAAEC,KAAK,GAAI,MAG1CT,GACF,EAAAE,eAAeC,iBAAiBH,GAAQI,MAAK,SAACC,GAC5C,EAAKV,SAAS,CACZe,cAAeC,EAAoCC,QAAQ,CAAEC,QAAS,EAAKnB,cAAgBW,QAK7FJ,GACF,EAAAC,eAAeC,iBAAiBF,GAAUG,MAAK,SAACC,GAC9C,EAAKV,SAAS,CACZmB,gBAAiBH,EAAoCC,QAAQ,CAAEC,QAAS,EAAKnB,cAAgBW,SAUrG,gCAAAU,OAAA,WACQ,iBAAEC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,MACpB,aAAEtB,EAAA,EAAAA,SAAUU,EAAA,EAAAA,gBAAiBI,EAAA,EAAAA,cAAeI,EAAA,EAAAA,gBAE5CK,EAAWX,EAAEC,KAAK,GAAIH,EAAiBI,GAE7C,OAAOJ,EACHE,EAAEY,IACA,CAAEH,UAAS,EAAEC,MAAK,GAClB,EAAAG,cACE,UACA,CACEL,MAAOpB,EAAW,EAAIoB,GAAS,EAC/BG,SAAUA,GAEZZ,KAAKd,MAAM6B,UAEb1B,EAAWkB,EAAkB,MAE/B,MAER,sBA9DA,CAA2C,EAAAS,WAA9B,EAAAC,wBAgEb,UAAeA,G,kFCpHf,OAQA,6D,+CAMA,OANyD,mDACvD,8CAAAT,OAAA,WACE,IAAMU,EAAQ,EAAAC,SAASC,KAAKpB,KAAKd,MAAM6B,UAEvC,OAAO,EAAAM,aAAaH,EAAO,CAAEZ,QAASN,KAAKd,MAAMoB,WAErD,oCANA,CAAyD,EAAAU,WAA5C,EAAAZ,sCASA,EAAAkB,UAAYlB,EACZ,EAAAC,QAAU,EAAAkB,cAAc,EAAAD,WACrC,UAAe,EAAAA","file":"mp-text-truncate-04c2bacb3e1a72e8d6cc.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, createElement, ReactElement, CSSProperties } from 'react';\nimport * as D from 'react-dom-factories';\nimport ReactTruncate from 'react-truncate';\n\nimport { ModuleRegistry } from 'platform/api/module-loader';\n\nimport * as TextTruncateExpandCollapseComponent from './TextTruncateExpandCollapseComponent';\n\nexport interface Props {\n  /**\n   * Specifies how many lines of text should be preserved until it gets truncated\n   * @default 1\n   */\n  lines?: number;\n  /**\n   * Element that is added to the end of the text in case it is truncated\n   * @default '...'\n   */\n  truncate?: string;\n  /**\n   * Html element that is used to expand text\n   */\n  expand?: string;\n  /**\n   * Html element that is used to collapse text\n   */\n  collapse?: string;\n  className?: string;\n  style?: CSSProperties;\n}\n\nexport interface State {\n  expanded?: boolean;\n  truncateElement?: ReactElement<any> | ReactElement<any>[];\n  expandElement?: ReactElement<any>;\n  collapseElement?: ReactElement<any>;\n}\n\n/**\n * @example\n * <mp-text-truncate>Text</mp-text-truncate>\n *\n * @example\n * <mp-text-truncate lines=2 expand='<button>Expand</button>' collapse='<button>Collapse</button>'>\n *     Text\n * </mp-text-truncate>\n *\n * @example\n * <mp-text-truncate truncate='... <a href=\"#\">Read more</a>'>\n *     Text\n * </mp-text-truncate>\n */\nexport class TextTruncateComponent extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  componentDidMount() {\n    const { truncate, expand, collapse } = this.props;\n\n    if (truncate) {\n      ModuleRegistry.parseHtmlToReact(truncate).then((element) => {\n        this.setState({ truncateElement: element });\n      });\n    } else {\n      this.setState({ truncateElement: D.span({}, '') });\n    }\n\n    if (expand) {\n      ModuleRegistry.parseHtmlToReact(expand).then((element) => {\n        this.setState({\n          expandElement: TextTruncateExpandCollapseComponent.factory({ onClick: this.handleExpand }, element),\n        });\n      });\n    }\n\n    if (collapse) {\n      ModuleRegistry.parseHtmlToReact(collapse).then((element) => {\n        this.setState({\n          collapseElement: TextTruncateExpandCollapseComponent.factory({ onClick: this.handleExpand }, element),\n        });\n      });\n    }\n  }\n\n  private handleExpand = () => {\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  render() {\n    const { lines, className, style } = this.props;\n    const { expanded, truncateElement, expandElement, collapseElement } = this.state;\n\n    const ellipsis = D.span({}, truncateElement, expandElement);\n\n    return truncateElement\n      ? D.div(\n          { className, style },\n          createElement(\n            ReactTruncate,\n            {\n              lines: expanded ? 0 : lines || 1,\n              ellipsis: ellipsis,\n            },\n            this.props.children\n          ),\n          expanded ? collapseElement : null\n        )\n      : null;\n  }\n}\n\nexport default TextTruncateComponent;\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, createFactory, ReactElement, Children, cloneElement } from 'react';\n\nexport interface Props {\n  onClick?: () => void;\n}\n\nexport interface State {}\n\nexport class TextTruncateExpandCollapseComponent extends Component<Props, {}> {\n  render() {\n    const child = Children.only(this.props.children) as ReactElement<any>;\n\n    return cloneElement(child, { onClick: this.props.onClick });\n  }\n}\n\nexport type component = TextTruncateExpandCollapseComponent;\nexport const component = TextTruncateExpandCollapseComponent;\nexport const factory = createFactory(component);\nexport default component;\n"],"sourceRoot":""}