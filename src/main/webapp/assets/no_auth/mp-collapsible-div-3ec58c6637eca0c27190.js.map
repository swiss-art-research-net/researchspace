{"version":3,"sources":["webpack:///./src/main/web/components/ui/collapsible-div/CollapsibleDivComponent.ts"],"names":["props","context","state","expanded","render","children","Children","toArray","this","triggerComponent","_","find","child","componentHasType","CollapsibleDivTriggerComponent","contentComponent","CollapsibleDivContentComponent","triggerChildren","only","contentChildren","expandedClass","collapsedClass","D","div","createElement","onClick","setState","cloneElement","defaultProps","Component","CollapsibleDivComponent"],"mappings":"6IAmBA,OACA,QACA,QAEA,SAEA,UACA,UAsBA,cAKE,iCAAYA,EAAcC,GAA1B,MACE,YAAMD,EAAOC,IAAQ,K,OACrB,EAAKC,MAAQ,CACXC,SAAU,EAAKH,MAAMG,U,EA8B3B,OAtC6C,uCAY3C,kCAAAC,OAAA,sBACUD,EAAA,WAAAA,SAEFE,EAAW,EAAAC,SAASC,QAAQC,KAAKR,MAAMK,UACvCI,EAAmBC,EAAEC,KAAKN,GAAU,SAACO,GAAU,SAAAC,iBAAiBD,EAAO,EAAAE,mCACvEC,EAAmBL,EAAEC,KAAKN,GAAU,SAACO,GAAU,SAAAC,iBAAiBD,EAAO,EAAAI,mCAEvEC,EAAmB,EAAAX,SAASY,KAAKT,GAA8CT,MAAMK,SACrFc,EAAmB,EAAAb,SAASY,KAAKH,GAA8Cf,MAAMK,SAErF,2BAAEe,EAAA,EAAAA,cAAeC,EAAA,EAAAA,eACvB,OAAOC,EAAEC,IACP,GACA,EAAAC,cACE,EAAAV,+BACA,CACEM,cAAa,EACbC,eAAc,EACdlB,SAAUA,EACVsB,QAAS,WAAM,SAAKC,SAAS,CAAEvB,UAAWA,MAE5C,EAAAwB,aAAaV,EAAiB,KAEhC,EAAAO,cAAc,EAAAR,+BAAgC,CAAEb,SAAUA,GAAYgB,KAlC5D,wBAAAS,aAAsB,CAClCzB,UAAU,GAoCd,wBAtCA,CAA6C,EAAA0B,WAAhC,EAAAC,0BAwCb,UAAeA","file":"mp-collapsible-div-3ec58c6637eca0c27190.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, Children, createElement, cloneElement } from 'react';\nimport * as D from 'react-dom-factories';\nimport * as _ from 'lodash';\n\nimport { componentHasType } from 'platform/components/utils';\n\nimport { CollapsibleDivTriggerComponent } from './CollapsibleDivTriggerComponent';\nimport { CollapsibleDivContentComponent } from './CollapsibleDivContentComponent';\n\nexport interface Props {\n  /**\n   * Whether panel should be expanded by default.\n   */\n  expanded: boolean;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\n/**\n * @example\n   <mp-collapsible-panel expanded='true'>\n      <mp-collapsible-panel-trigger expanded-class=\"x\" collapsed-class=\"y\">\n          <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n      </mp-collapsible-panel-trigger>\n      <mp-collapsible-panel-content>Content</mp-collapsible-panel-content>\n  </mp-collapsible-panel >\n */\nexport class CollapsibleDivComponent extends Component<Props, State> {\n  public static defaultProps: Props = {\n    expanded: true,\n  };\n\n  constructor(props: Props, context: any) {\n    super(props, context);\n    this.state = {\n      expanded: this.props.expanded,\n    };\n  }\n\n  render() {\n    const { expanded } = this.state;\n\n    const children = Children.toArray(this.props.children);\n    const triggerComponent = _.find(children, (child) => componentHasType(child, CollapsibleDivTriggerComponent));\n    const contentComponent = _.find(children, (child) => componentHasType(child, CollapsibleDivContentComponent));\n\n    const triggerChildren = (Children.only(triggerComponent) as React.ReactElement<any>).props.children;\n    const contentChildren = (Children.only(contentComponent) as React.ReactElement<any>).props.children;\n\n    const { expandedClass, collapsedClass } = (Children.only(triggerComponent) as React.ReactElement<any>).props;\n    return D.div(\n      {},\n      createElement(\n        CollapsibleDivTriggerComponent,\n        {\n          expandedClass,\n          collapsedClass,\n          expanded: expanded,\n          onClick: () => this.setState({ expanded: !expanded }),\n        },\n        cloneElement(triggerChildren, {})\n      ),\n      createElement(CollapsibleDivContentComponent, { expanded: expanded }, contentChildren)\n    );\n  }\n}\n\nexport default CollapsibleDivComponent;\n"],"sourceRoot":""}