{"version":3,"sources":["webpack:///./node_modules/slate-prop-types/lib/slate-prop-types.es.js"],"names":["create","name","validate","check","isRequired","props","propName","componentName","location","value","Error","propType","_len","arguments","length","args","Array","_key","apply","undefined","concat","_len2","_key2","Types","block","v","isBlock","blocks","isBlockList","change","isChange","data","isData","document","isDocument","inline","isInline","inlines","isInlineList","leaf","isLeaf","leaves","isLeafList","mark","isMark","marks","isMarkSet","node","isNode","nodes","isNodeList","range","isRange","ranges","isRangeList","selection","isSelection","isValue","text","isText","texts","isTextList"],"mappings":"6FAAA,qBAUA,SAASA,OAAOC,EAAMC,GACpB,SAASC,MAAMC,EAAYC,EAAOC,EAAUC,EAAeC,GACzD,IAAIC,EAAQJ,EAAMC,GAElB,OAAa,MAATG,GAAkBL,EAIT,MAATK,GAAiBL,EACZ,IAAIM,MAAM,OAASF,EAAW,KAAOF,EAAW,+BAAiCC,EAAgB,+BAGtGL,EAASO,GACJ,KAGF,IAAIC,MAAM,WAAaF,EAAW,KAAOF,EAAW,kBAAoBC,EAAgB,wBAA0BN,EAAO,mBAAqBQ,GAX5I,KAcX,SAASE,WACP,IAAK,IAAIC,EAAOC,UAAUC,OAAQC,EAAOC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC3EF,EAAKE,GAAQJ,UAAUI,GAGzB,OAAOd,MAAMe,WAAMC,EAAW,EAAC,GAAOC,OAAOL,IAW/C,OARAJ,SAASP,WAAa,WACpB,IAAK,IAAIiB,EAAQR,UAAUC,OAAQC,EAAOC,MAAMK,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAChFP,EAAKO,GAAST,UAAUS,GAG1B,OAAOnB,MAAMe,WAAMC,EAAW,EAAC,GAAMC,OAAOL,KAGvCJ,SAST,IAAIY,EAAQ,CACVC,MAAOxB,OAAO,SAAS,SAAUyB,GAC/B,OAAO,QAAMC,QAAQD,MAEvBE,OAAQ3B,OAAO,eAAe,SAAUyB,GACtC,OAAO,QAAMG,YAAYH,MAE3BI,OAAQ7B,OAAO,UAAU,SAAUyB,GACjC,OAAO,SAAOK,SAASL,MAEzBM,KAAM/B,OAAO,QAAQ,SAAUyB,GAC7B,OAAO,OAAKO,OAAOP,MAErBQ,SAAUjC,OAAO,YAAY,SAAUyB,GACrC,OAAO,WAASS,WAAWT,MAE7BU,OAAQnC,OAAO,UAAU,SAAUyB,GACjC,OAAO,SAAOW,SAASX,MAEzBY,QAASrC,OAAO,UAAU,SAAUyB,GAClC,OAAO,SAAOa,aAAab,MAE7Bc,KAAMvC,OAAO,QAAQ,SAAUyB,GAC7B,OAAO,OAAKe,OAAOf,MAErBgB,OAAQzC,OAAO,cAAc,SAAUyB,GACrC,OAAO,OAAKiB,WAAWjB,MAEzBkB,KAAM3C,OAAO,QAAQ,SAAUyB,GAC7B,OAAO,OAAKmB,OAAOnB,MAErBoB,MAAO7C,OAAO,aAAa,SAAUyB,GACnC,OAAO,OAAKqB,UAAUrB,MAExBsB,KAAM/C,OAAO,QAAQ,SAAUyB,GAC7B,OAAO,OAAKuB,OAAOvB,MAErBwB,MAAOjD,OAAO,cAAc,SAAUyB,GACpC,OAAO,OAAKyB,WAAWzB,MAEzB0B,MAAOnD,OAAO,SAAS,SAAUyB,GAC/B,OAAO,QAAM2B,QAAQ3B,MAEvB4B,OAAQrD,OAAO,eAAe,SAAUyB,GACtC,OAAO,QAAM6B,YAAY7B,MAE3B8B,UAAWvD,OAAO,aAAa,SAAUyB,GACvC,OAAO,YAAU+B,YAAY/B,MAE/BhB,MAAOT,OAAO,SAAS,SAAUyB,GAC/B,OAAO,QAAMgC,QAAQhC,MAEvBiC,KAAM1D,OAAO,QAAQ,SAAUyB,GAC7B,OAAO,OAAKkC,OAAOlC,MAErBmC,MAAO5D,OAAO,cAAc,SAAUyB,GACpC,OAAO,OAAKoC,WAAWpC,OAWZ","file":"npm.slate-prop-types-829c59ad06b7b74c27b8.js","sourcesContent":["import { Block, Change, Data, Document, Inline, Leaf, Mark, Node, Range, Selection, Value, Text } from 'slate';\n\n/**\n * Create a prop type checker for Slate objects with `name` and `validate`.\n *\n * @param {String} name\n * @param {Function} validate\n * @return {Function}\n */\n\nfunction create(name, validate) {\n  function check(isRequired, props, propName, componentName, location) {\n    var value = props[propName];\n\n    if (value == null && !isRequired) {\n      return null;\n    }\n\n    if (value == null && isRequired) {\n      return new Error('The ' + location + ' `' + propName + '` is marked as required in `' + componentName + '`, but it was not supplied.');\n    }\n\n    if (validate(value)) {\n      return null;\n    }\n\n    return new Error('Invalid ' + location + ' `' + propName + '` supplied to `' + componentName + '`, expected a Slate `' + name + '` but received: ' + value);\n  }\n\n  function propType() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return check.apply(undefined, [false].concat(args));\n  }\n\n  propType.isRequired = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return check.apply(undefined, [true].concat(args));\n  };\n\n  return propType;\n}\n\n/**\n * Prop type checkers.\n *\n * @type {Object}\n */\n\nvar Types = {\n  block: create('Block', function (v) {\n    return Block.isBlock(v);\n  }),\n  blocks: create('List<Block>', function (v) {\n    return Block.isBlockList(v);\n  }),\n  change: create('Change', function (v) {\n    return Change.isChange(v);\n  }),\n  data: create('Data', function (v) {\n    return Data.isData(v);\n  }),\n  document: create('Document', function (v) {\n    return Document.isDocument(v);\n  }),\n  inline: create('Inline', function (v) {\n    return Inline.isInline(v);\n  }),\n  inlines: create('Inline', function (v) {\n    return Inline.isInlineList(v);\n  }),\n  leaf: create('Leaf', function (v) {\n    return Leaf.isLeaf(v);\n  }),\n  leaves: create('List<Leaf>', function (v) {\n    return Leaf.isLeafList(v);\n  }),\n  mark: create('Mark', function (v) {\n    return Mark.isMark(v);\n  }),\n  marks: create('Set<Mark>', function (v) {\n    return Mark.isMarkSet(v);\n  }),\n  node: create('Node', function (v) {\n    return Node.isNode(v);\n  }),\n  nodes: create('List<Node>', function (v) {\n    return Node.isNodeList(v);\n  }),\n  range: create('Range', function (v) {\n    return Range.isRange(v);\n  }),\n  ranges: create('List<Range>', function (v) {\n    return Range.isRangeList(v);\n  }),\n  selection: create('Selection', function (v) {\n    return Selection.isSelection(v);\n  }),\n  value: create('Value', function (v) {\n    return Value.isValue(v);\n  }),\n  text: create('Text', function (v) {\n    return Text.isText(v);\n  }),\n  texts: create('List<Text>', function (v) {\n    return Text.isTextList(v);\n  })\n\n  /**\n   * Export.\n   *\n   * @type {Object}\n   */\n\n};\n\nexport default Types;\n//# sourceMappingURL=slate-prop-types.es.js.map\n"],"sourceRoot":""}