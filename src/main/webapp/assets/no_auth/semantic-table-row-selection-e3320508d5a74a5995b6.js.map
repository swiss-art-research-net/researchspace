{"version":3,"sources":["webpack:///./src/main/web/components/semantic/table/TableSelectionComponent.ts"],"names":["toggleSelection","context","semanticTableEvents","toggleRowSelection","semanticTableRowData","render","selected","this","semanticTableSelected","has","D","input","assign","type","checked","onChange","props","contextTypes","PropTypes","any","isRequired","Component","SemanticTableSelectionComponent"],"mappings":"6IAoBA,QACA,OACA,QACA,OAKA,uG,OA4BU,EAAAA,gBAAkB,WACxB,EAAKC,QAAQC,oBAAoBC,mBAAmB,EAAKF,QAAQG,uB,EAErE,OA/B8C,+CAa5C,0CAAAC,OAAA,WACE,IAAMC,EAAWC,KAAKN,QAAQO,sBAAsBC,IAAIF,KAAKN,QAAQG,sBAErE,OAAOM,EAAEC,MACP,EAAAC,OACE,CACEC,KAAM,WACNC,QAASR,EACTS,SAAUR,KAAKP,iBAEjBO,KAAKS,SAtBJ,gCAAAC,aAAe,CACpBf,oBAAqBgB,EAAUC,IAAIC,WACnChB,qBAAsBc,EAAUC,IAAIC,WACpCZ,sBAAuBU,EAAUC,IAAIC,YA2BzC,gCA/BA,CAA8C,EAAAC,WAiC9C,UAAeC","file":"semantic-table-row-selection-e3320508d5a74a5995b6.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Set } from 'immutable';\nimport { assign } from 'lodash';\nimport { Component } from 'react';\nimport * as D from 'react-dom-factories';\nimport * as PropTypes from 'prop-types';\n\n/**\n * Component that selects row in the table. Can be placed anywhere as a row child.\n */\nclass SemanticTableSelectionComponent extends Component<{ rowData: any }, {}> {\n  static contextTypes = {\n    semanticTableEvents: PropTypes.any.isRequired,\n    semanticTableRowData: PropTypes.any.isRequired,\n    semanticTableSelected: PropTypes.any.isRequired,\n  };\n\n  context: {\n    semanticTableEvents: any;\n    semanticTableRowData: any;\n    semanticTableSelected: Set<any>;\n  };\n\n  render() {\n    const selected = this.context.semanticTableSelected.has(this.context.semanticTableRowData);\n\n    return D.input(\n      assign(\n        {\n          type: 'checkbox',\n          checked: selected,\n          onChange: this.toggleSelection,\n        },\n        this.props\n      )\n    );\n  }\n\n  private toggleSelection = () => {\n    this.context.semanticTableEvents.toggleRowSelection(this.context.semanticTableRowData);\n  };\n}\n\nexport default SemanticTableSelectionComponent;\n"],"sourceRoot":""}