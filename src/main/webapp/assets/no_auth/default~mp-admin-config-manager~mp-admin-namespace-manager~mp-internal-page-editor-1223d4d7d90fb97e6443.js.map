{"version":3,"sources":["webpack:///./src/main/web/components/admin/config-manager/StorageSelector.tsx"],"names":["render","allApps","sourceApps","targetApp","onChange","overrideChain","i","length","isLast","appId","push","key","className","styles","effectiveApp","overriddenApp","classnames","overrideArrow","component","this","props","renderWarning","mainPart","labeledControl","selector","clearable","value","options","map","status","label","writable","disabled","newValue","Array","isArray","overrideOrder","indexOf","Alert","warning","alert","AlertType","WARNING","message","Component","StorageSelector","chooseDefaultTargetApp","storageStatus","sourceAppId","foundApp","find","s","firstWritable","undefined"],"mappings":"6IAkBA,OACA,OAEA,UAEA,QAEA,SAEA,UAeA,yC,+CAwEA,OAxEqC,+BACnC,0BAAAA,OAAA,WAIE,IAHM,iBAAEC,EAAA,EAAAA,QAASC,EAAA,EAAAA,WAAYC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAElCC,EAA+B,GAC5BC,EAAI,EAAGA,EAAIJ,EAAWK,OAAQD,IAAK,CAC1C,IAAME,EAASF,IAAMJ,EAAWK,OAAS,EACnCE,EAAQP,EAAWI,GACzBD,EAAcK,KACZ,wBAAMC,IAAK,OAAOL,EAAKM,UAAWJ,EAASK,EAAOC,aAAeD,EAAOE,eACrEN,IAGAD,GACHH,EAAcK,KACZ,wBAAMC,IAAK,SAASL,EAAKM,UAAWI,EAAWH,EAAOI,cAAe,wBAK3E,OACE,uBAAKL,UAAWI,EAAWH,EAAOK,UAAWC,KAAKC,MAAMR,YACrDO,KAAKE,gBACN,uBAAKT,UAAWC,EAAOS,UACK,IAAzBjB,EAAcE,OAAe,KAC5B,uBAAKK,UAAWC,EAAOU,gBACrB,+CACA,uBAAKX,UAAWC,EAAOR,eAAgBA,IAG3C,uBAAKO,UAAWC,EAAOU,gBACrB,4CACA,gBAAC,UAAW,CACVX,UAAWC,EAAOW,SAClBC,WAAW,EACXC,MAAOvB,EACPwB,QAAS1B,EAAQ2B,KACf,SAACC,GAA2B,OAC1BH,MAAOG,EAAOpB,MACdqB,MAAOD,EAAOE,SAAWF,EAAOpB,MAAWoB,EAAOpB,MAAK,cACvDuB,UAAWH,EAAOE,aAGtB3B,SAAU,SAAC6B,GACLC,MAAMC,QAAQF,IAAuC,iBAAnBA,EAASP,OAG/CtB,EAAS6B,EAASP,cASxB,0BAAAL,cAAR,WACQ,iBAAEpB,EAAA,EAAAA,QAASC,EAAA,EAAAA,WAAYC,EAAA,EAAAA,UAAW,EAAAC,SACxC,GAA0B,IAAtBF,EAAWK,OACb,OAAO,KAET,IAAM6B,EAAgBnC,EAAQ2B,KAAI,SAACC,GAAW,OAAAA,EAAOpB,SAC/CK,EAAeZ,EAAWA,EAAWK,OAAS,GACpD,OAAI6B,EAAcC,QAAQlC,GAAaiC,EAAcC,QAAQvB,GAEzD,gBAAC,EAAAwB,MAAK,CAAC1B,UAAWC,EAAO0B,QAASC,MAAO,EAAAC,UAAUC,QAASC,QAAS,I,8BACxC,wBAAM/B,UAAWC,EAAOC,cAAeX,G,2CAC/C,wBAAMS,UAAWC,EAAOC,cAAeA,G,UAJhE,GASJ,gBAxEA,CAAqC,EAAA8B,WAAxB,EAAAC,kBA0Eb,kCAAgBC,uBACdC,EACAC,GAEA,GAA6B,IAAzBD,EAAcxC,OAAlB,CAIA,IAAM0C,EAAWD,EACbD,EAAcG,MAAK,SAACC,GAAM,OAAAA,EAAE1C,QAAUuC,KACtCD,EAAcG,MAAK,SAACC,GAAM,MAAY,YAAZA,EAAE1C,SAEhC,GAAIwC,GAAYA,EAASlB,SACvB,OAAOkB,EAASxC,MAGlB,IAAM2C,EAAgBL,EAAcG,MAAK,SAACC,GAAM,OAAAA,EAAEpB,YAClD,OAAOqB,EAAgBA,EAAc3C,WAAQ4C","file":"default~mp-admin-config-manager~mp-admin-namespace-manager~mp-internal-page-editor-1223d4d7d90fb97e6443.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as classnames from 'classnames';\nimport * as React from 'react';\nimport { CSSProperties } from 'react';\nimport ReactSelect, { Option } from 'react-select';\n\nimport { Component } from 'platform/api/components';\n\nimport { Alert, AlertType } from 'platform/components/ui/alert';\n\nimport * as styles from './StorageSelector.scss';\n\nexport interface StorageSelectorProps {\n  className?: string;\n  allApps: ReadonlyArray<AppStatus>;\n  sourceApps: ReadonlyArray<string>;\n  targetApp: string;\n  onChange: (targetApp: string) => void;\n}\n\nexport interface AppStatus {\n  readonly appId: string;\n  readonly writable: boolean;\n}\n\nexport class StorageSelector extends Component<StorageSelectorProps, {}> {\n  render() {\n    const { allApps, sourceApps, targetApp, onChange } = this.props;\n\n    const overrideChain: JSX.Element[] = [];\n    for (let i = 0; i < sourceApps.length; i++) {\n      const isLast = i === sourceApps.length - 1;\n      const appId = sourceApps[i];\n      overrideChain.push(\n        <span key={`app-${i}`} className={isLast ? styles.effectiveApp : styles.overriddenApp}>\n          {appId}\n        </span>\n      );\n      if (!isLast) {\n        overrideChain.push(\n          <span key={`arrow-${i}`} className={classnames(styles.overrideArrow, 'fa fa-arrow-right')} />\n        );\n      }\n    }\n\n    return (\n      <div className={classnames(styles.component, this.props.className)}>\n        {this.renderWarning()}\n        <div className={styles.mainPart}>\n          {overrideChain.length === 0 ? null : (\n            <div className={styles.labeledControl}>\n              <span>App overrides:&nbsp;</span>\n              <div className={styles.overrideChain}>{overrideChain}</div>\n            </div>\n          )}\n          <div className={styles.labeledControl}>\n            <span>Target App:&nbsp;</span>\n            <ReactSelect\n              className={styles.selector}\n              clearable={false}\n              value={targetApp}\n              options={allApps.map(\n                (status): Option<string> => ({\n                  value: status.appId,\n                  label: status.writable ? status.appId : `${status.appId} (readonly)`,\n                  disabled: !status.writable,\n                })\n              )}\n              onChange={(newValue) => {\n                if (Array.isArray(newValue) || typeof newValue.value !== 'string') {\n                  return;\n                }\n                onChange(newValue.value);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderWarning() {\n    const { allApps, sourceApps, targetApp, onChange } = this.props;\n    if (sourceApps.length === 0) {\n      return null;\n    }\n    const overrideOrder = allApps.map((status) => status.appId);\n    const effectiveApp = sourceApps[sourceApps.length - 1];\n    if (overrideOrder.indexOf(targetApp) < overrideOrder.indexOf(effectiveApp)) {\n      return (\n        <Alert className={styles.warning} alert={AlertType.WARNING} message={''}>\n          Note: data from target app <span className={styles.effectiveApp}>{targetApp}</span> will be shadowed by\n          existing data from <span className={styles.effectiveApp}>{effectiveApp}</span>.\n        </Alert>\n      );\n    }\n  }\n}\n\nexport function chooseDefaultTargetApp(\n  storageStatus: ReadonlyArray<AppStatus>,\n  sourceAppId?: string | null\n): string | undefined {\n  if (storageStatus.length === 0) {\n    return undefined;\n  }\n\n  const foundApp = sourceAppId\n    ? storageStatus.find((s) => s.appId === sourceAppId)\n    : storageStatus.find((s) => s.appId === 'runtime');\n\n  if (foundApp && foundApp.writable) {\n    return foundApp.appId;\n  }\n\n  const firstWritable = storageStatus.find((s) => s.writable);\n  return firstWritable ? firstWritable.appId : undefined;\n}\n"],"sourceRoot":""}