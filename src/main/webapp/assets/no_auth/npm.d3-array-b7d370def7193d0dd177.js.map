{"version":3,"sources":["webpack:///./node_modules/d3-array/src/index.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js"],"names":["a","b","NaN","ascendingBisect","bisectRight","right","bisectLeft","left","x","e10","Math","sqrt","e5","e2","tickIncrement","start","stop","count","step","max","power","floor","log","LN10","error","pow","tickStep","step0","abs","step1","reverse","n","ticks","i","isFinite","ceil","Array","valueof","values","length","p","i0","value0","compare","ascendingComparator","f","d","lo","hi","mid","pair","array","pairs","v","value","delta","m","mean","sum","isNaN","min","arguments","range","LN2","matrix","transpose","j","row","i1","n0","values0","n1","values1","reduce","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","call","prototype","slice","map","sort","numbers","merged","arrays","indexes","permutes","xi","xj","t","random"],"mappings":"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","file":"npm.d3-array-b7d370def7193d0dd177.js","sourcesContent":["export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n"],"sourceRoot":""}