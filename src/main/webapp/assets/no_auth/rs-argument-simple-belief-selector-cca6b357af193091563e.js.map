{"version":3,"sources":["webpack:///./src/main/web/components/arguments/Belief.tsx"],"names":["props","context","onBeliefChange","e","value","target","setState","prevState","newBelief","_","clone","belief","state","getBeliefValue","forValue","isCanonical","componentWillReceiveProps","nextProps","this","componentDidUpdate","prevProps","changeBelief","render","id","targetValue","ButtonGroup","bsSize","className","styles","radioButton","agree","type","name","SimpleBeliefValue","Agree","defaultChecked","onChange","disagree","Disagree","contextTypes","ArgumentsContextTypes","React","Component","Belief"],"mappings":"6IAkBA,OACA,QACA,QAEA,UAEA,UAWA,cAIE,gBAAYA,EAAoBC,GAAhC,MACE,YAAMD,EAAOC,IAAQ,K,OAmDf,EAAAC,eAAiB,SAACC,GACxB,IAAMC,EAASD,EAAEE,OAA4BD,MAC7C,EAAKE,UACH,SAACC,GACC,IAAMC,EAAYC,EAAEC,MAAMH,EAAUI,QAEpC,OADAH,EAAUG,OAAOP,MAAQA,EAClB,CAAEO,OAAQH,OAxDrB,EAAKI,MAAQ,CACXD,OAAQV,EAAQY,eAAeb,EAAMc,SAAUd,EAAMe,c,EA2D3D,OAlE4B,sBAW1B,iBAAAC,0BAAA,SAA0BC,EAAwBhB,GAC1C,iBAAEa,EAAA,EAAAA,SAAUC,EAAA,EAAAA,YACdD,IAAaG,EAAUH,UAAYC,IAAgBE,EAAUF,aAC/DG,KAAKZ,SAAS,CACZK,OAAQV,EAAQY,eAAeI,EAAUH,SAAUG,EAAUF,gBAKnE,iBAAAI,mBAAA,SAAmBC,EAAwBb,GACjC,IAAAI,EAAA,WAAAA,OACJA,IAAWJ,EAAUI,QACvBO,KAAKjB,QAAQoB,aAAaV,IAI9B,iBAAAW,OAAA,WACU,IAAAX,EAAA,WAAAA,OACFY,EAAK,oBAAoBZ,EAAOa,YACtC,OACE,gBAAC,EAAAC,YAAW,CAACC,OAAO,MAClB,yBAAOC,UAAW,mBAAmBC,EAAOC,YAAW,IAAID,EAAOE,OAChE,yBACEC,KAAK,QACLC,KAAMT,EACNnB,MAAO,EAAA6B,kBAAkBC,MACzBC,eAAgBxB,EAAOA,OAAOP,QAAU,EAAA6B,kBAAkBC,MAC1DE,SAAUlB,KAAKhB,iBAEjB,oCAEF,yBAAOyB,UAAW,mBAAmBC,EAAOC,YAAW,IAAID,EAAOS,UAChE,yBACEN,KAAK,QACLC,KAAMT,EACNnB,MAAO,EAAA6B,kBAAkBK,SACzBH,eAAgBxB,EAAOA,OAAOP,QAAU,EAAA6B,kBAAkBK,SAC1DF,SAAUlB,KAAKhB,iBAEjB,qCAjDD,OAAAqC,aAAe,EAAAC,sBAiExB,OAlEA,CAA4BC,EAAMC,WAArB,EAAAC,SAoEb,UAAeA","file":"rs-argument-simple-belief-selector-cca6b357af193091563e.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { ButtonGroup } from 'react-bootstrap';\n\nimport { ArgumentsContext, ArgumentsContextTypes, AssertedBelief, SimpleBeliefValue } from './ArgumentsApi';\n\nimport * as styles from './Belief.scss';\n\nexport interface BeliefProps {\n  forValue: string;\n  isCanonical: boolean;\n}\n\ninterface State {\n  belief: AssertedBelief;\n}\n\nexport class Belief extends React.Component<BeliefProps, State> {\n  static contextTypes = ArgumentsContextTypes;\n  context: ArgumentsContext;\n\n  constructor(props: BeliefProps, context: ArgumentsContext) {\n    super(props, context);\n    this.state = {\n      belief: context.getBeliefValue(props.forValue, props.isCanonical),\n    };\n  }\n\n  componentWillReceiveProps(nextProps: BeliefProps, context: ArgumentsContext) {\n    const { forValue, isCanonical } = this.props;\n    if (forValue !== nextProps.forValue || isCanonical !== nextProps.isCanonical) {\n      this.setState({\n        belief: context.getBeliefValue(nextProps.forValue, nextProps.isCanonical),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: BeliefProps, prevState: State) {\n    const { belief } = this.state;\n    if (belief !== prevState.belief) {\n      this.context.changeBelief(belief);\n    }\n  }\n\n  render() {\n    const { belief } = this.state;\n    const id = `belief-selection-${belief.targetValue}`;\n    return (\n      <ButtonGroup bsSize=\"xs\">\n        <label className={`btn btn-default ${styles.radioButton} ${styles.agree}`}>\n          <input\n            type=\"radio\"\n            name={id}\n            value={SimpleBeliefValue.Agree}\n            defaultChecked={belief.belief.value === SimpleBeliefValue.Agree}\n            onChange={this.onBeliefChange}\n          />\n          <span>YES</span>\n        </label>\n        <label className={`btn btn-default ${styles.radioButton} ${styles.disagree}`}>\n          <input\n            type=\"radio\"\n            name={id}\n            value={SimpleBeliefValue.Disagree}\n            defaultChecked={belief.belief.value === SimpleBeliefValue.Disagree}\n            onChange={this.onBeliefChange}\n          />\n          <span>NO</span>\n        </label>\n      </ButtonGroup>\n    );\n  }\n\n  private onBeliefChange = (e: React.FormEvent<HTMLInputElement>) => {\n    const value = (e.target as HTMLInputElement).value as SimpleBeliefValue;\n    this.setState(\n      (prevState: State): State => {\n        const newBelief = _.clone(prevState.belief);\n        newBelief.belief.value = value;\n        return { belief: newBelief };\n      }\n    );\n  };\n}\n\nexport default Belief;\n"],"sourceRoot":""}