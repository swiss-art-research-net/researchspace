{"version":3,"sources":["webpack:///./src/main/web/components/search/query-builder/SearchEvents.ts"],"names":["event","EventMaker","CategoryOrRelationSelected","SearchTreeInputSelected","SearchAndConjunctSelected","SearchOrDisjunctSelected","SearchSelectDateFormatOpened","SearchDateFormatSelected","SearchDateFormatSubmitted","SearchFilterToggled","SearchFacetCategorySelected","SearchFacetPropertySelected"],"mappings":"iIAkBA,IA4CMA,EA5CN,OA4C2CC,WAE9B,EAAAC,2BAA6BF,EAAM,qCACnC,EAAAG,wBAA0BH,EAAM,4BAChC,EAAAI,0BAA4BJ,EAAM,8BAClC,EAAAK,yBAA2BL,EAAM,6BACjC,EAAAM,6BAA+BN,EAAM,iCACrC,EAAAO,yBAA2BP,EAAM,6BACjC,EAAAQ,0BAA4BR,EAAM,8BAClC,EAAAS,oBAAsBT,EAAM,wBAC5B,EAAAU,4BAA8BV,EAAM,gCACpC,EAAAW,4BAA8BX,EAAM","file":"default~semantic-search-facet~semantic-search-query-builder-64a5b8e9fcd6de45b59a.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { EventMaker } from 'platform/api/events';\n\nexport interface SearchEventData {\n  /**\n   * Event which should be triggered when domain or range or predicate is selected.\n   */\n  'Search.CategoryOrRelationSelected': string;\n  /**\n   * Event which should be triggered when tree selector selection is submitted.\n   */\n  'Search.TreeInputSelected': string;\n  /**\n   * Event which should be triggered when AND conjunction is clicked.\n   */\n  'Search.AndConjunctSelected': void;\n  /**\n   * Event which should be triggered when AND conjunction is clicked.\n   */\n  'Search.OrDisjunctSelected': void;\n  /**\n   * Event which should be triggered when date format dropdown is selected.\n   */\n  'Search.SelectDateFormatOpened': void;\n  /**\n   * Event which should be triggered when date format is selected.\n   */\n  'Search.DateFormatSelected': string;\n  /**\n   * Event which should be triggered when date format is submitted.\n   */\n  'Search.DateFormatSubmitted': void;\n  /**\n   * Event which should be triggered when facets are toggled.\n   */\n  'Search.FilterToggled': void;\n  /**\n   * Event which should be triggered when a facet category is selected.\n   */\n  'Search.FacetCategorySelected': string;\n  /**\n   * Event which should be triggered when a facet property is selected.\n   */\n  'Search.FacetPropertySelected': string;\n}\nconst event: EventMaker<SearchEventData> = EventMaker;\n\nexport const CategoryOrRelationSelected = event('Search.CategoryOrRelationSelected');\nexport const SearchTreeInputSelected = event('Search.TreeInputSelected');\nexport const SearchAndConjunctSelected = event('Search.AndConjunctSelected');\nexport const SearchOrDisjunctSelected = event('Search.OrDisjunctSelected');\nexport const SearchSelectDateFormatOpened = event('Search.SelectDateFormatOpened');\nexport const SearchDateFormatSelected = event('Search.DateFormatSelected');\nexport const SearchDateFormatSubmitted = event('Search.DateFormatSubmitted');\nexport const SearchFilterToggled = event('Search.FilterToggled');\nexport const SearchFacetCategorySelected = event('Search.FacetCategorySelected');\nexport const SearchFacetPropertySelected = event('Search.FacetPropertySelected');\n"],"sourceRoot":""}