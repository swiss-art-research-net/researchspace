{"version":3,"sources":["webpack:///./src/main/web/components/documentation/CodeHighlight.ts"],"names":["componentDidMount","codeNode","findDOMNode","this","CodeMirror","runMode","props","codeText","mode","tabSize","render","D","code","className","defaultProps","Component","CodeHighlightComponent","CodeHighlight","createFactory"],"mappings":"6IAqBA,OACA,QACA,QAEA,QACA,OACA,QACA,OACA,QACA,OACA,QACA,OACA,OACA,QACA,QACA,OACA,QAiCA,oD,+CAeA,OAf4C,sCAM1C,iCAAAA,kBAAA,WACE,IAAMC,EAAW,EAAAC,YAAYC,MAE7BC,EAAWC,QAAQF,KAAKG,MAAMC,SAAUJ,KAAKG,MAAME,KAAMP,EADzC,CAAEQ,QAAS,KAI7B,iCAAAC,OAAA,WACE,OAAOC,EAAEC,KAAK,CAAEC,UAAW,kBAZtB,uBAAAC,aAAe,CACpBP,SAAU,GACVC,KAAM,aAYV,uBAfA,CAA4C,EAAAO,WAA/B,EAAAC,yBAiBA,EAAAC,cAAgB,EAAAC,cAAcF,GAC3C,UAAe,EAAAC","file":"mp-code-highlight-e18fb0bd0ba9a27da0fa.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/// <reference types=\"codemirror/codemirror-runmode\" />\n\nimport { Component, createFactory } from 'react';\nimport * as D from 'react-dom-factories';\nimport { findDOMNode } from 'react-dom';\n\nimport * as CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport 'codemirror/addon/mode/simple';\nimport 'codemirror/addon/runmode/runmode';\nimport 'codemirror/addon/mode/multiplex';\nimport 'codemirror/mode/handlebars/handlebars';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/clike/clike';\nimport 'codemirror/mode/sparql/sparql';\nimport 'codemirror/mode/turtle/turtle';\nimport 'codemirror/mode/shell/shell';\n\nexport interface CodeHighlightProps {\n  codeText: string;\n\n  /**\n   * Supported modes:\n   * 'text/html' - HTML\n   * 'text/x-java' - Java\n   * 'text/typescript' - TypeScript\n   * 'text/javascript' - JavaScript\n   * 'application/json' - JSON\n   * 'application/ld+json' - JSON-LD\n   * 'application/sparql-query' - SPARQL\n   * 'text/turtle' - Turtle\n   * 'application/n-triples' - N-Triples\n   * 'application/n-quads' - N-Quads\n   * 'text/x-sh' - Shell/Bash\n   * 'application/xml' - XML\n   *\n   * @default text/html\n   */\n  mode?: string;\n}\n\n/**\n * Component for code highlight. In templates it is exposed as a <code> tag.\n *\n * For inline code highlight with default 'html' mode one can just use '<code>' tag:\n * @example\n *   <p>Some text <code><a>Hello World</a></code> </p>\n *\n */\nexport class CodeHighlightComponent extends Component<CodeHighlightProps, {}> {\n  static defaultProps = {\n    codeText: '',\n    mode: 'text/html',\n  };\n\n  componentDidMount() {\n    const codeNode = findDOMNode(this) as HTMLElement;\n    const options = { tabSize: 2 };\n    CodeMirror.runMode(this.props.codeText, this.props.mode, codeNode, options);\n  }\n\n  render() {\n    return D.code({ className: 'cm-s-default' });\n  }\n}\n\nexport const CodeHighlight = createFactory(CodeHighlightComponent);\nexport default CodeHighlight;\n"],"sourceRoot":""}