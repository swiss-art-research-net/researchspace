{"version":3,"sources":["webpack:///./src/main/web/app/page/PageEditor.ts","webpack:///./src/main/web/app/page/codemirror/mph-handlebars.js"],"names":["Syntax","Button","createFactory","ReactBootstrap","ButtonToolbar","ButtonGroup","LocalStorageState","BrowserPersistence","adapter","props","context","isDeleteBtnDisabled","saving","storageStatus","pageSource","appId","some","status","writable","onEditorDidMount","editor","onClickDeleteBtn","navigationListenerUnsubscribe","pageInfo","state","iri","value","revision","onHide","getOverlaySystem","hide","message","onConfirm","confirm","deletePage","show","createElement","ConfirmationDialog","PageService","deleteTemplateRevisions","observe","success","navigateToUrl","uri","error","err","setState","loading","OverlayDialog","type","title","D","div","ErrorPresenter","bsStyle","className","onClick","loadPageSource","pageSourceTask","loadTemplateSource","onError","errorCode","window","location","href","Kefir","combine","getStorageStatus","targetApp","chooseDefaultTargetApp","focus","onPageContentChange","data","navigationConfirmation","onSave","queryParams","save","targetAppId","sourceAppId","undefined","sourceRevision","rawContent","getValue","onValue","v","navigateToResource","x","onCancel","getSyntaxChoices","RadioGroup","name","selectedValue","activeSyntax","onChange","onSyntaxChange","_","reduce","radioGroupEntries","result","e","push","label","key","style","marginRight","Radio","Array","setOption","getSyntaxMode","update","syntax","mode","HTMLMIXED","base","MPHHANDLEBARS","HANDLEBARS","NONE","applicableTemplateLinks","templates","appliedTemplate","length","span","map","res","backgroundColor","ResourceLink","resource","Rdf","action","ResourceLinkAction","edit","localStorageSyntax","get","source","definedByApps","applicableTemplates","includes","componentWillUnmount","this","componentDidMount","componentWillReceiveProps","render","codeMirrorAddonOptions","foldGutter","textAreaClassName","matchTags","bothTags","matchBrackets","includeLinks","isTemplateApplied","vocabularies","rdfs","Resource","renderAppSelector","editorDidMount","options","indentWithTabs","indentUnit","tabSize","viewportMargin","Infinity","lineNumbers","lineWrapping","gutters","extraKeys","disabled","i","startsWith","indexOf","StorageSelector","CLASS_NAME","allApps","sourceApps","newTargetApp","r","Component","PageEditor","PageEditorComponent","CodeMirror","defineSimpleMode","start","regex","token","handlebars","pop","dash_comment","comment","defineMode","config","parserConfig","mphhandlebars","getMode","multiplexingMode","open","close","parseDelimiters","defineMIME","mod"],"mappings":"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","file":"mp-internal-page-editor-4a4e746ab36fa9a2d7ed.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as Kefir from 'kefir';\nimport * as _ from 'lodash';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport 'codemirror/addon/mode/simple';\nimport 'codemirror/addon/mode/multiplex';\nimport 'codemirror/mode/handlebars/handlebars';\nimport 'codemirror/mode/xml/xml';\nimport './codemirror/mph-handlebars.js';\n\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldcode';\nimport 'codemirror/addon/fold/brace-fold';\nimport 'codemirror/addon/fold/indent-fold';\nimport 'codemirror/addon/fold/xml-fold';\nimport 'codemirror/addon/edit/matchtags';\nimport 'codemirror/addon/edit/matchbrackets';\n\nimport { ReactElement, Component, createFactory, createElement } from 'react';\nimport * as D from 'react-dom-factories';\nimport { RadioGroup, Radio } from 'react-radio-group';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport * as codemirror from 'codemirror';\n\nimport { navigateToResource, navigationConfirmation, navigateToUrl } from 'platform/api/navigation';\nimport { Rdf, vocabularies } from 'platform/api/rdf';\nimport { PageService, TemplateContent, TemplateStorageStatus, RevisionInfo } from 'platform/api/services/page';\nimport { ResourceLink, ResourceLinkAction } from 'platform/api/navigation/components';\n\nimport { StorageSelector, chooseDefaultTargetApp } from 'platform/components/admin/config-manager';\nimport { getOverlaySystem, OverlayDialog } from 'platform/components/ui/overlay';\nimport { BrowserPersistence } from 'platform/components/utils';\nimport { ConfirmationDialog } from 'platform/components/ui/confirmation-dialog';\nimport * as uri from 'urijs';\n\nimport { ErrorPresenter } from 'platform/components/ui/notification';\n\nconst Button = createFactory(ReactBootstrap.Button);\nconst ButtonToolbar = createFactory(ReactBootstrap.ButtonToolbar);\nconst ButtonGroup = createFactory(ReactBootstrap.ButtonGroup);\n\ninterface PageEditorProps {\n  iri: Rdf.Iri;\n}\n\ninterface PageEditorState {\n  pageSource?: TemplateContent;\n  storageStatus?: ReadonlyArray<TemplateStorageStatus>;\n  targetApp?: string;\n  saving?: boolean;\n  activeSyntax?: Syntax;\n  loading?: boolean;\n}\n\nenum Syntax {\n  HTMLMIXED,\n  MPHHANDLEBARS,\n  HANDLEBARS,\n  NONE,\n}\n\nconst PLATFORM_TEMPLATE_EDITOR = 'mp-internal-page-editor';\nconst LocalStorageState = BrowserPersistence.adapter<{\n  readonly activeSyntax: Syntax;\n}>();\n\ninterface RadioGroupEntry {\n  type: Syntax;\n  label: string;\n}\n\nconst CLASS_NAME = 'page-editor';\n\nclass PageEditorComponent extends Component<PageEditorProps, PageEditorState> {\n  private editor: codemirror.Editor | undefined;\n\n  private navigationListenerUnsubscribe?: () => void;\n  private radioGroupEntries: RadioGroupEntry[];\n  private pageInfo: RevisionInfo[];\n\n  constructor(props: PageEditorProps, context: any) {\n    super(props, context);\n    const localStorageSyntax = LocalStorageState.get(PLATFORM_TEMPLATE_EDITOR).activeSyntax;\n    this.state = {\n      pageSource: {\n        appId: undefined,\n        revision: undefined,\n        source: '',\n        definedByApps: [],\n        applicableTemplates: [],\n        appliedTemplate: undefined,\n        includes: [],\n      },\n      storageStatus: [],\n      saving: false,\n      loading: false,\n      activeSyntax: localStorageSyntax !== undefined ? localStorageSyntax : Syntax.HTMLMIXED,\n    };\n\n    this.radioGroupEntries = [\n      {\n        type: Syntax.HTMLMIXED,\n        label: 'Mixed HTML',\n      },\n      {\n        type: Syntax.MPHHANDLEBARS,\n        label: 'Backend Templates',\n      },\n      {\n        type: Syntax.HANDLEBARS,\n        label: 'Client Templates',\n      },\n      {\n        type: Syntax.NONE,\n        label: 'None',\n      },\n    ];\n  }\n\n  public componentWillUnmount() {\n    if (this.navigationListenerUnsubscribe) {\n      this.navigationListenerUnsubscribe();\n    }\n  }\n\n  public componentDidMount() {\n    this.loadPageSource(this.props.iri.value);\n  }\n\n  public componentWillReceiveProps(props: PageEditorProps) {\n    this.loadPageSource(props.iri.value);\n  }\n\n  public render() {\n    const codeMirrorAddonOptions = {\n      foldGutter: this.state.activeSyntax !== Syntax.NONE,\n      textAreaClassName: ['form-control'],\n      matchTags: { bothTags: true },\n      matchBrackets: true,\n    };\n\n    return D.div(\n      { className: CLASS_NAME },\n      D.div({ className: 'page-breadcrumb' }),\n      D.div(\n        { className: 'page' },\n        D.div(\n          { className: 'page__body' },\n          this.includeLinks(this.state.pageSource.includes),\n          // show templates only if current page is empty\n          !this.state.pageSource.source && this.state.pageSource.source.length === 0\n            ? this.applicableTemplateLinks(\n                this.state.pageSource.applicableTemplates,\n                this.state.pageSource.appliedTemplate\n              )\n            : ButtonToolbar(\n                {},\n                ButtonGroup(\n                  {},\n                  'Applicable Templates: This resource does already have a direct ' +\n                    'corresponding page and as such no templates will be applied.'\n                )\n              ), // show message if system-wide default template is applied\n          this.isTemplateApplied(this.props.iri, this.state.pageSource)\n            ? ButtonToolbar(\n                {},\n                ButtonGroup({}, [\n                  \"None of the computed templates is used. The system's default template \",\n                  createElement(\n                    ResourceLink,\n                    {\n                      key: 'def',\n                      resource: Rdf.iri('Template:' + vocabularies.rdfs.Resource.value),\n                      style: { backgroundColor: '#FFC857' },\n                    },\n                    'Template:rdfs:Resource'\n                  ),\n                  ' has been applied.',\n                ])\n              )\n            : null,\n          this.renderAppSelector(),\n          createElement(CodeMirror, {\n            className: 'template-editor',\n            editorDidMount: this.onEditorDidMount,\n            value: this.state.pageSource.source,\n            onChange: this.onPageContentChange,\n            options: {\n              ...codeMirrorAddonOptions,\n              mode: this.getSyntaxMode(this.state.activeSyntax),\n              indentWithTabs: false,\n              indentUnit: 2,\n              tabSize: 2,\n              viewportMargin: Infinity,\n              lineNumbers: true,\n              lineWrapping: true,\n              gutters:\n                this.state.activeSyntax !== Syntax.NONE\n                  ? ['CodeMirror-linenumbers', 'CodeMirror-foldgutter']\n                  : ['CodeMirror-linenumbers'],\n              extraKeys: {\n                'Ctrl-S': () => this.onSave(),\n                'Cmd-S': () => this.onSave(),\n              },\n            },\n          }),\n          this.getSyntaxChoices(),\n          ButtonToolbar(\n            { className: 'pull-right template-cancel-save' },\n            Button(\n              {\n                bsStyle: 'default',\n                disabled: this.state.saving,\n                onClick: this.onCancel,\n              },\n              'Cancel'\n            ),\n            Button(\n              {\n                bsStyle: 'danger',\n                disabled: this.isDeleteBtnDisabled(),\n                onClick: this.onClickDeleteBtn,\n              },\n              'Delete Page'\n            ),\n            Button(\n              {\n                bsStyle: 'primary',\n                onClick: () => this.onSave(),\n                disabled: this.state.saving,\n              },\n              this.state.saving\n                ? D.span({}, 'Saving', D.i({ className: 'fa fa-cog fa-spin' }))\n                : 'Save & View'\n            ),\n            Button(\n              {\n                bsStyle: 'success',\n                onClick: () => this.onSave({ action: ResourceLinkAction[ResourceLinkAction.edit] }),\n                disabled: this.state.saving,\n              },\n              'Save'\n            )\n          )\n        )\n      )\n    );\n  }\n\n  private isDeleteBtnDisabled = () => {\n    const { saving, storageStatus, pageSource } = this.state;\n    // Disabled if the page doesn't exist or the storage is readonly\n    // i.e the appID is either null or undefined.\n    return (\n      saving ||\n      !pageSource.appId ||\n      !storageStatus.some((status) => status.appId === pageSource.appId && status.writable)\n    );\n  };\n  private onEditorDidMount = (editor: codemirror.Editor) => {\n    this.editor = editor;\n  };\n\n  private onClickDeleteBtn = () => {\n    if (this.navigationListenerUnsubscribe) {\n      this.navigationListenerUnsubscribe();\n    }\n    this.pageInfo = [\n      {\n        appId: this.state.pageSource.appId,\n        iri: this.props.iri.value,\n        revision: this.state.pageSource.revision,\n      },\n    ];\n    const dialogRef = 'deletion-confirmation';\n    const onHide = () => getOverlaySystem().hide(dialogRef);\n    const props = {\n      message: 'Do you really want to delete this template?',\n      onHide,\n      onConfirm: (confirm) => {\n        onHide();\n        if (confirm) {\n          this.deletePage();\n        }\n      },\n    };\n    getOverlaySystem().show(dialogRef, createElement(ConfirmationDialog, props));\n  };\n\n  private deletePage = () => {\n    PageService.deleteTemplateRevisions(this.pageInfo).observe({\n      value: (success) => {\n        if (success) {\n          navigateToUrl(uri('/')).observe({\n            /**/\n          });\n        }\n      },\n      error: (err) => {\n        this.setState({\n          loading: true,\n        });\n        const dialogRef = `page-saving-error`;\n\n        getOverlaySystem().show(\n          dialogRef,\n          createElement(\n            OverlayDialog,\n            {\n              onHide: () => {\n                getOverlaySystem().hide(dialogRef);\n                this.setState({ saving: false });\n              },\n              type: 'modal',\n              title: 'Error while deleting the page',\n              show: true,\n            },\n            D.div({}),\n            D.div({}, createElement(ErrorPresenter, { error: err })),\n            Button(\n              {\n                bsStyle: 'success',\n                className: 'pull-right',\n                onClick: () => {\n                  getOverlaySystem().hide(dialogRef);\n                  this.setState({ saving: false });\n                },\n              },\n              'Ok'\n            )\n          )\n        );\n      },\n    });\n  };\n\n  private isTemplateApplied(iri: Rdf.Iri, pageSource: TemplateContent) {\n    return (\n      // current resource is no template\n      !iri.value.startsWith('Template:') &&\n      // checks that the applied Template is not within the list of applicable templates\n      // which is only the case if it is the default template\n      pageSource.applicableTemplates.indexOf(pageSource.appliedTemplate) === -1 &&\n      // TODO currently this is hardcoded also in backend\n      // should be compare with config\n      pageSource.appliedTemplate === 'Template:' + vocabularies.rdfs.Resource.value\n    );\n  }\n\n  private loadPageSource = (uri) => {\n    this.setState({ loading: true });\n\n    const pageSourceTask = PageService.loadTemplateSource(uri);\n    pageSourceTask.onError((errorCode) => {\n      if (errorCode === 403) {\n        window.location.href = '/login';\n      }\n    });\n\n    Kefir.combine({\n      pageSource: pageSourceTask,\n      storageStatus: PageService.getStorageStatus(),\n    }).observe({\n      value: ({ pageSource, storageStatus }) => {\n        const targetApp = chooseDefaultTargetApp(storageStatus, pageSource.appId);\n        this.setState({ pageSource, storageStatus, targetApp, saving: false, loading: false }, () => {\n          this.editor.focus();\n        });\n      },\n    });\n  };\n\n  private onPageContentChange = (editor: codemirror.Editor, data: codemirror.EditorChange, value: string) => {\n    if (!this.navigationListenerUnsubscribe) {\n      this.navigationListenerUnsubscribe = navigationConfirmation('Changes you made to the page will not be saved.');\n    }\n  };\n\n  private onSave = (queryParams = {}) => {\n    if (this.navigationListenerUnsubscribe) {\n      this.navigationListenerUnsubscribe();\n    }\n\n    const { pageSource, targetApp } = this.state;\n    this.setState({ saving: true });\n\n    PageService.save({\n      iri: this.props.iri.value,\n      targetAppId: targetApp,\n      sourceAppId: typeof pageSource.appId === 'string' ? pageSource.appId : undefined,\n      sourceRevision: typeof pageSource.revision === 'string' ? pageSource.revision : undefined,\n      rawContent: this.editor.getValue(),\n    })\n      .onValue((v) => {\n        this.setState({ saving: false });\n        navigateToResource(this.props.iri, queryParams).onValue((x) => x);\n      })\n      .onError((error) => {\n        const dialogRef = `page-saving-error`;\n\n        getOverlaySystem().show(\n          dialogRef,\n          createElement(\n            OverlayDialog,\n            {\n              onHide: () => {\n                getOverlaySystem().hide(dialogRef);\n                this.setState({ saving: false });\n              },\n              type: 'modal',\n              title: 'Error while saving the page',\n              show: true,\n            },\n            D.div({}),\n            [\n              D.div({}, error),\n              Button(\n                {\n                  bsStyle: 'success',\n                  className: 'pull-right',\n                  onClick: () => {\n                    getOverlaySystem().hide(dialogRef);\n                    this.setState({ saving: false });\n                  },\n                },\n                'Ok'\n              ),\n            ]\n          )\n        );\n      });\n  };\n\n  private onCancel = () => {\n    navigateToResource(this.props.iri).onValue((x) => x);\n  };\n\n  private renderAppSelector() {\n    const { storageStatus, pageSource, targetApp } = this.state;\n    return createElement(StorageSelector, {\n      className: `${CLASS_NAME}__app-selector`,\n      allApps: storageStatus,\n      sourceApps: pageSource.definedByApps,\n      targetApp,\n      onChange: (newTargetApp) => this.setState({ targetApp: newTargetApp }),\n    });\n  }\n\n  private getSyntaxChoices = () => {\n    return createElement(\n      RadioGroup,\n      {\n        name: 'syntaxType',\n        selectedValue: this.state.activeSyntax,\n        onChange: this.onSyntaxChange,\n      },\n      D.div(\n        { className: 'template-types' },\n        'Syntax highlight: ',\n        _.reduce(\n          this.radioGroupEntries,\n          (result, e: RadioGroupEntry) => {\n            result.push(\n              D.label(\n                {\n                  key: e.label,\n                  style: { marginRight: '10px' },\n                },\n                createElement(Radio, { value: e.type, title: e.label }),\n                e.label\n              )\n            );\n            return result;\n          },\n          new Array<ReactElement<any>>()\n        )\n      )\n    );\n  };\n\n  private onSyntaxChange = (value: Syntax) => {\n    this.editor.setOption('mode', this.getSyntaxMode(value));\n    LocalStorageState.update(PLATFORM_TEMPLATE_EDITOR, { activeSyntax: value });\n    this.setState({\n      activeSyntax: value,\n    });\n  };\n\n  private getSyntaxMode = (syntax: Syntax): { name: string; base?: string } => {\n    let mode;\n    switch (syntax) {\n      case Syntax.HTMLMIXED:\n        mode = { name: 'mph-handlebars', base: 'text/html' };\n        break;\n      case Syntax.MPHHANDLEBARS:\n        mode = { name: 'mph-handlebars-tags' };\n        break;\n      case Syntax.HANDLEBARS:\n        mode = { name: 'handlebars' };\n        break;\n      case Syntax.NONE:\n        mode = { name: 'null' };\n        break;\n    }\n    return mode;\n  };\n\n  private applicableTemplateLinks = (templates: string[], appliedTemplate: string): ReactElement<any> => {\n    if (templates.length === 0) {\n      return D.span({});\n    } else {\n      return ButtonToolbar(\n        {},\n        ButtonGroup({}, 'Applicable Templates:'),\n        ..._.map(templates, (res) => {\n          const props =\n            appliedTemplate === res\n              ? {\n                  style: { backgroundColor: '#FFC857' },\n                  title: 'This template will currently be applied.',\n                }\n              : {};\n          return ButtonGroup(\n            props,\n            createElement(\n              ResourceLink,\n              {\n                resource: Rdf.iri(res),\n                action: ResourceLinkAction.edit,\n              },\n              res\n            )\n          );\n        })\n      );\n    }\n  };\n\n  private includeLinks(includes: string[]): ReactElement<any> {\n    if (includes.length === 0) {\n      return null;\n    } else {\n      return ButtonToolbar(\n        {},\n        ButtonGroup({}, 'Includes:'),\n        ..._.map(includes, (r) =>\n          ButtonGroup(\n            {},\n            createElement(\n              ResourceLink,\n              {\n                resource: Rdf.iri(r['@id']),\n                action: ResourceLinkAction.edit,\n              },\n              r['@id']\n            )\n          )\n        )\n      );\n    }\n  }\n}\n\nexport const PageEditor = createFactory(PageEditorComponent);\nexport default PageEditorComponent;\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"codemirror/lib/codemirror\"), require(\"codemirror/addon/mode/simple\"), require(\"codemirror/addon/mode/multiplex\"), require(\"codemirror/mode/sparql/sparql\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"codemirror/lib/codemirror\", \"codemirror/addon/mode/simple\", \"codemirror/addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"mph-handlebars-tags\", {\n    start: [\n      { regex: /\\[\\[!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\[\\[!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\[\\[/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars: [\n      { regex: /\\]\\]/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\]|\\\\.)*?\"/, token: \"string\" },\n      { regex: /'(?:[^\\\\]|\\\\.)*?'/, token: \"string\" },\n\n      // mph-handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\]\\]/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\]\\]/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ]\n  });\n\n  CodeMirror.defineMode(\"mph-handlebars\", function(config, parserConfig) {\n     var mphhandlebars = CodeMirror.getMode(config, \"mph-handlebars-tags\");\n     if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.multiplexingMode(\n        CodeMirror.getMode(config, parserConfig.base),\n        {open: \"[[\", close: \"]]\", mode: mphhandlebars, parseDelimiters: true}\n      ),\n      {open: \"query='\", close: \"'\", mode: CodeMirror.getMode(config, \"application/sparql-query\")}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n"],"sourceRoot":""}