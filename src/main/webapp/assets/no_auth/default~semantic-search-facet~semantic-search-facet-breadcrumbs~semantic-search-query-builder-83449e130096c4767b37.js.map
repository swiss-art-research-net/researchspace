{"version":3,"sources":["webpack:///./src/main/web/components/search/date/YearInput.tsx"],"names":["props","context","booleanToValidState","isValid","isValidYear","year","_","isNaN","parseInt","onYearChange","event","yearText","target","value","setState","isYearValid","onEpochChange","eventValue","state","epoch","undefined","componentWillReceiveProps","nextProps","this","isEqual","componentWillUpdate","nextState","newValue","onChange","render","className","classNames","styles","holder","FormGroup","validationState","FormControl","autoFocus","type","min","placeholder","required","componentClass","React","PureComponent","YearInput"],"mappings":"6IAsBA,OACA,OACA,QACA,QAGA,UAoBA,cACE,mBAAYA,EAAOC,GAAnB,MACE,YAAMD,EAAOC,IAAQ,KAuBf,EAAAC,oBAAsB,SAACC,GAAqB,OAACA,EAAU,UAAY,SAEnE,EAAAC,YAAc,SAACC,GAA0B,OAACC,EAAEC,MAAMC,SAASH,KAE3D,EAAAI,aAAe,SAACC,GACtB,IAAMC,EAAYD,EAAME,OAAeC,MACvC,EAAKC,SAAS,CACZT,KAAMM,EACNI,YAAa,EAAKb,oBAAoB,EAAKE,YAAYO,OAInD,EAAAK,cAAgB,SAACN,GACvB,IAAMO,EAAcP,EAAME,OAAeC,MACzC,EAAKC,UAAS,SAACI,GAAU,OACvBC,MAAOF,EACPF,YAAa,EAAKb,oBAAoB,EAAKE,YAAYc,EAAMb,YAtC/D,IAAMU,EAAc,EAAKf,MAAMe,Y,OAC/B,EAAKG,MAAQ,CACXb,KAAML,EAAMa,MAAQ,GAAKb,EAAMa,MAAMR,KAAO,GAC5CU,YAAaA,EAAc,EAAKb,oBAAoBa,QAAeK,EACnED,MAAOnB,EAAMa,MAAQb,EAAMa,MAAMM,MAV5B,M,EAyFX,OAtF+B,yBAW7B,oBAAAE,0BAAA,SAA0BC,IAEtBA,EAAUT,QACVU,KAAKL,MAAMb,MACTC,EAAEkB,QAAQD,KAAKL,MAAMb,KAAMiB,EAAUT,MAAMR,OAASC,EAAEkB,QAAQD,KAAKL,MAAMC,MAAOG,EAAUT,MAAMM,QAElGI,KAAKT,SAAS,CACZT,KAAM,GAAKiB,EAAUT,MAAMR,KAC3Bc,MAAOG,EAAUT,MAAMM,MACvBJ,YAAaQ,KAAKrB,oBAAoBoB,EAAUP,gBAyBtD,oBAAAU,oBAAA,SAAoBH,EAAWI,GAC7B,GAA8B,YAA1BA,EAAUX,YAA2B,CAC/B,IAAAV,EAAA,EAAAA,KAAMc,EAAA,EAAAA,MACRQ,EAAW,CAAEtB,KAAMG,SAASH,GAAOc,MAAOA,GAC3Cb,EAAEkB,QAAQF,EAAUT,MAAOc,IAC9BJ,KAAKvB,MAAM4B,SAASD,KAK1B,oBAAAE,OAAA,WACE,OACE,uBAAKC,UAAWC,EAAWC,EAAOC,OAAQV,KAAKvB,MAAM8B,YACnD,gBAAC,EAAAI,UAAS,CAACC,gBAAiBZ,KAAKL,MAAMH,aACrC,gBAAC,EAAAqB,YAAW,CACVN,UAAWE,EAAO3B,KAClBQ,MAAOU,KAAKL,MAAMb,KAClBgC,UAAWd,KAAKvB,MAAMqC,UACtBT,SAAUL,KAAKd,aACf6B,KAAK,SACLC,IAAI,IACJC,YAAY,OACZC,UAAU,KAGd,gBAAC,EAAAP,UAAS,CAACC,gBAAiBZ,KAAKL,MAAMH,aACrC,gBAAC,EAAAqB,YAAW,CACVN,UAAWE,EAAOb,MAClBN,MAAOU,KAAKL,MAAMC,MAClBS,SAAUL,KAAKP,cACf0B,eAAe,SACfF,YAAY,QACZC,UAAU,GAEV,0BAAQ5B,MAlFT,YAmFC,0BAAQA,MAlFT,gBAwFX,UAtFA,CAA+B8B,EAAMC,eAAxB,EAAAC,YAwFb,UAAeA","file":"default~semantic-search-facet~semantic-search-facet-breadcrumbs~semantic-search-query-builder-83449e130096c4767b37.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2015-2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @author Artem Kozlov <ak@metaphacts.com>\n */\n\nimport * as React from 'react';\nimport * as classNames from 'classnames';\nimport * as _ from 'lodash';\nimport { FormControl, FormGroup } from 'react-bootstrap';\n\nimport { YearValue } from 'platform/components/semantic/search/data/search/Model';\nimport * as styles from './YearInput.scss';\n\nexport interface YearInputProps extends React.Props<YearInput> {\n  className?: string;\n  value?: YearValue;\n  isYearValid?: boolean;\n  autoFocus?: boolean;\n  onChange: (newValue: YearValue) => void;\n}\n\ninterface State {\n  year?: string;\n  isYearValid?: 'success' | 'warning' | 'error';\n  epoch?: Epoch;\n}\n\nexport type Epoch = 'AD' | 'BC';\nconst AD = 'AD';\nconst BC = 'BC';\n\nexport class YearInput extends React.PureComponent<YearInputProps, State> {\n  constructor(props, context) {\n    super(props, context);\n    const isYearValid = this.props.isYearValid;\n    this.state = {\n      year: props.value ? '' + props.value.year : '',\n      isYearValid: isYearValid ? this.booleanToValidState(isYearValid) : undefined,\n      epoch: props.value ? props.value.epoch : AD,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.value &&\n      this.state.year &&\n      !(_.isEqual(this.state.year, nextProps.value.year) && _.isEqual(this.state.epoch, nextProps.value.epoch))\n    ) {\n      this.setState({\n        year: '' + nextProps.value.year,\n        epoch: nextProps.value.epoch,\n        isYearValid: this.booleanToValidState(nextProps.isYearValid),\n      });\n    }\n  }\n\n  private booleanToValidState = (isValid: boolean) => (isValid ? 'success' : 'error');\n\n  private isValidYear = (year: string): boolean => !_.isNaN(parseInt(year));\n\n  private onYearChange = (event) => {\n    const yearText = (event.target as any).value;\n    this.setState({\n      year: yearText,\n      isYearValid: this.booleanToValidState(this.isValidYear(yearText)),\n    });\n  };\n\n  private onEpochChange = (event) => {\n    const eventValue = (event.target as any).value;\n    this.setState((state) => ({\n      epoch: eventValue,\n      isYearValid: this.booleanToValidState(this.isValidYear(state.year)),\n    }));\n  };\n\n  componentWillUpdate(nextProps, nextState: State) {\n    if (nextState.isYearValid === 'success') {\n      const { year, epoch } = nextState;\n      const newValue = { year: parseInt(year), epoch: epoch };\n      if (!_.isEqual(nextProps.value, newValue)) {\n        this.props.onChange(newValue);\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className={classNames(styles.holder, this.props.className)}>\n        <FormGroup validationState={this.state.isYearValid}>\n          <FormControl\n            className={styles.year}\n            value={this.state.year}\n            autoFocus={this.props.autoFocus}\n            onChange={this.onYearChange}\n            type=\"number\"\n            min=\"0\"\n            placeholder=\"YYYY\"\n            required={true}\n          />\n        </FormGroup>\n        <FormGroup validationState={this.state.isYearValid}>\n          <FormControl\n            className={styles.epoch}\n            value={this.state.epoch}\n            onChange={this.onEpochChange}\n            componentClass=\"select\"\n            placeholder=\"AD/BC\"\n            required={true}\n          >\n            <option value={AD}>{AD}</option>\n            <option value={BC}>{BC}</option>\n          </FormControl>\n        </FormGroup>\n      </div>\n    );\n  }\n}\n\nexport default YearInput;\n"],"sourceRoot":""}