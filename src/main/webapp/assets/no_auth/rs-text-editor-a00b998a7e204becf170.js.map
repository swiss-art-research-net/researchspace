{"version":3,"sources":["webpack:///./src/main/web/components/text-editor/TextEditor.tsx","webpack:///./src/main/web/components/text-editor/EditorSchema.ts","webpack:///./src/main/web/components/text-editor/Serializer.ts","webpack:///./src/main/web/components/text-editor/Toolbar.tsx","webpack:///./src/main/web/components/text-editor/ExternalLink.tsx","webpack:///./src/main/web/components/text-editor/InternalLink.tsx","webpack:///./src/main/web/components/text-editor/ResourceBlock.tsx"],"names":["plugins","queries","isEmptyFirstParagraph","editor","node","value","document","nodes","size","type","Block","empty","text","placeholder","when","props","context","cancellation","Cancellation","templateSelection","derive","state","Slate","Value","fromJS","object","title","anchorBlock","availableTemplates","loading","saving","onChange","setState","getTypes","iri","SparqlClient","select","map","res","results","bindings","b","findTemplatesForResource","types","resourceTemplates","filter","c","_","find","t","onResourceDrop","drop","editorRef","current","moveToRangeOfNode","setBlocks","embed","data","attributes","src","deriveAndCancel","observe","configs","defaultTemplate","first","RESOURCE_MIME_TYPE","template","id","emptyBlock","readonly","children","DropArea","shouldReactToDrag","documentIri","dropMessage","onDrop","renderTextBlock","tag","get","React","createElement","renderBlock","next","ResourceBlock","p","h1","h2","h3","ol","ul","li","Inline","externalLink","ExternalLink","internalLink","InternalLink","renderMark","_editor","MARK","strong","em","u","s","onKeyDown","event","selection","isCollapsed","endBlock","unwrapBlock","DEFAULT_BLOCK","start","isAtEndOfNode","insertBlock","preventDefault","end","isInNode","last","moveToEndOfBlock","moveToStartOfNextBlock","onFocus","onDocumentLoad","payload","htmlTitle","fileName","content","rules","SLATE_RULES","defaultBlock","parseHtml","html","parsed","DOMParser","parseFromString","body","deserialize","toJSON","embeds","n","reduce","obj","Rdf","isEmpty","Kefir","combine","onValue","templates","onDocumentSave","wrapInHtml","serialize","blob","Blob","replace","file","File","parsedResouercQuery","SparqlUtil","parseQuery","resourceQuery","serializeQuery","setBindings","literal","getFileManager","uploadFileAsResource","storage","generateIriQuery","contextUri","fileNameHack","resource","error","console","log","createRef","componentDidMount","this","fetchDocument","componentDidUpdate","topAnchor","getFurthestBlock","key","componentWillUnmount","cancelAll","render","Spinner","spinnerDelay","className","styles","narrativeHolder","Toolbar","options","sidebarAndEditorHolder","titleHolder","Draggable","draggableGripper","FormGroup","bsClass","titleInput","FormControl","readOnly","target","editorContainer","Editor","ref","spellCheck","renderNode","schema","repository","FileManager","getFileResource","flatMap","fileUrl","getFileUrl","requestAsProperty","http","accept","response","toProperty","defaultProps","Component","TextEditor","TextAlignment","left","right","center","justify","isTextBlock","block","match","values","min","normalize","code","index","create","insertNodeByKey","inlines","blocks","isVoid","setNodeByKey","getAttributesAsReactProps","el","i","length","attr","item","parsedPropValue","name","ModuleRegistry","parseReactStyleFromCss","nodeType","Node","ELEMENT_NODE","tagName","toLowerCase","childNodes","BLOCK_TO_ICON","BLOCK_TO_LABEL","TEXT_ALIGNMENT_TO_ICON","MARK_TO_ICON","isTextSelectionActionDisabled","onMarkClick","markType","toggleMark","markButton","isActive","hasMark","Button","active","disabled","onMouseDown","activeMarks","some","mark","alignTextButton","alignment","hasAlignment","onAlignClick","style","textAlign","whiteSpace","undefined","modifiedBlock","setIn","externalLinkButton","onExternalLinkClick","linkText","Text","insertInline","List","of","wrapInline","internalLinkButton","onInternalLinkClick","onResourceTemplateSelected","templateId","ButtonToolbar","toolbar","ButtonGroup","bsStyle","onClick","ResourceDropdown","onSelect","BlockDropdown","sidebar","actionButton","selectedTemplate","MenuItem","eventKey","dropdownMenuItem","label","o","Dropdown","pullRight","Toggle","Menu","hasBlock","onBlockButtonClick","blockType","isList","isTheSameType","wrapBlock","moveToEndOfText","focus","actionDescription","actionIcon","iconClassName","prefix","dropdownMenuItemIcon","bsSize","sidebarDropdown","divider","PureComponent","ActionDropdown","onHrefSaved","href","moveToStartOfNode","setInlines","edit","onUnlink","unwrapInline","onOverlayShown","findDOMNode","inputRef","onEdit","getPopoverTarget","aRef","popoverRef","isLinkSelected","contains","dataAttributes","isNoHref","isShowPopover","position","Overlay","container","placement","show","onEntered","Popover","contentEditable","linkPopover","e","externalLinkHolder","alwaysVisible","ResourceLinkComponent","getProps","getTemplateConfig","onTemplateRendered","config","resizable","resizeObserver","disconnect","MutationObserver","_mutationsList","_observer","height","offsetHeight","width","offsetWidth","attributeFilter","defaults","resize","overflow","flex","isSelected","classNames","resourceBlock","resourceBlockActive","padding","TemplateItem","componentProps","source","Well"],"mappings":"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","file":"rs-text-editor-a00b998a7e204becf170.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as _ from 'lodash';\nimport * as Kefir from 'kefir';\nimport { Editor, RenderMarkProps, RenderNodeProps } from 'slate-react';\nimport { FormControl, FormGroup } from 'react-bootstrap';\nimport PlaceholderPlugin from 'slate-react-placeholder';\nimport * as Slate from 'slate';\nimport isHotkey from 'is-hotkey';\nimport Html from 'slate-html-serializer';\nimport * as React from 'react';\n\nimport { Rdf } from 'platform/api/rdf';\nimport * as http from 'platform/api/http';\nimport { SparqlUtil } from 'platform/api/sparql';\n\nimport { SparqlClient } from 'platform/api/sparql';\nimport { Cancellation, requestAsProperty } from 'platform/api/async';\nimport { FileManager } from 'platform/api/services/file-manager';\n\nimport { Component } from 'platform/api/components';\nimport { DropArea } from 'platform/components/dnd/DropArea';\nimport { Draggable } from 'platform/components/dnd';\nimport { Spinner } from 'platform/components/ui/spinner';\n\nimport { MARK, Block, schema, DEFAULT_BLOCK, Inline, RESOURCE_MIME_TYPE } from './EditorSchema';\nimport { ResourceTemplateConfig } from './Config';\nimport { SLATE_RULES } from './Serializer';\nimport { Toolbar } from './Toolbar';\nimport { ExternalLink } from './ExternalLink';\nimport { InternalLink } from './InternalLink';\nimport * as styles from './TextEditor.scss';\nimport { ResourceBlock } from './ResourceBlock';\n\n\ninterface TextEditorProps {\n  /**\n   * Text document IRI to load.\n   */\n  documentIri?: string;\n\n  /**\n   * @default false\n   */\n  readonly?: boolean;\n\n  /**\n   * ID of the <semantic-link iri='http://help.researchspace.org/resource/Storage'>\n   * storage</semantic-link> to load text document content.\n   */\n  storage: string;\n\n  resourceTemplates: Array<ResourceTemplateConfig>\n\n  /* file upload config */\n  /**\n   * SPARQL select query to generate a unique IRI for the file to be uploaded.\n   * The must have exactly one projection variable *?newId* with the IRI.\n   *\n   * Also the query can use some variables which will be bound with values at runtime:\n   * * __contextUri__ - see `contextUri` property\n   * * __mediaType__ - Medai type: jpg, pdf. By default = 'auto'xw\n   * * __fileName__ - Name of the file\n   */\n  generateIriQuery?: string\n\n  /**\n   * SPARQL construct query to generate additional meta-data which will be stored toghether with the file meta-data.\n   *\n   * Also the query can use some variables which will be bound with values at runtime:\n   * * __contextUri__ - see `contextUri` property\n   * * __resourceIri__ - IRI generated with `generateIdQuery`\n   * * __mediaType__ - Medai type: jpg, pdf. By default = 'auto'\n   * * __fileName__ - Name of the file\n   */\n  resourceQuery?: string\n\n}\n\ninterface TextEditorState {\n  value: Slate.Value\n  title: string\n  documentIri?: string\n  fileName?: string\n  anchorBlock?: Slate.Block\n  availableTemplates: { [objectIri: string]: ResourceTemplateConfig[] }\n  loading: boolean\n  saving: boolean\n}\n\nconst plugins = [\n  {\n    queries: {\n      isEmptyFirstParagraph: (editor: Slate.Editor, node: Slate.Block) =>\n        editor.value.document.nodes.size === 1 &&\n        node.type === Block.empty &&\n        node.text === ''\n      ,\n    },\n  },\n  PlaceholderPlugin({\n    placeholder: 'Write your narrative',\n    when: 'isEmptyFirstParagraph',\n  }),\n];\n\nexport class TextEditor extends Component<TextEditorProps, TextEditorState> {\n  private editorRef: React.RefObject<Editor>;\n  private readonly cancellation = new Cancellation();\n  private templateSelection = this.cancellation.derive();\n\n  static defaultProps: Partial<TextEditorProps> = {\n    resourceTemplates: [],\n    storage: 'runtime',\n    resourceQuery: `\n      PREFIX mp: <http://www.researchspace.org/resource/system/>\n      PREFIX crm: <http://www.cidoc-crm.org/cidoc-crm/>\n      PREFIX crmdig: <http://www.ics.forth.gr/isl/CRMdig/>\n      PREFIX rso: <http://www.researchspace.org/ontology/>\n\n      CONSTRUCT {\n        ?__resourceIri__ a crm:E33_Linguistic_Object,\n                crmdig:D1_Digital_Object,\n                rso:Semantic_Narrative.\n\n        ?__resourceIri__ mp:fileName ?__fileName__.\n        ?__resourceIri__ mp:mediaType \"text/html\".\n        ?__resourceIri__ rdfs:label ?__label__ .\n      } WHERE {}\n    `,\n    generateIriQuery: `\n      SELECT ?resourceIri WHERE {\n        BIND(URI(CONCAT(STR(?__contextUri__), \"/\", ?__fileName__)) as ?resourceIri)\n      }\n    `\n  };\n\n  state: TextEditorState = {\n    value: Slate.Value.fromJS({\n      document: {\n        nodes: [\n          {\n            object: 'block' as const,\n            type: Block.empty,\n          },\n        ],\n      }\n    }),\n    title: 'Narrative Title',\n    anchorBlock: null as Slate.Block,\n    availableTemplates: {},\n    loading: true,\n    saving: false,\n  };\n\n  constructor(props: TextEditorProps, context) {\n    super(props, context);\n    this.editorRef = React.createRef<Editor>();\n    this.state.loading = !!props.documentIri;\n    this.state.documentIri = props.documentIri;\n  }\n\n  onChange = ({ value }: { value: Slate.Value }) => {\n    this.setState({ value });\n  }\n\n  // + drag and drop\n  getTypes = (iri: Rdf.Iri) => {\n    return SparqlClient.select(\n      `SELECT DISTINCT ?type WHERE { <${iri.value}> a ?type}`\n    ).map(\n      res => res.results.bindings.map(b => b['type'])\n    );\n  }\n\n  findTemplatesForResource = (iri: Rdf.Iri) => {\n    return this.getTypes(iri).map(\n      types => this.props.resourceTemplates.filter(\n        c => c.type === 'any' || _.find(types, t => t.value === c.type)\n      )\n    );\n  }\n\n  onResourceDrop = (node: Slate.Node) => (drop: Rdf.Iri) => {\n    const editor = this.editorRef.current;\n    editor\n      .moveToRangeOfNode(node)\n      .setBlocks({\n        type: Block.embed, data: { attributes: { src: drop.value } }\n      });\n\n    this.templateSelection = this.cancellation.deriveAndCancel(this.templateSelection);\n    this.templateSelection.map(\n      this.findTemplatesForResource(drop)\n    ).observe({\n      value: configs => {\n        const { availableTemplates } = this.state;\n        availableTemplates[drop.value] = configs;\n        const defaultTemplate = _.first(configs);\n        this.setState(\n          { availableTemplates },\n          () => {\n            editor\n              .moveToRangeOfNode(node)\n              .setBlocks({\n                type: Block.embed,\n                data: {\n                  attributes: {\n                    src: drop.value, type: RESOURCE_MIME_TYPE, template: defaultTemplate.id\n                  }\n                }\n              });\n          }\n        );\n      }\n    });\n  }\n\n  // - drag and drop\n\n  emptyBlock = (props: RenderNodeProps) => {\n    return (\n      <div {...props.attributes}>\n      {\n        this.props.readonly ? props.children :\n        <DropArea\n          shouldReactToDrag={iri => iri.value !== this.props.documentIri}\n          dropMessage='Drop here to add item to the narrative.'\n          onDrop={this.onResourceDrop(props.node)}\n        >\n          {props.children}\n        </DropArea>\n      }\n      </div>\n    );\n  }\n\n  renderTextBlock = (tag: string, props: RenderNodeProps): any => {\n    const attributes = props.node.data.get('attributes', {});\n    return React.createElement(tag, { ...props.attributes, ...attributes }, props.children);\n  }\n\n  renderBlock = (props: RenderNodeProps, editor: Slate.Editor, next: () => any): any => {\n    const { node: { type }, attributes, children } = props;\n    switch (type) {\n      case Block.empty: return this.emptyBlock(props);\n      case Block.embed:\n        return <ResourceBlock {...attributes} {...props}\n          resourceTemplates={this.props.resourceTemplates} />;\n      case Block.p:\n      case Block.h1:\n      case Block.h2:\n      case Block.h3:\n        return this.renderTextBlock(type, props);\n      case Block.ol:\n      case Block.ul:\n      case Block.li:\n        return React.createElement(type, attributes, children);\n\n      case Inline.externalLink:\n        return <ExternalLink {...props} editor={editor} />;\n      case Inline.internalLink:\n        return <InternalLink {...props} editor={editor} />;\n\n      default:\n        return next();\n    }\n  }\n\n  renderMark = (props: RenderMarkProps, _editor: Slate.Editor, next: () => any): any => {\n    const { children, mark: { type }, attributes } = props;\n\n    switch (type) {\n      case MARK.strong:\n      case MARK.em:\n      case MARK.u:\n      case MARK.s:\n        return React.createElement(type, attributes, children);\n      default: return next();\n    }\n  }\n\n  private onKeyDown = (event: KeyboardEvent, editor: Slate.Editor, next: () => void) => {\n    const { value } = editor;\n    if (isHotkey('enter', event)) {\n      if (\n        value.selection.isCollapsed &&\n        value.endBlock.type === Block.li &&\n        value.endBlock.text === ''\n      ) {\n        // we are inside list and clicking enter on the empty li element\n        editor\n          .unwrapBlock(Block.ol)\n          .unwrapBlock(Block.ul)\n          .setBlocks(DEFAULT_BLOCK);\n      } else if (\n        value.selection.isCollapsed &&\n        value.selection.start.isAtEndOfNode(value.endBlock) &&\n        value.endBlock.type !== Block.li\n      ) {\n        editor.insertBlock(DEFAULT_BLOCK);\n      } else {\n        next();\n      }\n    } else if (isHotkey('tab', event)) {\n      event.preventDefault();\n      if (value.selection.end.isInNode(value.document.nodes.last())) {\n        editor\n          .moveToEndOfBlock()\n          .insertBlock(DEFAULT_BLOCK);\n      } else {\n        editor.moveToStartOfNextBlock();\n      }\n    } else {\n      next();\n    }\n  }\n\n  private onFocus = () => {\n  }\n\n  componentDidMount() {\n    if (this.props.documentIri) {\n      const documentIri = Rdf.iri(this.props.documentIri);\n      this.cancellation.map(\n        this.fetchDocument(documentIri)\n      ).observe({\n        value: this.onDocumentLoad,\n        error: error => console.error(error)\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    // when slate Value is rendered we need to find top most block for sidebar positioning\n\n    const { value, anchorBlock } = this.state;\n    let topAnchor = value.anchorBlock;\n    if (value.anchorBlock?.type === Block.li) {\n      topAnchor = value.document.getFurthestBlock(value.anchorBlock.key);\n    }\n\n    if (anchorBlock !== topAnchor) {\n      this.setState({ anchorBlock: topAnchor });\n    }\n  }\n\n  componentWillUnmount() {\n    this.cancellation.cancelAll();\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Spinner spinnerDelay={0} />;\n    } else {\n      return (\n        <div className={styles.narrativeHolder}>\n          {this.props.readonly ? null :\n          <Toolbar\n                  saving={this.state.saving}\n                  value={this.state.value}\n                  anchorBlock={this.state.anchorBlock}\n                  editor={this.editorRef}\n                  options={this.state.availableTemplates}\n                  onDocumentSave={this.onDocumentSave}\n          />\n          }\n            <div className={styles.sidebarAndEditorHolder}>\n              <div className={styles.titleHolder}>\n                {this.state.documentIri ? (\n                <Draggable iri={this.state.documentIri}>\n                  <span className={styles.draggableGripper} title='drag narrative'>\n                    <i className='rs-icon rs-icon-drag_points'></i>\n                  </span>\n                </Draggable>\n              ) : null}\n              <FormGroup bsClass={`${styles.titleInput}`}>\n                <FormControl\n                  value={this.state.title} type='text' readOnly={this.props.readonly}\n                  onChange={event => this.setState({title: (event.target as any).value})}\n                  placeholder='Please enter document title'\n                />\n              </FormGroup>\n              </div>\n              <div className={styles.editorContainer}>\n                <Editor\n                  ref={this.editorRef}\n                  readOnly={this.props.readonly}\n                  spellCheck={false}\n                  value={this.state.value}\n                  renderMark={this.renderMark}\n                  renderNode={this.renderBlock}\n                  onKeyDown={this.onKeyDown}\n                  onDrop={() => {/**/ } }\n                  onFocus={this.onFocus}\n                  schema={schema}\n                  onChange={this.onChange}\n                  plugins={plugins}\n                />\n              </div>\n            </div>\n        </div>\n      );\n    }\n  }\n\n  private onDocumentLoad = (payload: [string, string]) => {\n    const [fileName, content] = payload;\n    let htmlTitle: string;\n    const slateHtml =\n      new Html({\n        rules: SLATE_RULES,\n        defaultBlock: Block.p as any,\n        parseHtml: (html: string) => {\n          const parsed = new DOMParser().parseFromString(html, 'text/html');\n          const { title, body } = parsed;\n          htmlTitle = title;\n          return body;\n        }\n      });\n\n    const value = slateHtml.deserialize(content, { toJSON: true });\n\n    // load templates for embeds\n    const embeds =\n      value.document.nodes\n        .filter(\n          n => n.object === 'block' && n.type === Block.embed\n        ).reduce(\n          (obj, n: Slate.BlockJSON) => {\n            const iri = n.data.attributes.src;\n            obj[iri] = this.findTemplatesForResource(Rdf.iri(iri));\n            return obj;\n          },\n          {}\n        ) as { string: Kefir.Property<any> };\n\n    if (_.isEmpty(embeds)) {\n      this.setState({\n        value: Slate.Value.fromJS(value), fileName, loading: false, title: htmlTitle,\n      });\n    } else {\n      Kefir.combine(\n        embeds\n      ).onValue(\n        templates => this.setState({\n          value: Slate.Value.fromJS(value), fileName, loading: false, title: htmlTitle,\n          availableTemplates: templates\n        })\n      );\n    }\n  }\n\n  private getFileManager(): FileManager {\n    const { repository } = this.context.semanticContext;\n    return new FileManager({ repository });\n  }\n\n  private fetchDocument(documentIri: Rdf.Iri): Kefir.Property<[string, string]> {\n    return this.getFileManager().getFileResource(documentIri)\n      .flatMap(resource => {\n        const fileUrl = FileManager.getFileUrl(resource.fileName, this.props.storage);\n        return requestAsProperty(\n          http.get(fileUrl)\n            .accept('text/html')\n        ).map(\n          response => ([resource.fileName, response.text] as [string, string])\n        );\n      })\n      .toProperty();\n  }\n\n  private wrapInHtml(title: string, body: string) {\n    return (\n      `<html>\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>${title}</title>\n  </head>\n  <body>${body}</body>\n</html>`\n    );\n  }\n\n\n  private onDocumentSave = () => {\n    this.setState({saving: true});\n    const { value, title } = this.state;\n\n    const html = new Html({ rules: SLATE_RULES });\n    const content =\n      this.wrapInHtml(title, html.serialize(value));\n\n    const blob = new Blob([content]);\n    const fileName =\n      this.state.fileName || title.replace(/[^a-z0-9_\\-]/gi, '_') + '.html';\n    const file = new File([blob], fileName);\n\n    const parsedResouercQuery =\n      SparqlUtil.parseQuery(\n        this.props.resourceQuery\n      );\n    const resourceQuery =\n      SparqlUtil.serializeQuery(\n        SparqlClient.setBindings(\n          parsedResouercQuery, { '__label__': Rdf.literal(title) }\n        )\n      );\n\n    this.cancellation.map(\n      this.getFileManager().uploadFileAsResource({\n        file,\n        storage: this.props.storage,\n        generateIriQuery: this.props.generateIriQuery,\n        resourceQuery: resourceQuery,\n        contextUri: 'http://www.researchspace.org/instances/narratives',\n        fileNameHack: true\n      })\n    ).observe({\n      value: resource => {\n        this.setState({documentIri: resource.value, saving: false});\n      },\n      error: error => { console.log('error'); console.log(error) },\n    });\n  }\n}\n\nexport default TextEditor;\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as _ from 'lodash';\nimport * as Slate from 'slate';\n\nexport const RESOURCE_MIME_TYPE =\n  'researchspace/resource';\n\n/* Marks */\nexport const MARK = {\n  strong: 'strong',\n  em: 'em',\n  u: 'u',\n  s: 's'\n} as const;\nexport type Mark = keyof typeof MARK;\n\nexport const Block = {\n  empty: 'empty',\n  embed: 'embed',\n  p: 'p',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  ul: 'ul',\n  ol: 'ol',\n  li: 'li'\n} as const;\nexport type Block = keyof typeof Block;\nexport const DEFAULT_BLOCK = Block.empty;\n\nexport const Inline = {\n  externalLink: 'externalLink',\n  internalLink: 'internalLink'\n} as const;\nexport type Inline = keyof typeof Inline;\n\nexport const TextAlignment = {\n  left: 'left',\n  right: 'right',\n  center: 'center',\n  justify: 'justify'\n} as const;\nexport type TextAlignment = keyof typeof TextAlignment;\n\nexport function isTextBlock(block?: Slate.Block): boolean {\n  if (block) {\n    const { type } = block;\n    return type === Block.p ||\n      type === Block.h1 ||\n      type === Block.h2 ||\n      type === Block.h3;\n  } else {\n    return false;\n  }\n}\n\n/// Schema\nexport const schema: Slate.SchemaProperties = {\n  document: {\n    nodes: [\n      {\n        match: _.values(Block).map(block => ({ type: block })), min: 1\n      },\n    ],\n    normalize: (editor: Slate.Editor, error: Slate.SlateError) => {\n      const { code, node, index } = error;\n      switch (code) {\n        case 'child_min_invalid': {\n          const block = Slate.Block.create(Block.empty);\n          return editor.insertNodeByKey(node.key, index, block);\n        }\n      }\n    },\n  },\n  inlines: {\n    [Inline.externalLink]: {\n      nodes: [{match: {object: 'text'}}]\n    },\n    [Inline.internalLink]: {\n      nodes: [{match: {object: 'text'}}]\n    }\n  },\n  blocks: {\n    [Block.embed]: {\n      isVoid: true,\n    },\n    [Block.p]: {\n      nodes: [\n        {\n          match: [\n            {\n              object: 'text',\n              text: (s: string) => s !== '',\n            } as any,\n            {\n              object: 'inline',\n              nodes: [{match: {object: 'text'}}]\n            },\n          ]\n        },\n      ],\n      normalize: (editor: Slate.Editor, error: Slate.SlateError) => {\n        console.log('error in schema');\n        console.log(error.code)\n        switch (error.code) {\n          case 'child_text_invalid' as any:\n            console.log('adding empty node')\n            editor.setNodeByKey(error.node.key, Block.empty);\n            return;\n        }\n      }\n    },\n    [Block.h1]: {\n      nodes: [{ match: { object: 'text' } }]\n    },\n    [Block.h2]: {\n      nodes: [{ match: { object: 'text' } }]\n    },\n    [Block.h3]: {\n      nodes: [{ match: { object: 'text' } }]\n    },\n    [Block.ol]: {\n      nodes: [{ match: { type: Block.li } }]\n    },\n    [Block.ul]: {\n      nodes: [{ match: { type: Block.li } }]\n    },\n    [Block.empty]: {\n      nodes: [\n        {\n          match: {\n            object: 'text',\n            text: (s: string) => s === '',\n          } as any,\n        },\n      ],\n      normalize: (editor: Slate.Editor, error: Slate.SlateError) => {\n        switch (error.code) {\n          case 'child_text_invalid' as any:\n            console.log('changing empty to block')\n            editor.setNodeByKey(error.node.key, Block.p);\n            return;\n        }\n      }\n    },\n  },\n};\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as _ from 'lodash';\nimport * as React from 'react';\nimport { Rule } from 'slate-html-serializer';\n\nimport { ModuleRegistry } from 'platform/api/module-loader';\n\nimport { Block, MARK, Inline, RESOURCE_MIME_TYPE } from './EditorSchema';\n\nexport const SLATE_RULES: Rule[] = [\n  {\n    deserialize(el, next) {\n      if (el.nodeType === Node.ELEMENT_NODE) {\n        const tagName = el.tagName.toLowerCase();\n\n        if (tagName === 'a') {\n          const data: {attributes?: {}} = {};\n          const attributes = getAttributesAsReactProps(el);\n          if (!_.isEmpty(attributes)) {\n            // we can't attach empty attribute because then slate has problem with equality\n            // for toggleMark, etc.\n            data.attributes = attributes;\n          }\n\n          const isInternalLink = attributes.type === RESOURCE_MIME_TYPE;\n          return {\n            object: 'inline',\n            type: isInternalLink ? Inline.internalLink : Inline.externalLink,\n            data,\n            nodes: next(el.childNodes),\n          };\n        }\n      }\n    },\n    serialize(obj, children) {\n      if (obj.object === 'inline') {\n        if (obj.type === Inline.externalLink || obj.type === Inline.internalLink) {\n          return React.createElement('a', obj.data.get('attributes', {}), children);\n        }\n      }\n    }\n  },\n  {\n    deserialize(el, next) {\n      if (el.nodeType === Node.ELEMENT_NODE) {\n        const tagName = el.tagName.toLowerCase();\n        if (Block[tagName] || MARK[tagName]) {\n          const data: {attributes?: {}} = {};\n          const attributes = getAttributesAsReactProps(el);\n          if (!_.isEmpty(attributes)) {\n            // we can't attach empty attribute because then slate has problem with equality\n            // for toggleMark, etc.\n            data.attributes = attributes;\n          }\n          return {\n            object: Block[tagName] ? 'block' : 'mark',\n            type: tagName,\n            data,\n            nodes: next(el.childNodes),\n          };\n        }\n      }\n    },\n    serialize(obj, children) {\n      if (\n        (obj.object === 'block' && Block[obj.type]) ||\n          (obj.object === 'mark' && MARK[obj.type])\n      ) {\n        if (obj.type === Block.embed) {\n          return React.createElement(\n            obj.type,\n            obj.data.get('attributes', {})\n          );\n        } else {\n          return React.createElement(\n            obj.type,\n            obj.data.get('attributes', {}),\n            children\n          );\n        }\n      }\n    },\n  },\n];\n\n\n// from text-annotation TextSerialization, TODO\nfunction getAttributesAsReactProps(el: Element): { [key: string]: any } {\n  const data: { [key: string]: any } = {};\n  for (let i = 0; i < el.attributes.length; i++) {\n    const attr = el.attributes.item(i);\n    const parsedPropValue = attr.name === 'style'\n      ? ModuleRegistry.parseReactStyleFromCss(attr.value)\n      : attr.value;\n    data[attr.name] = parsedPropValue;\n  }\n  return data;\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport { ButtonToolbar, ButtonGroup, Button, MenuItem, Dropdown } from 'react-bootstrap';\nimport * as Slate from 'slate';\nimport { Editor } from 'slate-react';\nimport { List } from 'immutable';\n\nimport {\n  Block, MARK, Mark, DEFAULT_BLOCK, TextAlignment, isTextBlock, Inline, RESOURCE_MIME_TYPE\n} from './EditorSchema';\nimport { ResourceTemplateConfig } from './Config';\nimport * as styles from './TextEditor.scss';\n\nexport const BLOCK_TO_ICON: { [block in Block]: string } = {\n  [Block.empty]: 'fa-plus',\n  [Block.embed]: 'fa-file-code-o',\n  [Block.p]: 'fa-paragraph',\n  [Block.h1]: 'fa-header',\n  [Block.h2]: 'fa-header',\n  [Block.h3]: 'fa-header',\n  [Block.ol]: 'fa-list-ol',\n  [Block.ul]: 'fa-list-ul',\n  [Block.li]: 'fa-list'\n};\n\nconst BLOCK_TO_LABEL: { [block in Block]: string } = {\n  [Block.empty]: 'Placeholder',\n  [Block.embed]: 'Resource',\n  [Block.p]: 'Paragraph',\n  [Block.h1]: 'Heading 1',\n  [Block.h2]: 'Heading 2',\n  [Block.h3]: 'Heading 3',\n  [Block.ol]: 'Numbered List',\n  [Block.ul]: 'Bulleted List',\n  [Block.li]: 'List Item'\n};\n\nconst TEXT_ALIGNMENT_TO_ICON: { [alignment in TextAlignment]: string } = {\n  [TextAlignment.left]: 'fa-align-left',\n  [TextAlignment.right]: 'fa-align-right',\n  [TextAlignment.center]: 'fa-align-center',\n  [TextAlignment.justify]: 'fa-align-justify',\n};\n\nconst MARK_TO_ICON: { [mark in Mark]: string } = {\n  [MARK.s]: 'fa-strikethrough',\n  [MARK.u]: 'fa-underline',\n  [MARK.em]: 'fa-italic',\n  [MARK.strong]: 'fa-bold'\n};\n\nexport interface ToolbarProps {\n  value: Slate.Value;\n  editor: React.RefObject<Editor>;\n  anchorBlock: Slate.Block\n  options?: { [objectIri: string]: ResourceTemplateConfig[] }\n  onDocumentSave: () => void;\n  saving?: boolean;\n}\n\nexport class Toolbar extends React.Component<ToolbarProps> {\n\n  isTextSelectionActionDisabled = () =>\n    !isTextBlock(this.props.anchorBlock) || this.props.value.selection.isCollapsed\n\n  onMarkClick = (event: React.MouseEvent<Button>, markType: Mark) => {\n    event.preventDefault();\n    this.props.editor.current.toggleMark(markType);\n  }\n\n  markButton = (markType: Mark) => {\n    const isActive = this.hasMark(markType);\n    const className = `fa ${MARK_TO_ICON[markType]}`;\n    return <Button active={isActive} disabled={this.isTextSelectionActionDisabled()}\n      onMouseDown={event => this.onMarkClick(event, markType)}>\n      <i className={className} aria-hidden={true}></i>\n    </Button>;\n  }\n\n  hasMark = (markType: Mark): boolean => {\n    const { value } = this.props;\n    return value.activeMarks.some(mark => mark.type === markType);\n  }\n\n  alignTextButton = (alignment: TextAlignment) => {\n    const isActive = this.hasAlignment(alignment);\n    const className = `fa ${TEXT_ALIGNMENT_TO_ICON[alignment]}`;\n    return <Button active={isActive} disabled={!isTextBlock(this.props.anchorBlock)}\n      onMouseDown={event => this.onAlignClick(event, alignment)}>\n      <i className={className} aria-hidden={true}></i>\n    </Button>;\n  }\n\n  onAlignClick = (event: React.MouseEvent<Button>, alignment: TextAlignment) => {\n    event.preventDefault();\n    const { editor, anchorBlock } = this.props;\n\n    const currentAlignment =\n      anchorBlock.data.get('attributes', {})?.style?.textAlign;\n\n    let data = {};\n    if (alignment !== currentAlignment) {\n      data = {\n        style: {\n          textAlign: alignment,\n\n          // we need to have this for \"text-align: justify\" to work in all browsers.\n          // see https://github.com/ianstormtaylor/slate/issues/2359\n          whiteSpace: alignment === TextAlignment.justify ? 'pre-line' : undefined,\n        }\n      };\n    }\n    const modifiedBlock = anchorBlock.setIn(['data', 'attributes'], data) as Slate.Block;\n    editor.current.setBlocks(modifiedBlock);\n  }\n\n  hasAlignment = (alignment: TextAlignment): boolean => {\n    const { anchorBlock } = this.props;\n    if (anchorBlock) {\n      return anchorBlock.data.get('attributes')?.style?.textAlign === alignment;\n    } else {\n      return false;\n    }\n  }\n\n  // link\n  externalLinkButton = () => {\n    return (\n      <Button onMouseDown={this.onExternalLinkClick}\n        disabled={this.isTextSelectionActionDisabled()}\n      >\n        <i className='fa fa-external-link' aria-hidden={true}></i>\n      </Button>\n    );\n  }\n\n  onExternalLinkClick = (event: React.MouseEvent<Button>) => {\n    event.preventDefault();\n    const { editor, value } = this.props;\n\n    if (value.selection.isCollapsed) {\n      const linkText = Slate.Text.create({ text: 'link' });\n      editor.current\n        .insertInline({\n          type: Inline.externalLink,\n          nodes: List.of(linkText),\n        });\n    } else {\n      editor.current.wrapInline({\n        type: Inline.externalLink,\n      });\n    }\n  }\n\n  internalLinkButton = () => {\n    return (\n      <Button onMouseDown={this.onInternalLinkClick}\n        disabled={this.isTextSelectionActionDisabled()}\n      >\n        <i className='fa fa-chain' aria-hidden={true}></i>\n      </Button>\n    );\n  }\n\n  onInternalLinkClick = (event: React.MouseEvent<Button>) => {\n    event.preventDefault();\n    const { editor, value } = this.props;\n\n    if (value.selection.isCollapsed) {\n      const linkText = Slate.Text.create({ text: 'link' });\n      editor.current\n        .insertInline({\n          type: Inline.internalLink,\n          nodes: List.of(linkText),\n        });\n    } else {\n      editor.current.wrapInline({\n        type: Inline.internalLink,\n      });\n    }\n  }\n\n  onResourceTemplateSelected = (templateId: string) => {\n    const attributes = this.props.anchorBlock.data.get('attributes');\n    this.props.editor.current.setBlocks({\n      type: Block.embed,\n      data: {\n        attributes: {\n          ...attributes,\n          template: templateId,\n          style: {}\n        }\n      }\n    });\n  }\n\n  render() {\n    const { saving } = this.props;\n    return (\n      <ButtonToolbar className={styles.toolbar}>\n        <ButtonGroup>\n          <Button bsStyle='success' onClick={this.props.onDocumentSave} disabled={saving}>\n            <i className={saving ? 'fa fa-spinner fa-pulse fa-fw' : 'fa fa-floppy-o' }\n              aria-hidden='true'></i>\n            &nbsp; Save\n          </Button>\n        </ButtonGroup>\n\n        <ButtonGroup>\n          {\n            this.props.anchorBlock?.type === Block.embed ?\n              <ResourceDropdown\n                options={this.props.options[this.props.anchorBlock.data.get('attributes').src]}\n                anchorBlock={this.props.anchorBlock}\n                onSelect={this.onResourceTemplateSelected}\n              />\n              :\n              <BlockDropdown {...this.props} sidebar={false} />\n          }\n        </ButtonGroup>\n\n        <ButtonGroup>\n          {this.markButton(MARK.strong)}\n          {this.markButton(MARK.em)}\n          {this.markButton(MARK.u)}\n          {this.markButton(MARK.s)}\n        </ButtonGroup>\n\n        <ButtonGroup>\n          {this.alignTextButton(TextAlignment.left)}\n          {this.alignTextButton(TextAlignment.center)}\n          {this.alignTextButton(TextAlignment.right)}\n          {this.alignTextButton(TextAlignment.justify)}\n        </ButtonGroup>\n\n        <ButtonGroup>\n          {this.internalLinkButton()}\n          {this.externalLinkButton()}\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n\n\ninterface ResourceDropdownProps {\n  options: ResourceSelection[]\n  anchorBlock: Slate.Block\n  onSelect: (templateId: string) => void\n}\n\ninterface ResourceSelection {\n  id: string\n  label: string\n}\n\nclass ResourceDropdown extends React.Component<ResourceDropdownProps> {\n  actionButton = (selectedTemplate: ResourceSelection) => (selection: ResourceSelection) => {\n    const isActive = selectedTemplate.id === selection.id;\n    return (\n      <MenuItem key={selection.id} eventKey={selection.id} active={isActive}\n        onSelect={this.onSelect as any}>\n        <span className={styles.dropdownMenuItem}>\n          <span>{selection.label}</span>\n        </span>\n      </MenuItem>\n    );\n  }\n\n  onSelect = (templateId: string, event: any) => {\n    event.preventDefault();\n    this.props.onSelect(templateId);\n  }\n\n  render() {\n    const { options, anchorBlock } = this.props;\n\n    // options can be undefined if templates are still loading\n    if (options) {\n      const selectedTemplateId = anchorBlock.data.get('attributes').template;\n      const selectedTemplate = options.find(o => o.id === selectedTemplateId);\n\n      if (selectedTemplate) {\n        return (\n          <Dropdown id='blocks' pullRight={true}>\n            <Dropdown.Toggle>\n              <span className={styles.dropdownMenuItem}>\n                {selectedTemplate.label}\n              </span>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {options.map(this.actionButton(selectedTemplate))}\n            </Dropdown.Menu>\n          </Dropdown>\n        );\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\n\n\nexport interface BlockDropdownProps {\n  value: Slate.Value;\n  editor: React.RefObject<Editor>;\n  sidebar: boolean;\n  anchorBlock: Slate.Block;\n}\n\nexport class BlockDropdown extends React.Component<BlockDropdownProps> {\n\n  hasBlock = (type: Block) => {\n    return this.props.value.blocks.some(node => node.type === type);\n  }\n\n  onBlockButtonClick = (blockType: Block, event: any) => {\n    event.preventDefault();\n\n    const { editor, anchorBlock } = this.props;\n\n    // we need do handle list blocks separately\n    if (blockType === Block.ol || blockType === Block.ul) {\n      const isList = this.hasBlock(Block.li);\n      const isTheSameType = anchorBlock.type === blockType;\n\n      if (isList && isTheSameType) {\n        // if current block is list and button of the same time is clicked,\n        // we change type of the current block to default one\n        editor.current\n          .moveToRangeOfNode(anchorBlock)\n          .unwrapBlock(blockType)\n          .setBlocks(DEFAULT_BLOCK);\n      } else if (isList) {\n        // if current block is list, but was click button with different kind of list,\n        // we change to that list\n        editor.current\n          .moveToRangeOfNode(anchorBlock)\n          .unwrapBlock(anchorBlock.type)\n          .wrapBlock(blockType);\n\n      } else {\n        // or we just set current block to list\n        editor.current\n          .setBlocks(Block.li)\n          .wrapBlock(blockType)\n          .moveToEndOfText()\n          .focus();\n      }\n    } else {\n      const isList = this.hasBlock(Block.li);\n      const isActive = this.hasBlock(blockType);\n\n      if (isList) {\n        // if current block is list we first need to unwrap it before changing to the new type\n        editor.current\n          .moveToRangeOfNode(anchorBlock)\n          .unwrapBlock(anchorBlock.type)\n          .setBlocks(isActive ? DEFAULT_BLOCK : blockType);\n      } else {\n        // if it is not list then just toggle the block type\n        editor.current\n          .moveToRangeOfNode(anchorBlock)\n          .setBlocks(isActive ? DEFAULT_BLOCK : blockType)\n          .moveToEndOfBlock()\n          .focus();\n      }\n    }\n\n    // editor.current.select(value.selection).focus();\n  }\n\n  actionButton = (blockType: Block) => {\n    const isActive = this.props.anchorBlock?.type === blockType;\n    return (\n      <MenuItem eventKey={blockType} active={isActive}\n        onSelect={this.onBlockButtonClick as any}>\n\n        {this.actionDescription(blockType)}\n      </MenuItem>\n    );\n  }\n\n  actionDescription = (blockType: Block) => {\n    return (\n      <span className={styles.dropdownMenuItem}>\n        {this.actionIcon(blockType)}\n        <span>{BLOCK_TO_LABEL[blockType]}</span>\n      </span>\n    );\n  }\n\n  actionIcon(blockType: Block) {\n    const iconClassName = `fa ${BLOCK_TO_ICON[blockType]}`;\n\n    // for heading blocks we add heading number to the default icon\n    const prefix =\n      blockType === Block.h1 ? '1' :\n        blockType === Block.h2 ? '2' :\n          blockType === Block.h3 ? '3' : '';\n\n    return (\n      <span className={styles.dropdownMenuItemIcon}>\n        <i className={iconClassName} aria-hidden='true'></i>{prefix}\n      </span>\n    );\n  }\n\n  render() {\n    const { sidebar, anchorBlock } = this.props;\n    const block = anchorBlock ? anchorBlock.type as Block : Block.empty;\n\n    return (\n      <Dropdown id='blocks' pullRight={true}>\n        <Dropdown.Toggle bsSize={sidebar ? 'xsmall' : null}\n          className={sidebar ? styles.sidebarDropdown : ''}\n        >\n          {sidebar ? this.actionIcon(block) : this.actionDescription(block)}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {this.actionButton(Block.p)}\n          <MenuItem divider />\n          {this.actionButton(Block.h1)}\n          {this.actionButton(Block.h2)}\n          {this.actionButton(Block.h3)}\n          <MenuItem divider />\n          {this.actionButton(Block.ol)}\n          {this.actionButton(Block.ul)}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport interface ResourceTemplateDropdownProps {\n  options: any\n}\n\n\nexport type ActionDropdownProps =\n  { type: 'block', props: BlockDropdownProps } |\n  { type: 'resource', props: ResourceTemplateDropdownProps };\n\nexport class ActionDropdown extends React.PureComponent<ActionDropdownProps> {\n  render() {\n    switch (this.props.type) {\n      case 'block': return <BlockDropdown {...this.props.props} />;\n      case 'resource': return null;\n    }\n  }\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as Slate from 'slate';\nimport { RenderNodeProps } from 'slate-react';\nimport { Overlay, Popover, FormControl, ButtonGroup, Button } from 'react-bootstrap';\n\nimport { Inline } from './EditorSchema';\n\nimport * as styles from './TextEditor.scss';\n\nexport interface ExternalLinkProps extends RenderNodeProps {\n  editor: Slate.Editor\n}\n\ninterface ExternalLinkState {\n  href: string\n  edit: boolean\n}\n\nexport class ExternalLink extends React.Component<ExternalLinkProps, ExternalLinkState> {\n\n  private aRef: React.RefObject<HTMLAnchorElement>;\n  private inputRef: React.RefObject<FormControl>;\n  private popoverRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: ExternalLinkProps) {\n    super(props);\n    this.aRef = React.createRef<HTMLAnchorElement>();\n    this.inputRef = React.createRef<FormControl>();\n    this.popoverRef = React.createRef<HTMLDivElement>();\n\n    const href = props.node.data.get('attributes', {}).href || '';\n    this.state = {\n      href: href,\n      edit: href === '' ? true : false\n    };\n  }\n\n  onClick(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n  }\n\n  onHrefSaved = (event: React.MouseEvent<Button>) => {\n    event.preventDefault();\n\n    const node =\n      this.props.node.setIn(\n        ['data', 'attributes'], { href: this.state.href }\n      ) as Slate.Inline;\n    this.props.editor\n      .moveToStartOfNode(node)\n      .setInlines(node);\n    this.setState({ edit: false });\n  }\n\n  onUnlink = (event: React.MouseEvent<Button>) => {\n    event.preventDefault();\n\n    const { editor, node } = this.props;\n    editor\n      .moveToRangeOfNode(node)\n      .focus()\n      .unwrapInline(Inline.externalLink);\n  }\n\n  onOverlayShown = () => {\n    if (this.state.edit) {\n      const input = findDOMNode(this.inputRef.current) as HTMLInputElement;\n      input.focus();\n    }\n  }\n\n  onEdit = () => this.setState({ edit: true });\n\n  getPopoverTarget = () => findDOMNode(this.aRef.current);\n\n  render() {\n    const { attributes, children, editor, node } = this.props;\n\n    const isLinkSelected =\n      editor.value.selection.isCollapsed &&\n      editor.value.inlines.contains(node as Slate.Inline);\n\n    const dataAttributes = node.data.get('attributes', {});\n    const isNoHref = !dataAttributes.href;\n    const isShowPopover = isLinkSelected || isNoHref;\n\n    return (\n      <span style={{ position: 'relative' }}>\n        <Overlay container={document.body} target={this.getPopoverTarget}\n          placement='top' show={isShowPopover} onEntered={this.onOverlayShown}\n        >\n          <Popover id='external-link-popover' placement='top' contentEditable={false}>\n            <div className={styles.linkPopover} ref={this.popoverRef}>\n              {\n                this.state.edit\n                  ?\n                  <FormControl type='text' value={this.state.href}\n                    ref={this.inputRef}\n                    placeholder='enter link'\n                    onChange={e => this.setState({ href: (e.target as any).value })}\n                  />\n                  :\n                  <div className={styles.externalLinkHolder}>\n                    <a {...dataAttributes}>\n                      {node.text}\n                    </a>\n                  </div>\n              }\n              <ButtonGroup>\n                {\n                  this.state.edit\n                    ?\n                    <Button bsClass='btn-success' onMouseDown={this.onHrefSaved} disabled={this.state.href === ''}>\n                      <i className='fa fa-floppy-o' aria-hidden='true'></i>\n                    </Button>\n                    :\n                    <Button bsClass='btn-grey' onMouseDown={this.onEdit}>\n                      <i className='fa fa-pencil' aria-hidden='true'></i>\n                    </Button>\n                }\n                <Button bsClass='btn-grey' onMouseDown={this.onUnlink}>\n                  <i className='fa fa-chain-broken' aria-hidden='true'></i>\n                </Button>\n              </ButtonGroup>\n            </div>\n          </Popover>\n        </Overlay>\n        <a {...attributes} {...dataAttributes}\n          className={styles.externalLink} ref={this.aRef} onClick={this.onClick}\n        >\n          {children}\n        </a>\n      </span>\n    );\n  }\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport * as Slate from 'slate';\nimport { RenderNodeProps } from 'slate-react';\nimport { Overlay, Popover, FormControl, ButtonGroup, Button } from 'react-bootstrap';\n\nimport { ResourceLinkComponent } from 'platform/api/navigation/components';\nimport { Rdf } from 'platform/api/rdf';\nimport { DropArea } from 'platform/components/dnd/DropArea';\n\nimport { Inline, RESOURCE_MIME_TYPE } from './EditorSchema';\n\nimport * as styles from './TextEditor.scss';\n\nexport interface InternalLinkProps extends RenderNodeProps {\n  editor: Slate.Editor\n}\n\ninterface InternalLinkState {\n}\n\nexport class InternalLink extends React.Component<InternalLinkProps, InternalLinkState> {\n\n  private aRef: React.RefObject<any>;\n\n  constructor(props: InternalLinkProps) {\n    super(props);\n    this.aRef = React.createRef<any>();\n  }\n\n  onClick(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault();\n  }\n\n  onUnlink = (event: React.MouseEvent<Button>) => {\n    event.preventDefault();\n\n    const { editor, node } = this.props;\n    editor\n      .moveToRangeOfNode(node)\n      .focus()\n      .unwrapInline(Inline.internalLink);\n  }\n\n  onResourceDrop = (drop: Rdf.Iri) => {\n    const node =\n      this.props.node.setIn(\n        ['data', 'attributes'], {\n        href: drop.value,\n        type: RESOURCE_MIME_TYPE,\n      }\n      ) as Slate.Inline;\n    this.props.editor\n        .moveToStartOfNode(node)\n        .setInlines(node);\n  }\n\n  getPopoverTarget = () => findDOMNode(this.aRef.current);\n\n  render() {\n    const { attributes, children, editor, node } = this.props;\n\n    const isLinkSelected =\n      editor.value.selection.isCollapsed &&\n      editor.value.inlines.contains(node as Slate.Inline);\n\n    const dataAttributes = node.data.get('attributes', {});\n    const isNoHref = !dataAttributes.href;\n    const isShowPopover = isLinkSelected || isNoHref;\n\n    return (\n      <span {...attributes} className={styles.internalLink}>\n        <Overlay container={document.body} target={this.getPopoverTarget}\n          placement='top' show={isShowPopover}\n        >\n          <Popover id='internal-link-popover' placement='top' contentEditable={false}>\n            <div className={styles.linkPopover}>\n              <DropArea\n                onDrop={this.onResourceDrop}\n                dropMessage='Drop here resource from Clipboard to make a link.'\n                alwaysVisible={isNoHref}\n              >\n                {\n                  isNoHref ? null :\n                  // because ResourceLinkComponent is not update when iri changes\n                  // we need to use react key to recreate it on change\n                  <ResourceLinkComponent key={dataAttributes.href} iri={dataAttributes.href} />\n                }\n              </DropArea>\n              <Button bsClass='btn-grey' onMouseDown={this.onUnlink}>\n                <i className='fa fa-chain-broken' aria-hidden='true'></i>\n              </Button>\n            </div>\n          </Popover>\n        </Overlay>\n        <a {...attributes} {...dataAttributes} ref={this.aRef} onClick={this.onClick}>\n          {children}\n        </a>\n      </span>\n    );\n  }\n}\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport { RenderNodeProps } from 'slate-react';\nimport { Well } from 'react-bootstrap';\nimport * as classNames from 'classnames';\n\nimport { Rdf } from 'platform/api/rdf';\nimport { TemplateItem } from 'platform/components/ui/template';\nimport { Spinner } from 'platform/components/ui/spinner';\n\nimport { ResourceTemplateConfig } from './Config';\n\nimport * as styles from './TextEditor.scss';\n\n\nexport interface ResourceBlockProps extends RenderNodeProps {\n  resourceTemplates: Array<ResourceTemplateConfig>\n}\n\nexport class ResourceBlock extends React.Component<ResourceBlockProps> {\n\n  private resizeObserver: MutationObserver;\n\n  private getProps = () => {\n    return this.props;\n  }\n\n  private getTemplateConfig = (templateId: string) => {\n    return _.find(\n      this.props.resourceTemplates, t => t.id === templateId\n    );\n  }\n\n  private onTemplateRendered = (ref: HTMLElement) => {\n    const template = this.props.node.data.get('attributes')?.template;\n    const config = this.getTemplateConfig(template);\n\n    if (ref && config?.resizable) {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n\n      this.resizeObserver = new MutationObserver(\n        (_mutationsList, _observer) => {\n          const { node, editor } = this.getProps();\n          const attributes = node.data.get('attributes', {});\n          const style = attributes.style || {};\n          if (style.height !== ref.offsetHeight || style.width !== ref.offsetWidth) {\n            attributes.style = attributes.style || {};\n            attributes.style.height = ref.offsetHeight;\n            attributes.style.width = ref.offsetWidth;\n            editor\n              .moveToRangeOfNode(node)\n              .setBlocks(node);\n          }\n        }\n      );\n\n      this.resizeObserver.observe(\n        ref,\n        {\n          attributes: true,\n          attributeFilter: ['style']\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  render() {\n    const { node, editor } = this.props;\n    const attributes = node.data.get('attributes', {});\n    const config = this.getTemplateConfig(attributes.template);\n\n    // if there is no config then available templates are still loading\n    if (config) {\n      const style = attributes.style || {};\n\n      // if there is no height/width associated with the node try to get default values\n      if (config.defaults) {\n        if (!style.height && config.defaults.height) {\n          style.height = config.defaults.height;\n        }\n        if (!style.width && config.defaults.width) {\n          style.width = config.defaults.width;\n        }\n      }\n\n      if (config.resizable) {\n        style.resize = 'both',\n        style.overflow = 'auto';\n      } else {\n        style.flex = 1;\n      }\n\n      const isSelected = editor.value.selection.isCollapsed && editor.value.endBlock === node;\n\n      return (\n        <div {...this.props.attributes}\n        className={\n          classNames(styles.resourceBlock, {[styles.resourceBlockActive]: isSelected})\n        }\n        >\n          <div\n            style={{\n              ...style,\n              padding: 10,\n            }}\n            ref={this.onTemplateRendered}\n          >\n            <TemplateItem\n              componentProps={{\n                style: {\n                  height: '100%',\n                  width: '100%',\n                }\n              }}\n              template={{\n                source: config.template,\n                options: { iri: Rdf.iri(attributes.src) }\n              }}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return <Well><Spinner /></Well>;\n    }\n\n  }\n}\n"],"sourceRoot":""}