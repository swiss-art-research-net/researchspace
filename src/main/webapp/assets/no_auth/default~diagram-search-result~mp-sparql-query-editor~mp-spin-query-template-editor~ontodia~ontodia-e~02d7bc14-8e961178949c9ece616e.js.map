{"version":3,"sources":["webpack:///./src/main/web/components/forms/inputs/InputCommpons.ts"],"names":["InputKind","elementHasInputType","child","kind","isValidChild","type","inputKind","elementIsSingleValueInput","SingleValueInput","CompositeInput","FormSwitch","componentHasInputType","component"],"mappings":"gIAoBA,IAMYA,EANZ,SAiBA,SAAgBC,oBAAoBC,EAAkBC,G,MACpD,OACE,EAAAC,aAAaF,IACW,mBAAfA,EAAMG,OACM,QAAnB,EAACH,EAAMG,YAAY,eAAEC,aAAcH,GAfzC,SAAYH,GACV,iCACA,+BACA,2CACA,2CACA,uCACA,mCANF,CAAYA,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAWrB,0CASA,qCAAgBO,0BAA0BL,GACxC,OAAOD,oBAAoBC,EAAOF,EAAUQ,mBAC1CP,oBAAoBC,EAAOF,EAAUS,iBACrCR,oBAAoBC,EAAOF,EAAUU,aAGzC,iCAAgBC,sBAAsBC,EAAgCT,G,MACpE,OAAyB,QAAlB,EAACS,SAAiB,eAAEN,aAAcH","file":"default~diagram-search-result~mp-sparql-query-editor~mp-spin-query-template-editor~ontodia~ontodia-e~02d7bc14-8e961178949c9ece616e.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ReactNode, ComponentClass } from 'react';\n\nimport { isValidChild } from 'platform/components/utils';\n\n/**\n * Semantic Form input kind. In the past we used constructor check to find the\n * kind of the component but that lead to ugly circular dependencies, so no we just assign input kind to component class as a static value.\n */\nexport enum InputKind {\n  StaticInput,\n  FormSwitch,\n  SingleValueInput,\n  MultiValuesInput,\n  CompositeInput,\n  SemanticForm,\n}\n\nexport type InputReactElement = React.ReactElement<any> & { type: { inputKind: InputKind } };\n\nexport function elementHasInputType(child: ReactNode, kind: InputKind): boolean {\n  return (\n    isValidChild(child) &&\n      typeof child.type === 'function' &&\n      (child.type as any)?.inputKind === kind\n  );\n}\n\n\nexport function elementIsSingleValueInput(child: ReactNode) {\n  return elementHasInputType(child, InputKind.SingleValueInput) ||\n    elementHasInputType(child, InputKind.CompositeInput) ||\n    elementHasInputType(child, InputKind.FormSwitch);\n}\n\nexport function componentHasInputType(component: ComponentClass<any>, kind: InputKind): boolean {\n  return (component as any)?.inputKind === kind;\n}\n"],"sourceRoot":""}