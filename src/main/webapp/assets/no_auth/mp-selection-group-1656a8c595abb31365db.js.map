{"version":3,"sources":["webpack:///./src/main/web/components/ui/selection/SelectionGroupComponent.tsx"],"names":["SelectionGroupContextTypes","getSelectionValue","PropTypes","any","isRequired","onChange","values","getChildContext","tag","render","React","Children","only","this","props","children","childContextTypes","Component","SelectionGroupComponent"],"mappings":"6IAkBA,OACA,OAEA,QAOa,EAAAA,2BAA6B,CACxCC,kBAAmBC,EAAUC,IAAIC,WACjCC,SAAUH,EAAUC,IAAIC,YAsB1B,mG,OAMU,EAAAE,OAAqC,G,EAa/C,OAnB6C,uCAQ3C,kCAAAC,gBAAA,sBACE,OAAO,EAAP,uBACK,YAAMA,gBAAe,YAAE,CAC1BN,kBAAmB,SAACO,GAAQ,SAAKF,OAAOE,KAAQ,GAChDH,SAAU,SAACC,GAAW,OAAC,EAAKA,OAASA,MAIzC,kCAAAG,OAAA,WACE,OAAOC,EAAMC,SAASC,KAAKC,KAAKC,MAAMC,WAhBxB,wBAAAC,kBAAoB,EAAH,uBAC5B,EAAAC,UAAUD,mBACV,EAAAhB,4BAgBP,wBAnBA,CAA6C,EAAAiB,WAAhC,EAAAC,0BAqBb,UAAeA","file":"mp-selection-group-1656a8c595abb31365db.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { Component, ComponentChildContext } from 'platform/api/components';\n\nexport interface SelectionGroupContext {\n  getSelectionValue(tag: string): boolean;\n  onChange(values: { [tag: string]: boolean }): void;\n}\n\nexport const SelectionGroupContextTypes = {\n  getSelectionValue: PropTypes.any.isRequired,\n  onChange: PropTypes.any.isRequired,\n};\n\n/**\n * Stores all selected items, so the <mp-selection-toggle> component will be able to restore\n * its state when it gets re-rendered\n *\n * @example\n * <mp-selection-group>\n *     <div>\n *        <mp-selection-action-choice id='Action' title='With selected ...' selection='example'>\n *            [[!-- Actions --]]\n *        </mp-selection-action-choice>\n *\n *        <mp-selection-toggle selection='example' tag='http://example.com/resource1'>\n *        </mp-selection-toggle>\n *\n *        <mp-selection-toggle selection='example' tag='http://example.com/resource2'>\n *        </mp-selection-toggle>\n *     </div>\n * </mp-selection-group>\n */\nexport class SelectionGroupComponent extends Component<{}, {}> {\n  static readonly childContextTypes = {\n    ...Component.childContextTypes,\n    ...SelectionGroupContextTypes,\n  };\n\n  private values: { [tag: string]: boolean } = {};\n\n  getChildContext(): ComponentChildContext & SelectionGroupContext {\n    return {\n      ...super.getChildContext(),\n      getSelectionValue: (tag) => this.values[tag] || false,\n      onChange: (values) => (this.values = values),\n    };\n  }\n\n  render() {\n    return React.Children.only(this.props.children);\n  }\n}\n\nexport default SelectionGroupComponent;\n"],"sourceRoot":""}