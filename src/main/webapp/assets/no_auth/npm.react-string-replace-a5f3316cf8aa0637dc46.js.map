{"version":3,"sources":["webpack:///./node_modules/react-string-replace/node_modules/lodash/isObjectLike.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_Symbol.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/isArray.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/react-string-replace/index.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/isRegExp.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseIsRegExp.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_root.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_getRawTag.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_objectToString.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseUnary.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/escapeRegExp.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/toString.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseToString.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_arrayMap.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/isSymbol.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/isString.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/flatten.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_arrayPush.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/isArguments.js","webpack:///./node_modules/react-string-replace/node_modules/lodash/_baseIsArguments.js"],"names":["module","exports","isObjectLike","value","Symbol","getRawTag","objectToString","symToStringTag","toStringTag","undefined","baseGetTag","Object","isArray","Array","freeGlobal","global","isRegExp","escapeRegExp","isString","flatten","reactStringReplace","source","match","fn","map","x","replaceString","str","curCharStart","curCharLen","TypeError","re","RegExp","result","split","i","length","baseIsRegExp","baseUnary","nodeUtil","nodeIsRegExp","freeSelf","self","root","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","isOwn","call","tag","unmasked","e","func","freeExports","nodeType","freeModule","freeProcess","process","types","require","binding","reRegExpChar","reHasRegExpChar","string","test","replace","baseToString","arrayMap","isSymbol","symbolProto","symbolToString","array","iteratee","index","baseFlatten","arrayPush","isFlattenable","depth","predicate","isStrict","values","offset","isArguments","spreadableSymbol","isConcatSpreadable","baseIsArguments","propertyIsEnumerable","arguments"],"mappings":"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","file":"npm.react-string-replace-a5f3316cf8aa0637dc46.js","sourcesContent":["/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = require('lodash/isRegExp');\nvar escapeRegExp = require('lodash/escapeRegExp');\nvar isString = require('lodash/isString');\nvar flatten = require('lodash/flatten');\n\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {regexp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re);\n\n  // Apply fn to all odd elements\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n\n  return flatten(source.map(function(x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};\n","var baseIsRegExp = require('./_baseIsRegExp'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n"],"sourceRoot":""}