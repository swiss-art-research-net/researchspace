{"version":3,"sources":["webpack:///./src/main/web/components/sets/CreateSetActionComponent.tsx"],"names":["onSave","selection","name","result","createNewSetFromItems","props","id","map","Rdf","iri","onEnd","closeDialog","render","closeMenu","menuTitle","title","isDisabled","s","length","renderRawDialog","SaveSetDialog","onHide","maxSetSize","maybe","Nothing","defaultProps","Component","CreateSetActionComponent"],"mappings":"6IAsBA,OACA,OACA,QACA,UACA,QAGA,UAIA,gG,OA2BE,EAAAA,OAAS,SAACC,EAAqBC,GAC7B,IAAMC,EAAS,EAAAC,sBAAsB,EAAKC,MAAMC,GAAIJ,EAAMD,EAAUM,IAAI,EAAAC,IAAIC,MAE5E,OADAN,EAAOO,MAAM,EAAAC,aACNR,G,EAEX,OAhCsD,wCAMpD,mCAAAS,OAAA,sBACQ,aAAEX,EAAA,EAAAA,UAAWY,EAAA,EAAAA,UAAWC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,MACzC,OACE,gBAAC,UAA6B,CAC5BD,UAAWA,EACXC,MAAOA,EACPC,WAAY,SAACC,GAAM,OAAa,IAAbA,EAAEC,QACrBC,gBAAiB,SAACF,GAAM,OACtB,gBAAC,EAAAG,cAAa,CACZpB,OAAQ,SAACE,GAAS,SAAKF,OAAOiB,EAAGf,IACjCmB,OAAQ,aAGRC,WAAYC,EAAMC,aAGtBvB,UAAWA,EACXY,UAAWA,KAtBV,yBAAAY,aAAe,CACpBX,UAAW,iBACXC,MAAO,kBA6BX,yBAhCA,CAAsD,EAAAW,W,UAAjCC","file":"mp-create-set-action-2d3d05c26198c4625fe9.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @author Philip Polkovnikov\n */\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport * as maybe from 'data.maybe';\nimport { SaveSetDialog, createNewSetFromItems } from 'platform/components/sets';\nimport { Rdf } from 'platform/api/rdf';\nimport { MenuProps } from 'platform/components/ui/selection/SelectionActionProps';\nimport { AllTitleProps } from './TypedSelectionActionProps';\nimport TypedSelectionActionComponent, { closeDialog } from './TypedSelectionActionComponent';\n\ntype Props = MenuProps & AllTitleProps & { id: string };\n\nexport default class CreateSetActionComponent extends Component<Props, void> {\n  static defaultProps = {\n    menuTitle: 'Create new set',\n    title: 'Create new set',\n  };\n\n  render() {\n    const { selection, closeMenu, menuTitle, title } = this.props;\n    return (\n      <TypedSelectionActionComponent\n        menuTitle={menuTitle}\n        title={title}\n        isDisabled={(s) => s.length === 0}\n        renderRawDialog={(s) => (\n          <SaveSetDialog\n            onSave={(name) => this.onSave(s, name)}\n            onHide={() => {\n              /**/\n            }}\n            maxSetSize={maybe.Nothing<number>()}\n          />\n        )}\n        selection={selection}\n        closeMenu={closeMenu}\n      />\n    );\n  }\n  onSave = (selection: string[], name: string) => {\n    const result = createNewSetFromItems(this.props.id, name, selection.map(Rdf.iri));\n    result.onEnd(closeDialog);\n    return result;\n  };\n}\n"],"sourceRoot":""}