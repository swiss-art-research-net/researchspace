{"version":3,"sources":["webpack:///./src/main/web/components/ui/popover/PopoverComponent.ts"],"names":["OverlayTrigger","createFactory","ReactBootstrap","Popover","render","title","className","children","Children","toArray","this","props","triggerComponent","_","find","child","componentHasType","PopoverTriggerComponent","contentComponent","PopoverContentComponent","triggerChildren","only","contentChildren","popover","id","trigger","placement","rootClose","overlay","cloneElement","onClick","event","stopPropagation","Component","PopoverComponentClass","component","factory"],"mappings":"6IAmBA,OACA,QACA,QAEA,SAEA,UACA,UAEMA,EAAiB,EAAAC,cAAcC,EAAeF,gBAC9CG,EAAU,EAAAF,cAAcC,EAAeC,SAwB7C,+C,+CA2BA,OA3B2C,qCACzC,gCAAAC,OAAA,WACQ,iBAAEC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,UAETC,EAAW,EAAAC,SAASC,QAAQC,KAAKC,MAAMJ,UACvCK,EAAmBC,EAAEC,KAAKP,GAAU,SAACQ,GAAU,SAAAC,iBAAiBD,EAAO,EAAAE,4BACvEC,EAAmBL,EAAEC,KAAKP,GAAU,SAACQ,GAAU,SAAAC,iBAAiBD,EAAO,EAAAI,4BAEvEC,EAAmB,EAAAZ,SAASa,KAAKT,GAAwCD,MAAMJ,SAC/Ee,EAAmB,EAAAd,SAASa,KAAKH,GAAwCP,MAAMJ,SAE/EgB,EAAUpB,EAAQ,CAAEqB,GAAI,aAAcnB,MAAK,EAAEC,UAAS,GAAIgB,GAC1DG,EAAW,EAAAjB,SAASa,KAAKT,GAAwCD,MAAMc,QACvEC,EAAa,EAAAlB,SAASa,KAAKT,GAAwCD,MAAMe,UACzEC,EAAa,EAAAnB,SAASa,KAAKT,GAAwCD,MAAMgB,UAC/E,OAAO3B,EACL,CACE4B,QAASL,EACTE,QAASA,GAAW,CAAC,SACrBC,UAAWA,EACXC,UAAWA,IAAa,GAE1B,EAAAE,aACET,EAAiB,CAACU,QAAS,SAACC,GAA0B,OAAAA,EAAMC,uBAIpE,sBA3BA,CAA2C,EAAAC,WAA9B,EAAAC,wBA8BA,EAAAC,UAAYD,EACZ,EAAAE,QAAU,EAAAnC,cAAc,EAAAkC,WACrC,UAAe,EAAAA","file":"mp-popover-8678cdbc96dc643d017e.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Component, createFactory, Children, ReactElement, cloneElement, SyntheticEvent } from 'react';\nimport * as ReactBootstrap from 'react-bootstrap';\nimport * as _ from 'lodash';\n\nimport { componentHasType } from 'platform/components/utils';\n\nimport { PopoverContentComponent } from './PopoverContentComponent';\nimport { PopoverTriggerComponent } from './PopoverTriggerComponent';\n\nconst OverlayTrigger = createFactory(ReactBootstrap.OverlayTrigger);\nconst Popover = createFactory(ReactBootstrap.Popover);\n\nexport interface Props {\n  /**\n   * Popover title.\n   * If empty/undefined, not title will be visible in the popover.\n   */\n  title: string;\n\n  /**\n   * CSS class for popover root element.\n   */\n  className?: string;\n}\n\n/**\n * @example\n * <mp-popover title=\"my popover\">\n *     <mp-popover-trigger placement=\"left\" trigger='[\"click\",\"hover\",\"focus\"]' root-close='false'>\n *         <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n *     </mp-popover-trigger>\n *     <mp-popover-content>Content</mp-popover-content>\n * </mp-popover>\n */\nexport class PopoverComponentClass extends Component<Props, {}> {\n  render() {\n    const { title, className } = this.props;\n\n    const children = Children.toArray(this.props.children);\n    const triggerComponent = _.find(children, (child) => componentHasType(child, PopoverTriggerComponent));\n    const contentComponent = _.find(children, (child) => componentHasType(child, PopoverContentComponent));\n\n    const triggerChildren = (Children.only(triggerComponent) as ReactElement<any>).props.children;\n    const contentChildren = (Children.only(contentComponent) as ReactElement<any>).props.children;\n\n    const popover = Popover({ id: 'mp-popover', title, className }, contentChildren);\n    const trigger = (Children.only(triggerComponent) as ReactElement<any>).props.trigger;\n    const placement = (Children.only(triggerComponent) as ReactElement<any>).props.placement;\n    const rootClose = (Children.only(triggerComponent) as ReactElement<any>).props.rootClose;\n    return OverlayTrigger(\n      {\n        overlay: popover,\n        trigger: trigger || ['click'],\n        placement: placement,\n        rootClose: rootClose || true,\n      },\n      cloneElement(\n        triggerChildren, {onClick: (event: SyntheticEvent) => event.stopPropagation()}\n      )\n    );\n  }\n}\n\nexport type component = PopoverComponentClass;\nexport const component = PopoverComponentClass;\nexport const factory = createFactory(component);\nexport default component;\n"],"sourceRoot":""}