(window.webpackJsonp=window.webpackJsonp||[]).push([[510],{1317:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),o=n(16),i=n(1),a=n(35),s=n(33),d=n(34),l=n(162),c=n(23),p=n(61),u=n(56),h=n(1581),f=n(116),g=n(327),m=n(630),y=n(2683),v=n(2685),k=function(e){function SemanticTree(t,n){var r=e.call(this,t,n)||this;return r.cancellation=new d.Cancellation,r.querying=r.cancellation.derive(),r.processSparqlResult=function(e){if(p.SparqlUtil.isSelectResultEmpty(e))r.setState({data:[],isLoading:!1});else{var t=r.props,n=t.nodeBindingName,i=t.parentBindingName,a=function transformBindingsToGraph(e){for(var t=e.bindings,n=e.nodeBindingName,r=e.parentBindingName,i=new Map,a=[],s=[],d=0,l=t;d<l.length;d++){var c=l[d],p=c[n].value,u=c[r]?c[r].value:void 0,h=i.get(p);if(h)o.isEmpty(h.data)&&(h.data=c);else{var f={key:p,data:c,children:new Set};i.set(p,f),a.push(f)}"string"==typeof u&&s.push({parent:u,child:p})}for(var g=0,m=s;g<m.length;g++){var y=m[g],v=(u=y.parent,y.child),k=i.get(v),T=i.get(u);T||(T=synthesizeParentNode(u,n),i.set(u,T),a.push(T)),T.children.add(k)}return{map:i,nodes:a}}({bindings:e.results.bindings,nodeBindingName:n,parentBindingName:i});h.breakGraphCycles(a.nodes);var d=r.findRoots(a),l=d.roots,c=d.notFound,u=makeImmutableForest(l);if(0===c.length)r.setState({data:u,isLoading:!1});else{var f=c.map((function(e){return"'"+e+"'"})).join(", ");r.setState({data:u,isLoading:!1,errorMessage:s.Just("Expected roots not found: "+f)})}}},r.onNodeClick=function(e){},r.state={isLoading:!0,errorMessage:s.Nothing()},r}return r.__extends(SemanticTree,e),SemanticTree.prototype.componentDidMount=function(){this.loadData(this.props)},SemanticTree.prototype.componentWillReceiveProps=function(e){e.query!==this.props.query&&this.loadData(e)},SemanticTree.prototype.componentWillUnmount=function(){this.cancellation.cancelAll()},SemanticTree.prototype.loadData=function(e){var t=this,n=this.context.semanticContext;this.querying=this.cancellation.deriveAndCancel(this.querying);var r=this.querying.map(p.SparqlClient.select(e.query,{context:n})).onError((function(e){return t.setState({isLoading:!1,errorMessage:s.Just(e)})})).onValue(this.processSparqlResult).onEnd((function(){t.props.id&&l.trigger({eventType:l.BuiltInEvents.ComponentLoaded,source:e.id})}));e.id&&l.trigger({eventType:l.BuiltInEvents.ComponentLoading,source:this.props.id,data:r})},SemanticTree.prototype.render=function(){return this.state.errorMessage.isJust?i.createElement(f.ErrorNotification,{errorMessage:this.state.errorMessage.get()}):this.state.isLoading?i.createElement(g.Spinner):this.renderTree()},SemanticTree.prototype.renderTree=function(){var e=this.state.data;if(0===e.length)return i.createElement(m.TemplateItem,{template:{source:this.props.noResultTemplate}});var t={tupleTemplate:this.handleDeprecatedLayout(),onNodeClick:this.onNodeClick,nodeData:e,nodeKey:"key",collapsed:this.props.collapsed,keysOpened:this.props.keysOpened},n=this.props,o=n.provider,s=n.d3TreeOptions;return"d3-sankey"===o||"d3-dendrogram"===o||"d3-collapsible-tree"===o?i.createElement(v.D3Tree,r.__assign(r.__assign({},t),{provider:o,options:s})):("string"==typeof o&&"html"!==o&&console.warn("Unknown semantic tree provider '"+o+"'"),a.div({},i.createElement(y.Tree,t)))},SemanticTree.prototype.findRoots=function(e){return o.isEmpty(this.props.roots)?{roots:h.findRoots(e.nodes),notFound:[]}:function findExpectedRoots(e,t){for(var n=e.map,r=new Set,o=[],i=0,a=t;i<a.length;i++){var s=a[i],d=n.get(s);d?r.add(d):o.push(s)}return{roots:r,notFound:o}}(e,this.props.roots)},SemanticTree.prototype.handleDeprecatedLayout=function(){return o.has(this.props,"layout")?(console.warn("layout property in semantic-tree is deprecated, please use flat properties instead"),this.props.layout.tupleTemplate):this.props.tupleTemplate},SemanticTree.defaultProps={provider:"html",parentBindingName:"parent",nodeBindingName:"node",roots:[],keysOpened:[],tupleTemplate:'<semantic-link iri="{{node.value}}"></semantic-link>'},SemanticTree}(u.Component);function synthesizeParentNode(e,t){var n;return{key:e,data:(n={},n[t]=c.Rdf.iri(e),n),children:new Set}}function makeImmutableForest(e){return Array.from(e,makeImmutableNode)}function makeImmutableNode(e){return{key:e.key,data:e.data,children:makeImmutableForest(e.children)}}t.SemanticTree=k,t.default=k},2683:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r=n(11),o=n(1),i=n(35),a=n(16),s=n(2684),d=n(7),l=n(630);n(1324);var c=n(1325),p=function(e){function Tree(t,n){var p=e.call(this,t,n)||this;return p.collectOpenKeys=function(e){return a.reduce(e,(function(e,t){return p.nodeHasChildren(t)&&p.hasNestedOpenedKey(t)?e.concat(p.collectOpenKeys(t.children).concat([p.getNodeKey(t)])):e}),[])},p.getNodeKey=function(e){return e[p.props.nodeKey]},p.getAllKeys=function(e){return e.children?a.reduce(e.children,(function(e,t){return e.concat(p.getAllKeys(t))}),[e[p.props.nodeKey]]):[p.getNodeKey(e)]},p.handleClick=function(e,t){p.props.onNodeClick&&p.props.onNodeClick(e),p.setState({activeNode:e})},p.handleCollapsibleClick=function(e){p.setState((function(t){var n=p.state.collapsedBookkeeping;return n[e]=!n[e],{collapsedBookkeeping:n}}))},p.getTrees=function(e){return e.map((function(e,t){return p.renderNode(e,t)}))},p.renderNode=function(e,t){var n=o.createElement(l.TemplateItem,{template:{source:p.props.tupleTemplate,options:r.__assign(r.__assign({},e),e.data)}}),d=p.nodeHasChildren(e),c=a.isUndefined(p.props.nodeKey)?t:e[p.props.nodeKey],u=d&&!p.isCollapsed(c,e)?p.getTrees(e.children):null,h=p.isCollapsed(c,e),f=i.span({key:p.key+c+t,className:p.getCssClassesForNode(u,p.state.activeNode===e),onClick:p.handleClick.bind(null,e)},n);return d?o.createElement(s,{key:c+h,nodeLabel:f,collapsed:h,onClick:p.handleCollapsibleClick.bind(null,c)},u):f},p.nodeHasChildren=function(e){return!a.isUndefined(e.children)&&!a.isEmpty(e.children)},p.getCssClassesForNode=function(e,t){var n=e?c.treeNode:c.leafNode;return t?d([n,c.activeNode]):n},p.isCollapsed=function(e,t){return p.state.collapsedBookkeeping[e]},p.hasNestedOpenedKey=function(e){if(a.includes(p.props.keysOpened,p.getNodeKey(e)))return!0;if(a.isUndefined(e.children))return!1;for(var t in e.children)if(p.hasNestedOpenedKey(e.children[t]))return!0;return!1},p.key=Math.random().toString(36).slice(2),p.state={collapsedBookkeeping:{}},p}return r.__extends(Tree,e),Tree.prototype.render=function(){return i.div({className:c.tree},this.getTrees(this.props.nodeData))},Tree.prototype.componentWillMount=function(){var e=this,t={},n=a.reduce(this.props.nodeData,(function(t,n){return t.concat(e.getAllKeys(n))}),[]);a.forEach(n,(function(n){t[n]=e.props.collapsed})),this.props.collapsed&&a.forEach(this.collectOpenKeys(this.props.nodeData),(function(e){t[e]=!1})),this.setState({collapsedBookkeeping:t})},Tree}(o.Component);t.Tree=p,t.default=p},2685:function(e,t,n){Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(11),i=n(1),a=n(20),s=n(56),d=n(630),l=n(1326);var c=function(e){function D3Tree(t,n){var r=e.call(this,t,n)||this;return r.onUnmount=[],r.treeRendered=!1,r.unmounted=!1,r.onMount=function(e){r.root=e,r.tryRenderTree()},r.openedKeys=new Set(t.keysOpened),r}return o.__extends(D3Tree,e),D3Tree.prototype.render=function(){return i.createElement("div",{className:l.root,ref:this.onMount})},D3Tree.prototype.componentDidMount=function(){var e=this;r||function loadD3(){return Promise.all([Promise.resolve().then((function(){return n(2686)})),Promise.resolve().then((function(){return n(2687)})),Promise.resolve().then((function(){return n(2695)}))]).then((function(e){var t=e[0],n=e[1],i=e[2];r=o.__assign(o.__assign(o.__assign({},t),n),i)}))}().then((function(){e.unmounted||e.tryRenderTree()}))},D3Tree.prototype.componentWillUnmount=function(){for(var e=0,t=this.onUnmount;e<t.length;e++){(0,t[e])()}this.onUnmount.length=0,this.unmounted=!0},D3Tree.prototype.tryRenderTree=function(){this.treeRendered||r&&this.root&&this.drawTree(r,this.root)},D3Tree.prototype.drawTree=function(e,t){var n=this,r=this.createRenderer(e),redraw=function(){e.select(t).selectAll("svg").remove();var o=n.props.options,i=o.minHeight,a=void 0===i?300:i,s=o.nodeWidth,d=void 0===s?120:s,l=o.nodeHeight,c=void 0===l?25:l,p=o.nodeLeftMargin,u=void 0===p?8:p;r({selector:t,props:n.props,openedKeys:n.openedKeys,width:t.clientWidth,marginTop:0,marginBottom:0,minHeight:a,nodeWidth:d,nodeHeight:c,nodeLeftMargin:u,componentContext:n.context})};window.addEventListener("resize",redraw),this.onUnmount.push((function(){window.removeEventListener("resize",redraw),e.select(t).select("svg").remove()})),redraw()},D3Tree.prototype.createRenderer=function(e){var t=this.props,n=t.provider,r=t.nodeData;if("d3-dendrogram"===n){var i=r.map(convertDataToD3Dendrogram);return function(t){i.forEach((function(n,r,i){return function dendrogram(e,t,n){var r=computeDendrogramMargin(n),o={width:computeEffectiveWidth(t,n,r.left+r.right),height:computeEffectiveHeight(t,n,r.top+r.bottom),radius:5,selector:n.selector||null},i=e.select(n.selector).append("svg").attr("width",o.width).attr("height",o.height).append("g").attr("transform","translate("+r.left+","+r.top+")"),a=e.layout.cluster().size([o.height-r.top-r.bottom,o.width-r.left-r.right]),s=a.nodes(t),d=a.links(s),l=e.svg.diagonal().projection((function(e){return[e.y,e.x]}));i.selectAll(".link").data(d).enter().append("path").attr("class","link").attr("d",l);var c=i.selectAll(".node").data(s).enter().append("g").attr("class","node").attr("transform",(function(e){return"translate("+e.y+","+e.x+")"}));c.append("circle").attr("class","node-circle").attr("r",o.radius),appendDendrogramNode(c,n)}(e,n,o.__assign(o.__assign({},t),{minHeight:t.minHeight/i.length,marginTop:0===r?20:0,marginBottom:r===i.length-1?20:0}))}))}}if("d3-collapsible-tree"===n){var a=r.map(convertDataToD3Dendrogram);return function(t){a.forEach((function(n,r,i){return function collapsibleDendrogram(e,t,n){function onClick(e){toggleExpanded(e,n.openedKeys),update(e)}function onDoubleClick(e){e.parent&&(toggleExpanded(e.parent,n.openedKeys),update(e.parent))}var r=n.nodeLeftMargin+n.nodeWidth;function setFixedNodeDepth(e){e.forEach((function(e){e.y=e.depth*r}))}var o=computeDendrogramMargin(n),i={radius:5,selector:n.selector};function computeLayout(){var r={width:computeEffectiveWidth(t,n,o.left+o.right),height:computeEffectiveHeight(t,n,o.top+o.bottom)},i=e.layout.cluster().size([r.height-o.top-o.bottom,r.width-o.left-o.right]),a=i.nodes(t);return{size:r,nodes:a,links:i.links(a)}}var a=computeLayout(),s=a.size,d=a.nodes,l=a.links;setFixedNodeDepth(d);var c=e.svg.diagonal().projection((function(e){return[e.y,e.x]})),p=e.select(i.selector,"dendrogram").append("svg").attr("width",s.width).attr("height",s.height),u=p.append("g").attr("transform","translate("+o.left+","+o.top+")");u.selectAll(".link").data(l).enter().append("path").attr("class","link").attr("d",c);var h=u.selectAll(".node").data(d).enter().append("g").attr("class","node").attr("transform",(function(e){return"translate("+e.y+","+e.x+")"})).on("click",onClick);h.append("circle").attr("class","node-circle").attr("r",(function(e){return 4*(1+e.value/12)||i.radius})),appendDendrogramNode(h,n);var f=t;f.x0=s.height/4,f.y0=0,n.props.collapsed&&(collapse(f),function expandKeys(e,t){var n=t.has(e.name);if(e.children||e._children)for(var r=0,o=e.children||e._children;r<o.length;r++){var i=o[r];expandKeys(i,t)&&(n=!0)}n&&!e.children&&toggleExpanded(e);return n}(f,n.openedKeys));function update(e){var t=computeLayout();setFixedNodeDepth(t.nodes),p.transition().duration(750).attr("width",t.size.width).attr("height",t.size.height);var r=0,o=u.selectAll("g.node").data(t.nodes,(function(e){return e.id||(e.id=++r)})),a=o.enter().append("g").attr("class","node").attr("transform",(function(t){return"translate("+e.y0+","+e.x0+")"})).on("click",onClick).on("dblclick",onDoubleClick);a.append("circle").attr("class",(function(e){return e._children?"node-circle-children":"node-circle"})).attr("r",(function(e){return 4*(1+e.value/12)||i.radius})),appendDendrogramNode(a,n).style("fill-opacity",1e-6);var s=o.transition().duration(750).attr("transform",(function(e){return"translate("+e.y+","+e.x+")"}));s.select("circle").attr("class",(function(e){return e._children?"node-circle-children":"node-circle"})).attr("r",(function(e){return 4*(1+e.value/12)||i.radius})),s.select("text").attr("text","node-text").style("fill-opacity",1);var d=o.exit().transition().duration(750).attr("transform",(function(t){return"translate("+e.y+","+e.x+")"})).remove();d.select("circle").attr("class","node-circle").attr("r",(function(e){return 4*(1+e.value/12)||i.radius})),d.select("text").attr("text","node-text").style("fill-opacity",1e-6);var l=u.selectAll("path.link").data(t.links,(function(e){return e.target.id}));l.enter().insert("path","g").attr("class","link").attr("d",(function(t){var n={x:e.x0,y:e.y0};return c({source:n,target:n})})),l.transition().duration(750).attr("d",c),l.exit().transition().duration(750).attr("d",(function(t){var n={x:e.x,y:e.y};return c({source:n,target:n})})).remove(),t.nodes.forEach((function(e){e.x0=e.x,e.y0=e.y}))}update(f)}(e,n,o.__assign(o.__assign({},t),{minHeight:t.minHeight/i.length,marginTop:0===r?20:0,marginBottom:r===i.length-1?20:0}))}))}}if("d3-sankey"===n){var s=function convertDataToD3Sankey(e){var t=[],n=[],r={},o=0,traverse=function(e){if("number"!=typeof r[e.key]){t.push({key:e.key,data:e.data,label:e.key,name:e.key}),r[e.key]=o++;for(var i=0,a=e.children?e.children:[];i<a.length;i++){var s=a[i];traverse(s),n.push({source:r[e.key],target:r[s.key]})}}};return e.forEach(traverse),{nodes:t,links:n}}(r);return function(t){return function sankey(e,t,n){for(var r={top:n.marginTop,bottom:n.marginBottom,left:120,right:200},o={width:n.width,height:n.height||n.minHeight,selector:n.selector},i=t.links,a=0;a<i.length;a++)i[a].value=2;e.sankey().nodeWidth(15).nodePadding(10).size([o.width-r.left-r.right,o.height-r.top-r.bottom])(t);var s=e.select(o.selector,"sankey").append("svg").attr("width",o.width).attr("height",o.height).append("g").attr("transform","translate("+r.left+","+r.top+")"),d=e.scaleOrdinal(e.schemeCategory10);s.append("g").attr("class","links").selectAll("path").data(t.links).enter().append("path").attr("d",e.sankeyLinkHorizontal()).attr("stroke-width",(function(e){return Math.max(1,e.width)})).append("title").text((function(e){return"no title"}));var l=s.append("g").attr("class","nodes").selectAll("g").data(t.nodes).enter().append("g").attr("class","node");l.append("rect").attr("x",(function(e){return e.x0})).attr("y",(function(e){return e.y0})).attr("width",(function(e){return e.x1-e.x0})).attr("height",(function(e){return e.y1-e.y0})).attr("fill",(function(e){return d(e.name)})).attr("opacity",.5),l.append((function(e){return createTemplateAsForeignObject(n,e.data)})).attr("class","node-text").attr("x",(function(e){return e.x1+6})).attr("y",(function(e){return(e.y1+e.y0-n.nodeHeight)/2})),l.append("title").text((function(e){return"no title"}))}(e,s,o.__assign(o.__assign({},t),{marginTop:20,marginBottom:20}))}}throw new Error("Unknown D3 tree provider '"+n+"'")},D3Tree.defaultProps={options:{}},D3Tree}(s.Component);function convertDataToD3Dendrogram(e){return{name:e.key,data:e.data,children:e.children?e.children.map(convertDataToD3Dendrogram):[]}}function appendDendrogramNode(e,t){return e.append((function(e){return createTemplateAsForeignObject(t,e.data)})).attr("class","node-text").attr("x",(function(e){return t.nodeLeftMargin})).attr("y",-t.nodeHeight/2)}function collapse(e){e.children&&(e._children=e.children,e.children=null,e._children.forEach(collapse))}function toggleExpanded(e,t){e.children?(e._children=e.children,e.children=null,t&&t.delete(e.name)):e._children&&(e.children=e._children,e._children=null,t&&t.add(e.name))}function computeDendrogramMargin(e){return{top:e.marginTop,bottom:e.marginBottom,left:e.nodeLeftMargin+e.nodeWidth/2,right:e.nodeLeftMargin+2*e.nodeWidth}}function computeEffectiveWidth(e,t,n){var r=function estimateTotalWidth(e,t){var n=t.nodeWidth;if(e.children){for(var r=0,o=0,i=e.children;o<i.length;o++){var a=i[o];r=Math.max(r,estimateTotalWidth(a,t))}r>0&&(n+=t.nodeLeftMargin+r)}return n}(e,t)+n;return Math.max(r,t.width)}function computeEffectiveHeight(e,t,n){var r;"number"==typeof t.height?r=t.height:r=function estimateTotalHeight(e,t){var n=0;if(e.children)for(var r=0,o=e.children;r<o.length;r++){var i=o[r];n+=estimateTotalHeight(i,t)}return Math.max(n,t)}(e,t.nodeHeight)+n;return Math.max(r,t.minHeight)}function createTemplateAsForeignObject(e,t){var n=document.createElementNS("http://www.w3.org/2000/svg","foreignObject"),r=e.nodeWidth,o=e.nodeHeight;e.props;return n.setAttribute("width",String(r)),n.setAttribute("height",String(o)),a.render(i.createElement(p,{config:e,data:t}),n),n}t.D3Tree=c;var p=function(e){function NodeCell(){return null!==e&&e.apply(this,arguments)||this}return o.__extends(NodeCell,e),NodeCell.prototype.getChildContext=function(){var e=this.props.config.componentContext,t={};for(var n in e)e.hasOwnProperty(n)&&NodeCell.childContextTypes[n]&&(t[n]=e[n]);return t},NodeCell.prototype.render=function(){var e=this.props,t=e.config,n=t.nodeWidth,r=t.nodeHeight,a=t.props,s=e.data;return i.createElement("div",{className:"node-cell",style:{width:n,height:r}},i.createElement(d.TemplateItem,{template:{source:a.tupleTemplate,options:o.__assign({data:s},s)}}))},NodeCell.childContextTypes=s.ContextTypes,NodeCell}(s.Component)}}]);
//# sourceMappingURL=semantic-tree-4774801b259d36d69ec5.js.map