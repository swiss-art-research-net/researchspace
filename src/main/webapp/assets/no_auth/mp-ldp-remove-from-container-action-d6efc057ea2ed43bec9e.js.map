{"version":3,"sources":["webpack:///./src/main/web/components/ldp/RemoveFromContainerAction.ts"],"names":["deleteItem","LdpService","props","container","context","semanticContext","deleteResource","Rdf","iri","onValue","postAction","refresh","navigateToResource","v","render","child","Children","only","this","children","onClick","cloneElement","defaultProps","Component","component","RemoveFromContainerComponent","factory","createFactory"],"mappings":"6IAmBA,OAEA,QACA,QACA,SACA,QAYA,oG,OAaU,EAAAA,WAAa,WACnB,IAAI,EAAAC,WAAW,EAAKC,MAAMC,UAAW,EAAKC,QAAQC,iBAC/CC,eAAe,EAAAC,IAAIC,IAAI,EAAKN,MAAMM,MAClCC,SAAQ,WACuB,WAA1B,EAAKP,MAAMQ,WACb,EAAAC,UAEA,EAAAC,mBAAmB,EAAAL,IAAIC,IAAI,EAAKN,MAAMQ,aAAaD,SAAQ,SAACI,GAAM,OAAAA,S,EAI5E,OAxB2C,4CAKlC,uCAAAC,OAAP,WACE,IAAMC,EAAQ,EAAAC,SAASC,KAAKC,KAAKhB,MAAMiB,UACjCjB,EAAQ,CACZkB,QAASF,KAAKlB,YAEhB,OAAO,EAAAqB,aAAaN,EAAOb,IATf,6BAAAoB,aAAe,CAC3BZ,WAAY,UAsBhB,6BAxBA,CAA2C,EAAAa,WA2B9B,EAAAC,UAAYC,EACZ,EAAAC,QAAU,EAAAC,cAAc,EAAAH,WACrC,UAAe,EAAAA","file":"mp-ldp-remove-from-container-action-d6efc057ea2ed43bec9e.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, Â© Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { ReactElement, cloneElement, Children, Props as ReactProps, createFactory } from 'react';\n\nimport { Component } from 'platform/api/components';\nimport { Rdf } from 'platform/api/rdf';\nimport { LdpService } from 'platform/api/services/ldp';\nimport { refresh, navigateToResource } from 'platform/api/navigation';\n\ninterface Props extends ReactProps<RemoveFromContainerComponent> {\n  container: string;\n  iri: string;\n\n  /**\n   * @default 'reload'\n   */\n  postAction?: 'reload' | string;\n}\n\nclass RemoveFromContainerComponent extends Component<Props, {}> {\n  public static defaultProps = {\n    postAction: 'reload',\n  };\n\n  public render() {\n    const child = Children.only(this.props.children) as ReactElement<any>;\n    const props = {\n      onClick: this.deleteItem,\n    };\n    return cloneElement(child, props);\n  }\n\n  private deleteItem = () => {\n    new LdpService(this.props.container, this.context.semanticContext)\n      .deleteResource(Rdf.iri(this.props.iri))\n      .onValue(() => {\n        if (this.props.postAction === 'reload') {\n          refresh();\n        } else {\n          navigateToResource(Rdf.iri(this.props.postAction)).onValue((v) => v);\n        }\n      });\n  };\n}\n\nexport type component = RemoveFromContainerComponent;\nexport const component = RemoveFromContainerComponent;\nexport const factory = createFactory(component);\nexport default component;\n"],"sourceRoot":""}