{"version":3,"sources":["webpack:///./src/main/web/components/sparql-editor/index.ts","webpack:///./src/main/web/components/sparql-editor/SparqlEditor.ts"],"names":["props","__componentWillRecieveProps","debounce","nextProps","normalizeLineEndings","query","this","getQuery","value","setBackdrop","backdrop","setValue","onMouseClick","e","__onMouseClick","coords","left","clientX","document","documentElement","scrollLeft","top","clientY","scrollTop","resourceIri","getResourceIriFromToken","token","prefixes","type","prefixKey","resource","prefix","Rdf","iri","resolveIris","string","fullIri","length","findKey","undefined","yasqe","getTokenAt","coordsChar","setState","targetTop","targetLeft","onChange","doc","change","origin","show","isUndefined","state","enablePopover","id","Math","random","toString","slice","componentDidMount","autocompleters","YASQE","indexOf","GET_REGISTERED_PREFIXES","completerName","completer","persistent","findDOMNode","syntaxErrorCheck","setOption","clearGutter","on","size","setSize","w","h","wrapper","getWrapperElement","addEventListener","componentWillReceiveProps","componentWillUnmount","removeEventListener","renderPopover","popoverTemplate","content","createElement","TemplateItem","template","source","options","Overlay","TargetedPopover","popoverSide","arrowAlignment","render","D","div","className","styles","sparqlEditor","getValue","queryType","getQueryType","queryMode","getQueryMode","defaultProps","Component","str","replace","SparqlEditor"],"mappings":"uIAmBA,yB,kFCAA,OACA,QACA,QACA,UACA,QACA,QAEA,SACA,QACA,SACA,SACA,UAEA,QAEA,cAmDA,cAQE,sBAAYA,GAAZ,MACE,YAAMA,IAAM,K,OAqEN,EAAAC,4BAA8B,EAAAC,UAAS,SAA8BC,GACvEC,qBAAqBD,EAAUE,SAAWD,qBAAqBE,KAAKC,WAAWC,SACjFF,KAAKG,YAAYN,EAAUO,UAC3BJ,KAAKK,SAASR,EAAUE,WAWpB,EAAAO,aAAe,SAACC,GACtB,EAAKC,eAAeD,IAGd,EAAAC,eAAiB,EAAAZ,UAAS,SAACW,GACjC,IAAME,EAAS,CACbC,KAAMH,EAAEI,QAAUC,SAASC,gBAAgBC,WAC3CC,IAAKR,EAAES,QAAUJ,SAASC,gBAAgBI,WAGtCC,EAuEV,SAASC,wBAAwBC,GACvB,IAAAC,EAAA,QAAAA,SACR,GAAmB,aAAfD,EAAME,KAAqB,CACvB,0BAACC,EAAA,KAAWC,EAAA,KAClB,GAAIA,EAAU,CACZ,IAAMC,EAASJ,EAASE,GACxB,GAAIE,EACF,OAAO,EAAAC,IAAIC,IAAI,GAAGF,EAASD,GAE7B,IACE,OAAO,EAAAI,YAAY,CAACR,EAAMS,SAAS,GACnC,SACA,cAGC,GAAmB,eAAfT,EAAME,KAAuB,CACtC,IAAM,EAAc,EAAAI,IAAII,QAAQV,EAAMS,QACtC,IAAK,EAAY3B,MAAM6B,OACrB,OAGF,OADMR,EAAY,EAAAS,QAAQX,GAAU,SAACI,GAAW,OAAAA,IAAW,EAAYvB,eACpD+B,EAAY,EAEjC,OA9FsBd,CADN,EAAKe,MAAMC,WAAW,EAAKD,MAAME,WAAW3B,KAE1D,EAAK4B,SAAS,CAAEnB,YAAW,EAAEoB,UAAW7B,EAAOM,IAAKwB,WAAY9B,EAAOC,SACtE,KAwCK,EAAAL,SAAW,SAACN,GACG,iBAAVA,GACT,EAAKmC,MAAM7B,SAASN,IAIhB,EAAAyC,SAAW,SAACC,EAAKC,GAEnB,EAAKhD,MAAM8C,UAA8B,aAAlBE,EAAOC,QAChC,EAAKjD,MAAM8C,SAAS,EAAKvC,aAIrB,EAAAE,YAAc,SAACyC,GACrB,EAAKV,MAAM/B,aAAY,EAAA0C,YAAYD,IAAgBA,IApJnD,EAAKE,MAAQ,CACXR,UAAW,EACXC,WAAY,EACZQ,eAAe,GAEjB,EAAKC,GAAKC,KAAKC,SAASC,SAAS,IAAIC,MAAM,G,EAiJ/C,OAhKkC,4BAkBhC,uBAAAC,kBAAA,WAIE,GAAIrD,KAAKN,MAAM4D,gBAEb,GADAC,EAAgB,SAAkB,eAAIvD,KAAKN,MAAM4D,eAC7CtD,KAAKN,MAAM4D,eAAeE,QAAQ,aAAe,EAAG,CACtDD,EAAsB,eAAY,SAAa,UAAI,EAAAE,wBAGnD,IAAM,EAAYF,EAAsB,eAAElC,SAC1CkC,EAAsB,eAAElC,SAAW,SAACa,EAAOwB,GACzC,IAAMC,EAAY,EAAUzB,EAAOwB,GAEnC,OADAC,EAAUC,WAAa,KAChBD,SAMXJ,EAAgB,SAAkB,eAAI,CAAC,aAGzCvD,KAAKkC,MAAQqB,EAAM,EAAAM,YAAY7D,MAAkB,CAC/CI,SAAU,EACVF,MAAOF,KAAKN,MAAMK,MAClB6D,WAAY5D,KAAKN,MAAMkE,WAAa5D,KAAKN,MAAMkE,WAAa,QAO1B,IAAhC5D,KAAKN,MAAMoE,mBACb9D,KAAKkC,MAAM6B,UAAU,oBAAoB,GACzC/D,KAAKkC,MAAM8B,YAAY,mBAGrBhE,KAAKN,MAAM8C,UACbxC,KAAKkC,MAAM+B,GAAG,SAAUjE,KAAKwC,UAG3BxC,KAAKN,MAAMwE,MACblE,KAAKkC,MAAMiC,QAAQnE,KAAKN,MAAMwE,KAAKE,EAAGpE,KAAKN,MAAMwE,KAAKG,GAKxDrE,KAAKG,YAAYH,KAAKN,MAAMU,UAE5B,IAAMkE,EAAUtE,KAAKkC,MAAMqC,oBACvBD,GACFA,EAAQE,iBAAiB,QAASxE,KAAKM,eAI3C,uBAAAmE,0BAAA,SAA0B5E,GACxBG,KAAKL,4BAA4BE,IAUnC,uBAAA6E,qBAAA,WACE,IAAMJ,EAAUtE,KAAKkC,MAAMqC,oBACvBD,GACFA,EAAQK,oBAAoB,QAAS3E,KAAKM,eAkBtC,uBAAAsE,cAAR,WACU,IAAAC,EAAA,WAAAA,gBACF,aAAE3D,EAAA,EAAAA,YAAaoB,EAAA,EAAAA,UAAWC,EAAA,EAAAA,WAAYQ,EAAA,EAAAA,cAC5C,IAAK7B,IAAgB6B,EACnB,OAAO,KAET,IAAM+B,EAAU,EAAAC,cAAc,EAAAC,aAAc,CAC1CC,SAAU,CAAEC,OAAQL,EAAiBM,QAAS,CAAExD,IAAKT,EAAYhB,UAEnE,OAAO,EAAA6E,cACL,EAAAK,QACA,CAAExC,MAAM,GACR,EAAAmC,cACE,EAAAM,gBACA,CACErC,GAAI,wBACJV,UAAS,EACTC,WAAU,EACV+C,YAAa,SACbC,eAAgB,UAElBT,KAKN,uBAAAU,OAAA,WACE,OAAOC,EAAEC,IAAI,CAAE1C,GAAIhD,KAAKgD,GAAI2C,UAAWC,EAAOC,cAAgB7F,KAAK4E,kBAGrE,uBAAA3E,SAAA,WACE,MAAO,CACLC,MAAOF,KAAKkC,MAAM4D,WAClBC,UAAW/F,KAAKkC,MAAM8D,eACtBC,UAAWjG,KAAKkC,MAAMgE,iBA3InB,aAAAC,aAA2C,CAChDtB,gBAnD6B,iQAiNjC,aAhKA,CAAkC,EAAAuB,WAsKlC,SAAStG,qBAAqBuG,GAC5B,OAAKA,EAGEA,EAAIC,QAAQ,WAAY,MAFtBD,EAxKE,EAAAE","file":"default~field-editor~mp-sparql-query-editor~mp-spin-query-editor~mp-spin-query-template-editor-7a8e9fed23d147f6399f.js","sourcesContent":["/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport * from './SparqlEditor';\n","/**\n * ResearchSpace\n * Copyright (C) 2020, © Trustees of the British Museum\n * Copyright (C) 2015-2019, metaphacts GmbH\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Props as ReactProps, Component, createElement } from 'react';\nimport * as D from 'react-dom-factories';\nimport { findDOMNode } from 'react-dom';\nimport * as YASQE from 'yasgui-yasqe';\nimport { isUndefined, debounce, findKey } from 'lodash';\nimport { Overlay } from 'react-bootstrap';\n\nimport { GET_REGISTERED_PREFIXES } from 'platform/api/services/namespace';\nimport { Rdf } from 'platform/api/rdf';\nimport { resolveIris } from 'platform/api/sparql/SparqlUtil';\nimport { TemplateItem } from 'platform/components/ui/template';\nimport { TargetedPopover } from 'platform/components/ui/TargetedPopover';\n\nimport 'yasgui-yasqe/dist/yasqe.css';\n\nimport * as styles from './SparqlEditor.scss';\n\nconst DEFAULT_POPOVER_TEMPLATE = `\n<div style=\"white-space: normal\">\n<strong><mp-label iri=\"{{iri}}\"></mp-label></strong><br/>\n<semantic-query query=\"SELECT ?description WHERE { <{{iri}}> rdfs:comment|<http://schema.org/description> ?description } LIMIT 1\"></semantic-query>\n</div>\n`;\n\nexport interface YasqeValue {\n  value: string;\n  queryType: string;\n  queryMode: string;\n}\n\nexport interface SparqlEditorProps extends ReactProps<SparqlEditor> {\n  onChange?: (value: YasqeValue) => void;\n  onBlur?: (value: YasqeValue) => void;\n  backdrop?: boolean;\n  query?: string;\n  size?: { h: number; w: number };\n  // built-in autocompleters are \"prefixes\", \"properties\", \"classes\", \"variables\"\n  autocompleters?: string[];\n  /**\n   * Function returning a string that will be used to identify\n   * cached queries / prefixes from the local storage. If null, it will be used\n   * Default: null (since otherwise it will spam local storage if used as a input component\n   * i.e. in some forms spread over several instances.)\n   *\n   */\n  persistent?: () => string;\n\n  /**\n   * Whether syntax erros should be checked and visually indicated.\n   * Default: true\n   */\n  syntaxErrorCheck?: boolean;\n\n  /**\n   * Defines the popover content, expects {{iri}} as a context variable.\n   */\n  popoverTemplate?: string;\n}\n\nexport interface State {\n  resourceIri?: Rdf.Iri;\n  targetTop?: number;\n  targetLeft?: number;\n  enablePopover?: boolean;\n}\n\nexport class SparqlEditor extends Component<SparqlEditorProps, State> {\n  static defaultProps: Partial<SparqlEditorProps> = {\n    popoverTemplate: DEFAULT_POPOVER_TEMPLATE,\n  };\n\n  private yasqe: YasguiYasqe.Yasqe;\n  private id: string;\n\n  constructor(props: SparqlEditorProps) {\n    super(props);\n    this.state = {\n      targetTop: 0,\n      targetLeft: 0,\n      enablePopover: false,\n    };\n    this.id = Math.random().toString(36).slice(2);\n  }\n\n  componentDidMount() {\n    // bad hack, however, YASQE does extend a default autocompleters array\n    // with the autocompleters passed in through options using $extend, which apparently\n    // does not overwrite the entire array but replaces values in order\n    if (this.props.autocompleters) {\n      YASQE['defaults']['autocompleters'] = this.props.autocompleters;\n      if (this.props.autocompleters.indexOf('prefixes') > -1) {\n        YASQE['Autocompleters']['prefixes']['fetchFrom'] = GET_REGISTERED_PREFIXES;\n        // Workaround for disabling caching of prefixes\n        // YASQE doesn't support overriding the persistent option\n        const _prefixes = YASQE['Autocompleters'].prefixes;\n        YASQE['Autocompleters'].prefixes = (yasqe, completerName) => {\n          const completer = _prefixes(yasqe, completerName);\n          completer.persistent = null;\n          return completer;\n        };\n      }\n    } else {\n      // by default we only support variables, since prefixes issues\n      // calls against external services\n      YASQE['defaults']['autocompleters'] = ['variables'];\n    }\n\n    this.yasqe = YASQE(findDOMNode(this) as Element, {\n      backdrop: 0,\n      value: this.props.query,\n      persistent: this.props.persistent ? this.props.persistent : null,\n    });\n\n    /*\n      Disabling syntax error check AFTER the node has been initialized.\n      Setting 'syntaxErrorCheck' in the constructor may lead to race conditions.\n    */\n    if (this.props.syntaxErrorCheck === false) {\n      this.yasqe.setOption('syntaxErrorCheck', false);\n      this.yasqe.clearGutter('gutterErrorBar');\n    }\n\n    if (this.props.onChange) {\n      this.yasqe.on('change', this.onChange);\n    }\n\n    if (this.props.size) {\n      this.yasqe.setSize(this.props.size.w, this.props.size.h);\n    } else {\n   //   this.yasqe.setSize(null, 400);\n    }\n\n    this.setBackdrop(this.props.backdrop);\n\n    const wrapper = this.yasqe.getWrapperElement();\n    if (wrapper) {\n      wrapper.addEventListener('click', this.onMouseClick);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: SparqlEditorProps) {\n    this.__componentWillRecieveProps(nextProps);\n  }\n\n  private __componentWillRecieveProps = debounce(function (this: SparqlEditor, nextProps: SparqlEditorProps) {\n    if (normalizeLineEndings(nextProps.query) !== normalizeLineEndings(this.getQuery().value)) {\n      this.setBackdrop(nextProps.backdrop);\n      this.setValue(nextProps.query);\n    }\n  });\n\n  componentWillUnmount() {\n    const wrapper = this.yasqe.getWrapperElement();\n    if (wrapper) {\n      wrapper.removeEventListener('click', this.onMouseClick);\n    }\n  }\n\n  private onMouseClick = (e: MouseEvent) => {\n    this.__onMouseClick(e);\n  };\n\n  private __onMouseClick = debounce((e: MouseEvent) => {\n    const coords = {\n      left: e.clientX + document.documentElement.scrollLeft,\n      top: e.clientY + document.documentElement.scrollTop,\n    };\n    const token = this.yasqe.getTokenAt(this.yasqe.coordsChar(coords));\n    const resourceIri = getResourceIriFromToken(token);\n    this.setState({ resourceIri, targetTop: coords.top, targetLeft: coords.left });\n  }, 300);\n\n  private renderPopover() {\n    const { popoverTemplate } = this.props;\n    const { resourceIri, targetTop, targetLeft, enablePopover } = this.state;\n    if (!resourceIri || !enablePopover) {\n      return null;\n    }\n    const content = createElement(TemplateItem, {\n      template: { source: popoverTemplate, options: { iri: resourceIri.value } },\n    });\n    return createElement(\n      Overlay,\n      { show: true },\n      createElement(\n        TargetedPopover,\n        {\n          id: 'sparql-editor-popover',\n          targetTop,\n          targetLeft,\n          popoverSide: 'bottom',\n          arrowAlignment: 'center',\n        },\n        content\n      )\n    );\n  }\n\n  render() {\n    return D.div({ id: this.id, className: styles.sparqlEditor }, this.renderPopover());\n  }\n\n  getQuery(): YasqeValue {\n    return {\n      value: this.yasqe.getValue(),\n      queryType: this.yasqe.getQueryType(),\n      queryMode: this.yasqe.getQueryMode(),\n    };\n  }\n\n  private setValue = (query: string) => {\n    if (typeof query === 'string') {\n      this.yasqe.setValue(query);\n    }\n  };\n\n  private onChange = (doc, change) => {\n    // call onChange only if change event was triggered by keyboard\n    if (this.props.onChange && change.origin !== 'setValue') {\n      this.props.onChange(this.getQuery());\n    }\n  };\n\n  private setBackdrop = (show: boolean) => {\n    this.yasqe.setBackdrop(isUndefined(show) ? false : show);\n  };\n}\n\n/**\n * We need this function to make sure that we have consistent line endings,\n * independently from OS defaults.\n */\nfunction normalizeLineEndings(str) {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\r\\n|\\r/g, '\\n');\n}\n\nfunction getResourceIriFromToken(token: YasguiYasqe.YasqeToken): Rdf.Iri | undefined {\n  const { prefixes } = token.state;\n  if (token.type === 'string-2') {\n    const [prefixKey, resource] = token.string.split(':');\n    if (resource) {\n      const prefix = prefixes[prefixKey];\n      if (prefix) {\n        return Rdf.iri(`${prefix}${resource}`);\n      }\n      try {\n        return resolveIris([token.string])[0];\n      } catch {\n        return undefined;\n      }\n    }\n  } else if (token.type === 'variable-3') {\n    const resourceIri = Rdf.fullIri(token.string);\n    if (!resourceIri.value.length) {\n      return undefined;\n    }\n    const prefixKey = findKey(prefixes, (prefix) => prefix === resourceIri.value);\n    return prefixKey ? undefined : resourceIri;\n  }\n  return undefined;\n}\n"],"sourceRoot":""}